{"version":3,"file":"js/app.6a062414.js","mappings":"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","sources":["webpack://asycuda-xml-automation/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://asycuda-xml-automation/./src/App.vue","webpack://asycuda-xml-automation/./src/App.vue?7ccd","webpack://asycuda-xml-automation/./src/components/HelloWorld.vue","webpack://asycuda-xml-automation/./src/composables/DatabaseConnector.js","webpack://asycuda-xml-automation/./src/composables/Utilities.js","webpack://asycuda-xml-automation/./src/composables/SweetAlertConnector.js","webpack://asycuda-xml-automation/./src/composables/PackageTypes.js","webpack://asycuda-xml-automation/./src/composables/BrokerConfiguration.js","webpack://asycuda-xml-automation/./src/components/VerifyDocumentData.vue","webpack://asycuda-xml-automation/./src/components/DocumentTableView.vue","webpack://asycuda-xml-automation/./src/composables/Currency.js","webpack://asycuda-xml-automation/./src/components/DocumentTableView.vue?62a9","webpack://asycuda-xml-automation/./src/components/VerifyDocumentData.vue?dffb","webpack://asycuda-xml-automation/./src/components/FileDragAndDrop.vue","webpack://asycuda-xml-automation/./src/components/FileDragAndDrop.vue?5d1d","webpack://asycuda-xml-automation/./src/components/CustomsEntry/CustomsEntryForm.vue","webpack://asycuda-xml-automation/./src/composables/IncoTerms.js","webpack://asycuda-xml-automation/./src/components/CustomsEntry/CustomsEntryForm.vue?dee5","webpack://asycuda-xml-automation/./src/constants/index.js","webpack://asycuda-xml-automation/./src/components/HelloWorld.vue?bd04","webpack://asycuda-xml-automation/./src/components/viewEntries.vue","webpack://asycuda-xml-automation/./src/components/viewEntries.vue?490e","webpack://asycuda-xml-automation/./src/components/EntryDetails.vue","webpack://asycuda-xml-automation/./src/components/EntryDetails.vue?5bc8","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationForm.vue","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionOne.vue","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionOne.vue?3263","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionTwo.vue","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionTwo.vue?a542","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionThree.vue","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionThree.vue?a395","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionFour.vue","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationSections/CustomsDeclarationSectionFour.vue?406b","webpack://asycuda-xml-automation/./src/components/CustomsDeclarationForm.vue?7321","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/BuyersPage.vue","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/BuyersPage.vue?9ee2","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/SellersPage.vue","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/SellersPage.vue?02b7","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/DeclarantsPage.vue","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/DeclarantsPage.vue?bf4b","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/VesselsPage.vue","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/VesselsPage.vue?b479","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/RateOfExchangePage.vue","webpack://asycuda-xml-automation/./src/components/ConfigurationPages/RateOfExchangePage.vue?449a","webpack://asycuda-xml-automation/./src/components/VehicleEntryCreatePage.vue","webpack://asycuda-xml-automation/./src/components/VehicleEntry.vue","webpack://asycuda-xml-automation/./src/composables/VehicleList.js","webpack://asycuda-xml-automation/./src/components/VehicleEntry.vue?a3fb","webpack://asycuda-xml-automation/./src/components/VehicleEntryCreatePage.vue?f004","webpack://asycuda-xml-automation/./src/components/VehicleEntryEditPage.vue","webpack://asycuda-xml-automation/./src/components/VehicleEntryEditPage.vue?cdd6","webpack://asycuda-xml-automation/./src/components/ApprovedClassificationEntries.vue","webpack://asycuda-xml-automation/./src/components/ApprovedClassificationEntries.vue?b283","webpack://asycuda-xml-automation/./src/components/PartialStorageEntries.vue","webpack://asycuda-xml-automation/./src/components/PartialStorageEntries.vue?64c8","webpack://asycuda-xml-automation/./src/components/FullStorageEntries.vue","webpack://asycuda-xml-automation/./src/components/FullStorageEntries.vue?8dc7","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/PerformanceDashboard.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/InvoiceAIPerformance.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/InvoiceAIPerformance.vue?d672","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationScoreChart.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationScoreChart.vue?da77","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationCodeMatchChart.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationCodeMatchChart.vue?871a","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/InvoiceBucketsPerformance.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/InvoiceBucketsPerformance.vue?a6cf","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationDailyPerformance.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationDailyPerformance.vue?e602","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/InvoiceLineBucketsPerformance.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/InvoiceLineBucketsPerformance.vue?5082","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/PerformanceDashboard.vue?163f","webpack://asycuda-xml-automation/./src/components/AllEntries.vue","webpack://asycuda-xml-automation/./src/components/AllEntries.vue?072b","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationAccuracyReport.vue","webpack://asycuda-xml-automation/./src/components/PerformanceAnalysis/ClassificationAccuracyReport.vue?18de","webpack://asycuda-xml-automation/./src/router/index.js","webpack://asycuda-xml-automation/./src/main.js","webpack://asycuda-xml-automation/webpack/bootstrap","webpack://asycuda-xml-automation/webpack/runtime/chunk loaded","webpack://asycuda-xml-automation/webpack/runtime/compat get default export","webpack://asycuda-xml-automation/webpack/runtime/define property getters","webpack://asycuda-xml-automation/webpack/runtime/global","webpack://asycuda-xml-automation/webpack/runtime/hasOwnProperty shorthand","webpack://asycuda-xml-automation/webpack/runtime/make namespace object","webpack://asycuda-xml-automation/webpack/runtime/node module decorator","webpack://asycuda-xml-automation/webpack/runtime/jsonp chunk loading","webpack://asycuda-xml-automation/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 2190,\n\t\"./af.js\": 2190,\n\t\"./ar\": 7218,\n\t\"./ar-dz\": 5785,\n\t\"./ar-dz.js\": 5785,\n\t\"./ar-kw\": 9417,\n\t\"./ar-kw.js\": 9417,\n\t\"./ar-ly\": 6904,\n\t\"./ar-ly.js\": 6904,\n\t\"./ar-ma\": 8617,\n\t\"./ar-ma.js\": 8617,\n\t\"./ar-ps\": 1318,\n\t\"./ar-ps.js\": 1318,\n\t\"./ar-sa\": 2699,\n\t\"./ar-sa.js\": 2699,\n\t\"./ar-tn\": 6789,\n\t\"./ar-tn.js\": 6789,\n\t\"./ar.js\": 7218,\n\t\"./az\": 3050,\n\t\"./az.js\": 3050,\n\t\"./be\": 8316,\n\t\"./be.js\": 8316,\n\t\"./bg\": 310,\n\t\"./bg.js\": 310,\n\t\"./bm\": 8884,\n\t\"./bm.js\": 8884,\n\t\"./bn\": 3469,\n\t\"./bn-bd\": 6672,\n\t\"./bn-bd.js\": 6672,\n\t\"./bn.js\": 3469,\n\t\"./bo\": 9118,\n\t\"./bo.js\": 9118,\n\t\"./br\": 3113,\n\t\"./br.js\": 3113,\n\t\"./bs\": 3626,\n\t\"./bs.js\": 3626,\n\t\"./ca\": 921,\n\t\"./ca.js\": 921,\n\t\"./cs\": 7799,\n\t\"./cs.js\": 7799,\n\t\"./cv\": 2828,\n\t\"./cv.js\": 2828,\n\t\"./cy\": 3521,\n\t\"./cy.js\": 3521,\n\t\"./da\": 6962,\n\t\"./da.js\": 6962,\n\t\"./de\": 3294,\n\t\"./de-at\": 6158,\n\t\"./de-at.js\": 6158,\n\t\"./de-ch\": 5960,\n\t\"./de-ch.js\": 5960,\n\t\"./de.js\": 3294,\n\t\"./dv\": 7963,\n\t\"./dv.js\": 7963,\n\t\"./el\": 1051,\n\t\"./el.js\": 1051,\n\t\"./en-au\": 998,\n\t\"./en-au.js\": 998,\n\t\"./en-ca\": 5931,\n\t\"./en-ca.js\": 5931,\n\t\"./en-gb\": 5930,\n\t\"./en-gb.js\": 5930,\n\t\"./en-ie\": 8081,\n\t\"./en-ie.js\": 8081,\n\t\"./en-il\": 1594,\n\t\"./en-il.js\": 1594,\n\t\"./en-in\": 3904,\n\t\"./en-in.js\": 3904,\n\t\"./en-nz\": 1507,\n\t\"./en-nz.js\": 1507,\n\t\"./en-sg\": 9409,\n\t\"./en-sg.js\": 9409,\n\t\"./eo\": 2177,\n\t\"./eo.js\": 2177,\n\t\"./es\": 4805,\n\t\"./es-do\": 1536,\n\t\"./es-do.js\": 1536,\n\t\"./es-mx\": 9791,\n\t\"./es-mx.js\": 9791,\n\t\"./es-us\": 6098,\n\t\"./es-us.js\": 6098,\n\t\"./es.js\": 4805,\n\t\"./et\": 6240,\n\t\"./et.js\": 6240,\n\t\"./eu\": 391,\n\t\"./eu.js\": 391,\n\t\"./fa\": 612,\n\t\"./fa.js\": 612,\n\t\"./fi\": 4220,\n\t\"./fi.js\": 4220,\n\t\"./fil\": 5570,\n\t\"./fil.js\": 5570,\n\t\"./fo\": 5466,\n\t\"./fo.js\": 5466,\n\t\"./fr\": 4461,\n\t\"./fr-ca\": 6306,\n\t\"./fr-ca.js\": 6306,\n\t\"./fr-ch\": 7081,\n\t\"./fr-ch.js\": 7081,\n\t\"./fr.js\": 4461,\n\t\"./fy\": 3484,\n\t\"./fy.js\": 3484,\n\t\"./ga\": 6957,\n\t\"./ga.js\": 6957,\n\t\"./gd\": 2978,\n\t\"./gd.js\": 2978,\n\t\"./gl\": 9866,\n\t\"./gl.js\": 9866,\n\t\"./gom-deva\": 5011,\n\t\"./gom-deva.js\": 5011,\n\t\"./gom-latn\": 4724,\n\t\"./gom-latn.js\": 4724,\n\t\"./gu\": 1601,\n\t\"./gu.js\": 1601,\n\t\"./he\": 9802,\n\t\"./he.js\": 9802,\n\t\"./hi\": 9358,\n\t\"./hi.js\": 9358,\n\t\"./hr\": 3907,\n\t\"./hr.js\": 3907,\n\t\"./hu\": 218,\n\t\"./hu.js\": 218,\n\t\"./hy-am\": 533,\n\t\"./hy-am.js\": 533,\n\t\"./id\": 2844,\n\t\"./id.js\": 2844,\n\t\"./is\": 7353,\n\t\"./is.js\": 7353,\n\t\"./it\": 6364,\n\t\"./it-ch\": 774,\n\t\"./it-ch.js\": 774,\n\t\"./it.js\": 6364,\n\t\"./ja\": 6008,\n\t\"./ja.js\": 6008,\n\t\"./jv\": 8221,\n\t\"./jv.js\": 8221,\n\t\"./ka\": 2417,\n\t\"./ka.js\": 2417,\n\t\"./kk\": 2071,\n\t\"./kk.js\": 2071,\n\t\"./km\": 6149,\n\t\"./km.js\": 6149,\n\t\"./kn\": 4572,\n\t\"./kn.js\": 4572,\n\t\"./ko\": 659,\n\t\"./ko.js\": 659,\n\t\"./ku\": 6285,\n\t\"./ku-kmr\": 9398,\n\t\"./ku-kmr.js\": 9398,\n\t\"./ku.js\": 6285,\n\t\"./ky\": 1609,\n\t\"./ky.js\": 1609,\n\t\"./lb\": 119,\n\t\"./lb.js\": 119,\n\t\"./lo\": 1748,\n\t\"./lo.js\": 1748,\n\t\"./lt\": 1973,\n\t\"./lt.js\": 1973,\n\t\"./lv\": 1347,\n\t\"./lv.js\": 1347,\n\t\"./me\": 3023,\n\t\"./me.js\": 3023,\n\t\"./mi\": 5747,\n\t\"./mi.js\": 5747,\n\t\"./mk\": 4341,\n\t\"./mk.js\": 4341,\n\t\"./ml\": 3840,\n\t\"./ml.js\": 3840,\n\t\"./mn\": 2058,\n\t\"./mn.js\": 2058,\n\t\"./mr\": 9182,\n\t\"./mr.js\": 9182,\n\t\"./ms\": 5197,\n\t\"./ms-my\": 9136,\n\t\"./ms-my.js\": 9136,\n\t\"./ms.js\": 5197,\n\t\"./mt\": 6408,\n\t\"./mt.js\": 6408,\n\t\"./my\": 1683,\n\t\"./my.js\": 1683,\n\t\"./nb\": 3141,\n\t\"./nb.js\": 3141,\n\t\"./ne\": 9344,\n\t\"./ne.js\": 9344,\n\t\"./nl\": 4703,\n\t\"./nl-be\": 4641,\n\t\"./nl-be.js\": 4641,\n\t\"./nl.js\": 4703,\n\t\"./nn\": 9873,\n\t\"./nn.js\": 9873,\n\t\"./oc-lnc\": 1217,\n\t\"./oc-lnc.js\": 1217,\n\t\"./pa-in\": 4612,\n\t\"./pa-in.js\": 4612,\n\t\"./pl\": 4457,\n\t\"./pl.js\": 4457,\n\t\"./pt\": 1089,\n\t\"./pt-br\": 9146,\n\t\"./pt-br.js\": 9146,\n\t\"./pt.js\": 1089,\n\t\"./ro\": 5950,\n\t\"./ro.js\": 5950,\n\t\"./ru\": 7292,\n\t\"./ru.js\": 7292,\n\t\"./sd\": 6774,\n\t\"./sd.js\": 6774,\n\t\"./se\": 7493,\n\t\"./se.js\": 7493,\n\t\"./si\": 3761,\n\t\"./si.js\": 3761,\n\t\"./sk\": 9711,\n\t\"./sk.js\": 9711,\n\t\"./sl\": 8558,\n\t\"./sl.js\": 8558,\n\t\"./sq\": 8633,\n\t\"./sq.js\": 8633,\n\t\"./sr\": 688,\n\t\"./sr-cyrl\": 7903,\n\t\"./sr-cyrl.js\": 7903,\n\t\"./sr.js\": 688,\n\t\"./ss\": 1991,\n\t\"./ss.js\": 1991,\n\t\"./sv\": 7020,\n\t\"./sv.js\": 7020,\n\t\"./sw\": 5891,\n\t\"./sw.js\": 5891,\n\t\"./ta\": 5714,\n\t\"./ta.js\": 5714,\n\t\"./te\": 206,\n\t\"./te.js\": 206,\n\t\"./tet\": 4768,\n\t\"./tet.js\": 4768,\n\t\"./tg\": 8276,\n\t\"./tg.js\": 8276,\n\t\"./th\": 7977,\n\t\"./th.js\": 7977,\n\t\"./tk\": 6928,\n\t\"./tk.js\": 6928,\n\t\"./tl-ph\": 8046,\n\t\"./tl-ph.js\": 8046,\n\t\"./tlh\": 1361,\n\t\"./tlh.js\": 1361,\n\t\"./tr\": 4367,\n\t\"./tr.js\": 4367,\n\t\"./tzl\": 627,\n\t\"./tzl.js\": 627,\n\t\"./tzm\": 2636,\n\t\"./tzm-latn\": 8148,\n\t\"./tzm-latn.js\": 8148,\n\t\"./tzm.js\": 2636,\n\t\"./ug-cn\": 1204,\n\t\"./ug-cn.js\": 1204,\n\t\"./uk\": 461,\n\t\"./uk.js\": 461,\n\t\"./ur\": 1366,\n\t\"./ur.js\": 1366,\n\t\"./uz\": 3454,\n\t\"./uz-latn\": 8374,\n\t\"./uz-latn.js\": 8374,\n\t\"./uz.js\": 3454,\n\t\"./vi\": 8572,\n\t\"./vi.js\": 8572,\n\t\"./x-pseudo\": 464,\n\t\"./x-pseudo.js\": 464,\n\t\"./yo\": 3709,\n\t\"./yo.js\": 3709,\n\t\"./zh-cn\": 5873,\n\t\"./zh-cn.js\": 5873,\n\t\"./zh-hk\": 7549,\n\t\"./zh-hk.js\": 7549,\n\t\"./zh-mo\": 2240,\n\t\"./zh-mo.js\": 2240,\n\t\"./zh-tw\": 405,\n\t\"./zh-tw.js\": 405\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","<template>\n  <div id=\"app\">\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">M.A.R.Y.</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                New Entry \n              </a>\n              <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                <router-link class=\"dropdown-item\" to=\"/\">Standard Entry</router-link>\n                <router-link class=\"dropdown-item\" to=\"/create-vehicle-entry\">Vehicle Entry</router-link>\n              </ul>\n              <!-- <router-link class=\"nav-link active\" to=\"/\">New Entry</router-link> -->\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/view-entries\">Stored and Not Classified</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/approved-classification-entries\">Classification Okay</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/partial-storage-entries\">Partial Storage </router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/full-storage-entries\">Full Storage </router-link>\n            </li>\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                Configuration\n              </a>\n              <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                <router-link class=\"dropdown-item\" to=\"/buyers\">Importers</router-link>\n                <router-link class=\"dropdown-item\" to=\"/sellers\">Shippers</router-link>\n                <router-link class=\"dropdown-item\" to=\"/declarants\">Declarants</router-link>\n                <router-link class=\"dropdown-item\" to=\"/vessels\">Vessels</router-link>\n                <router-link class=\"dropdown-item\" to=\"/rate-of-exchange\">Rates Of Exchnage</router-link>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n    \n    <!-- This is where routed components will be rendered -->\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  components: {\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  color: #2c3e50;\n}\nnav {\n  /* Style your navbar */\n}\nnav a {\n  text-decoration: none;\n  margin-right: 15px;\n  /* Style your links */\n}\nbody, html {\n  margin: 0;\n  padding: 0;\n}\n.navbar {\n  margin-bottom: 0; /* Ensures no additional space below navbar */\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=727d135c\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=727d135c&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div id=\"app\">\r\n        <div class=\"page-header-info-container\">\r\n            <div>\r\n                <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"verifyInvoiceData\">\r\n                    Invoice Split Screen\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"mergeAndOpenPDFs\">\r\n                    Open Invoices\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"openWaybill\">\r\n                    Open Waybill\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <div class=\"badge-container\">\r\n                    <h3>\r\n                        <span\r\n                            :class=\"[\r\n                                'badge',\r\n                                {\r\n                                    'bg-success': classificationStatus === 'Classification Completed',\r\n                                    'bg-warning text-dark': classificationStatus === 'Classification In Progress',\r\n                                    'bg-danger': classificationStatus === 'Not Classified',\r\n                                },\r\n                                'fixed-badge',\r\n                            ]\"\r\n                        >\r\n                            {{ this.classificationStatus }}\r\n                        </span>\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <VerifyDocumentData\r\n            :invoices=\"invoiceDataArray\"\r\n            :customsEntryForm=\"customsEntryForm\"\r\n            v-if=\"displayDocumentVerificationView\"\r\n            :pdfFiles=\"pdfFiles\"\r\n        />\r\n\r\n        <div v-if=\"!displayDocumentVerificationView\">\r\n            <h2>New Entry</h2>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-5\"></div>\r\n                <div class=\"col-md-2\">\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        v-model=\"referenceNumber\"\r\n                        placeholder=\"Enter Reference Number\"\r\n                        @input=\"validateInput\"\r\n                    />\r\n                </div>\r\n                <div class=\"col-md-5\"></div>\r\n            </div>\r\n            <div>\r\n                <div\r\n                    class=\"dropzone\"\r\n                    @dragover.prevent=\"dragOver\"\r\n                    @dragenter.prevent=\"dragEnter\"\r\n                    @dragleave.prevent=\"dragLeave\"\r\n                    @drop.prevent=\"handleDrop\"\r\n                >\r\n                    Please Upload Commercial Invoices\r\n                    <input\r\n                        type=\"file\"\r\n                        multiple\r\n                        @change=\"handleFileUpload\"\r\n                        style=\"display: none\"\r\n                        accept=\"application/pdf\"\r\n                        ref=\"invoices\"\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary\"\r\n                        @click=\"triggerFileInput('invoices')\"\r\n                    >\r\n                        Choose Files for Invoices\r\n                    </button>\r\n                    <input\r\n                        type=\"file\"\r\n                        @change=\"handleWaybillUpload\"\r\n                        style=\"display: none\"\r\n                        accept=\"application/pdf\"\r\n                        ref=\"waybill\"\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary upload-button\"\r\n                        @click=\"triggerFileInput('waybill')\"\r\n                    >\r\n                        Choose Files for Waybills\r\n                    </button>\r\n                    <!-- <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"uploadFiles\">\r\n                        Upload Files AWS\r\n                    </button> -->\r\n                    <button type=\"button\" class=\"btn btn-success upload-button\" @click=\"uploadInvoicesAndWaybills('https://mawi-updraded-api.wonderfulflower-f4234c00.eastus.azurecontainerapps.io/analyze-invoices-OCR-LLM', 'CLAUDE_LLM')\">\r\n                        Upload Files LLM\r\n                    </button>\r\n                    <!-- <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"uploadInvoicesAndWaybills()\">\r\n                        Upload Files GABRIEL\r\n                    </button> -->\r\n                    \r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <ul>\r\n                            <li v-for=\"(file, index) in selectedFiles\" :key=\"index\">\r\n                                {{ file.name }}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <ul>\r\n                            <li v-for=\"(file, index) in waybillFiles\" :key=\"index\">\r\n                                {{ file.name }}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <!-- <div class=\"container-fluid text-center\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <FileDragAndDrop />\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <FileDragAndDrop />\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n            <CustomsEntryForm\r\n                :customsEntryForm=\"customsEntryForm\"\r\n                @update-customs-entry-form=\"customsEntryForm = $event\"\r\n            />\r\n            <DocumentTableView\r\n                :invoiceDataArray=\"invoiceDataArray\"\r\n                :customsEntryForm=\"customsEntryForm\"\r\n                :documentVerificationFormat=\"false\"\r\n                :linesToBeDeleted=\"linesToBeDeleted\"\r\n            />\r\n            \r\n            <div v-if=\"selectedFiles.length\">\r\n                <h3>Entry Summary</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Number of Lines Read</th>\r\n                            <th>Total Invoices Value</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{{ this.totalNumberOfLines }}</td>\r\n                            <td>{{ this.totalFOBValue }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-primary\"\r\n                                    :disabled=\"entryButtonDisabled\"\r\n                                    @click=\"createInvoices(invoiceDataArray)\"\r\n                                >\r\n                                    Save Entry\r\n                                </button>\r\n                            </td>\r\n                            <!-- <td><button type=\"button\" class=\"btn btn-primary\" :disabled=\"thnCodesCompleted\" @click=\"generateWorkSheet\">Generate WorkSheet</button></td> -->\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as DatabaseConnector from \"@/composables/DatabaseConnector\";\r\nimport * as Utilities from \"@/composables/Utilities\";\r\nimport * as SweetAlertConnector from \"../composables/SweetAlertConnector\";\r\nimport * as PackageTypes from \"@/composables/PackageTypes\";\r\nimport * as Configuration from \"@/composables/BrokerConfiguration\";\r\nimport VerifyDocumentData from \"./VerifyDocumentData.vue\";\r\nimport DocumentTableView from \"./DocumentTableView.vue\";\r\nimport FileDragAndDrop from \"./FileDragAndDrop.vue\";\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport CustomsEntryForm from \"./CustomsEntry/CustomsEntryForm.vue\";\r\nimport { ENTRY_TYPES, ENTRY_STATUS } from \"../constants\";\r\nimport { CLASSIFICATION_STATUS, INVOICE_AI_MODELS } from \"../constants\";\r\n\r\nexport default {\r\n    /* eslint-disable */\r\n    name: \"App\",\r\n    components: {\r\n        CustomsEntryForm,\r\n        VerifyDocumentData,\r\n        DocumentTableView,\r\n        FileDragAndDrop\r\n    },\r\n    data() {\r\n        return {\r\n            displayDocumentVerificationView: false,\r\n            referenceNumber: \"\",\r\n            selectedFiles: [],\r\n            waybillFiles: [],\r\n            pdfFiles: [],\r\n            invoiceDataArray: [],\r\n            linesToBeDeleted: [],\r\n            isDragOver: false,\r\n            isValidReference: false,\r\n            invoicesDataExtractionCompleted: false,\r\n            waybillDataExtractionCompleted: false,\r\n            classificationCompleted: false,\r\n\r\n            waybillNumber: \"\",\r\n            waybillDate: new Date().toISOString().substr(0, 10),\r\n            modeOfTransport: \"\",\r\n\r\n            freightType: \"\",\r\n            marksAndNumbers: \"As Addressed\",\r\n            countryOfOrigin: \"\",\r\n            cpcCode: \"4000\",\r\n            npcCode: \"000\",\r\n\r\n            kindOfPackage: \"CT\",\r\n            numberOfPackages: \"\",\r\n\r\n            consignee: \"\",\r\n            shipper: \"\",\r\n            supplier: \"\",\r\n            totalCargoValue: 0.0,\r\n            totalNumberOfLines: 0,\r\n            freightCharge: 0.0,\r\n            rateOfExchange: 1.0,\r\n            netWeight: 0.0,\r\n            grossWeight: 0.0,\r\n\r\n            editableContent: \"0\",\r\n\r\n            countries: [],\r\n            modeOfTransportOOptions: [\"Air\", \"Ocean\"],\r\n            freightTypeOptions: [\"FCL\", \"LCL\", \"Bulk\", \"Break Bulk\"],\r\n            cpcCodeOptions: [\"4000\"],\r\n            npcCodeOptions: [\"000\"],\r\n            packageTypeOptions: [],\r\n\r\n            showModeofTransportDropdown: false,\r\n\r\n            invoicingProcessingStart: null,\r\n            invoicingProcessingEnd: null,\r\n            invoiceModelUtilized: \"\",\r\n\r\n            classificationProcessingStart: null,\r\n            classificationProcessingEnd: null,\r\n\r\n            customsEntryForm: {\r\n                exporters: [],\r\n                importers: [],\r\n                vessels: [],\r\n                ports: [],\r\n                declarants: [],\r\n                incotermsList: [],\r\n                ratesOfExchange: [],\r\n                importerId: \"\",\r\n                exporterId: \"\",\r\n                importerName: \"\",\r\n                exporterName: \"\",\r\n                importerTaxIdentificationNumber: \"\",\r\n                exporterTaxIdentificationNumber: \"\",\r\n                declarantId: \"\",\r\n                declarantTaxIdentificationNumber: \"\",\r\n                modeOfTransport: \"\",\r\n                freightType: \"\",\r\n                waybillNumber: \"\",\r\n                waybillDate: \"\",\r\n                estimatedArrivalDate: \"\",\r\n                vesselId: \"\",\r\n                vesselName: \"\",\r\n                incoTerms: \"\",\r\n                portOfDischargeId: \"\",\r\n                portOfDischargeName: \"\",\r\n                netWeight: 0.0,\r\n                grossWeight: 0.0,\r\n                numberOfPackages: 0,\r\n                packageType: \"\",\r\n                packageTypes: [],\r\n                marksAndNumbers: \"As Addressed\",\r\n                totalCargoValue: 0.0,\r\n                freightAmount: 0.0,\r\n                insuranceAmount: 0.0,\r\n                otherCharges: 0.0,\r\n                freightCurrency: \"USD\",\r\n                insuranceCurrency: \"USD\",\r\n                otherChargesCurrency: \"USD\",\r\n                insuranceRateOfExchange: 0.0,\r\n                otherChargesRateOfExchange: 0.0,\r\n                freightRateOfExchange: 0.0,\r\n                rateOfExchange: 0.0,\r\n                regimeType: \"\",\r\n                regimeTypeCode: \"\",\r\n                regimeTypeOptions: [],\r\n                depositAmount: 0.0,\r\n                containerCharges: 0.0,\r\n                additionalCharges: 0.0,\r\n                localFee: 0.0,\r\n                countryOfOrigin: \"\",\r\n                countryOfFinalDestination: \"TT\",\r\n                countryLastProvinance: \"\",\r\n                tradingCountry: \"\",\r\n            },\r\n        };\r\n    },\r\n    watch: {\r\n        \"customsEntryForm.countryOfOrigin\"(newCountry, oldCountry) {\r\n            this.invoiceDataArray.forEach((invoice) => {\r\n                invoice.lines.forEach((item) => {\r\n                    if (!item.country_of_origin || item.country_of_origin.trim().length === 0) {\r\n                        item.country_of_origin = newCountry;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        \"customsEntryForm.regimeType\"(newRegime) {\r\n            this.invoiceDataArray.forEach((invoice) => {\r\n                invoice.lines.forEach((item) => {\r\n                    const regimeData = this.customsEntryForm.regimeTypeOptions.find(\r\n                        (regime) => regime.regimeTypeId === newRegime\r\n                    );\r\n                    if(regimeData){\r\n                        item.cpcCode = regimeData.cpcCodes[0].cpcId;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        \"customsEntryForm.waybillDate\"(newDate) {\r\n            this.updateRates(newDate);\r\n        },\r\n        invoiceDataArray: {\r\n            handler: function (invoices) {\r\n                if (this.customsEntryForm.ratesOfExchange.length > 0) {\r\n                    invoices.forEach((invoice) => {\r\n                        this.$watch(\r\n                            () => invoice.currency,\r\n                            (newCurrency) => {\r\n                                if (newCurrency) {\r\n                                    invoice.rate_of_exchange = this.customsEntryForm.ratesOfExchange.find(\r\n                                        (rate) => rate.base_currency === newCurrency\r\n                                    ).rate;\r\n                                }\r\n                            },\r\n                            { deep: true }\r\n                        );\r\n                    });\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n    },\r\n\r\n    setup() {\r\n        return {};\r\n    },\r\n    mounted() {\r\n        this.packageTypeOptions = PackageTypes.usePackageTypes();\r\n        this.updateEntryFields(\"marksAndNumbers\", \"As Addressed\");\r\n        this.getTotalNumberOfLines();\r\n        this.getRegimeTypes();\r\n    },\r\n    computed: {\r\n        classificationStatus() {\r\n            if (this.invoiceDataArray.length === 0) return CLASSIFICATION_STATUS.NOT_CLASSIFIED;\r\n            return this.thnCodesCompleted ? CLASSIFICATION_STATUS.NOT_CLASSIFIED : CLASSIFICATION_STATUS.COMPLETED;\r\n        },\r\n        thnCodesCompleted() {\r\n            return this.invoiceDataArray.some((invoice) => {\r\n                return invoice.lines.some((line) => !line.tariff_code || line.tariff_code.trim() === \"\");\r\n            });\r\n        },\r\n        totalFOBValue() {\r\n            return this.invoiceDataArray\r\n                .reduce((acc, invoice) => acc + parseFloat(invoice.invoice_total), 0)\r\n                .toFixed(2);\r\n        },\r\n        entryButtonDisabled() {\r\n            return !(this.hasInvoiceNumber || this.waybillNumber.trim().length > 0 || this.consignee.trim().length > 0);\r\n        },\r\n        hasInvoiceNumber() {\r\n            for (let invoice of this.invoiceDataArray) {\r\n                if (invoice.invoice_number && invoice.invoice_number.trim().length > 0) {\r\n                    console.log(\"Invoice Number Found\");\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        availableCPCCodes() {\r\n            if (this.customsEntryForm.regimeTypeCode !== undefined && this.customsEntryForm.regimeTypeCode !== null) {\r\n                const regimeData = this.customsEntryForm.regimeTypeOptions.find(\r\n                    (regime) => regime.regimeTypeCode === this.customsEntryForm.regimeTypeCode\r\n                );\r\n                if (regimeData) {\r\n                    return regimeData.cpcCodes;\r\n                } else return [];\r\n            } else {\r\n                return this.customsEntryForm.regimeTypeOptions.flatMap((regime) => regime.cpcCodes);\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        verifyInvoiceData,\r\n        dataExtractionLoadingMessage(){\r\n            if(this.invoicesDataExtractionCompleted && this.waybillDataExtractionCompleted){\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert(\"Data Extraction Completed\");\r\n                if(!this.classificationCompleted){\r\n                    SweetAlertConnector.asyncLoadingAlert(\"Classifying Invoice Items...\");\r\n                }\r\n            }\r\n            else if(this.invoicesDataExtractionCompleted && !this.waybillDataExtractionCompleted){\r\n                // SweetAlertConnector.updateCurrentAlert(\"Invoice data read. Still Reading Waybill Data\");\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.asyncLoadingAlert(\"Invoice Data Read. Reading Waybill Data...\");\r\n            }\r\n            else if(!this.invoicesDataExtractionCompleted && this.waybillDataExtractionCompleted){\r\n                // SweetAlertConnector.updateCurrentAlert(\"Waybill data read. Still Reading Invoice Data\");\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.asyncLoadingAlert(\"Waybill Data Read. Reading Invoice Data...\");\r\n            }\r\n        },\r\n        triggerFileInput(refName) {\r\n            console.log(\"Triggering File Input\");\r\n            this.$refs[refName].click();\r\n        },\r\n        updateTariffCode(data, itemIndex, field, value) {\r\n            // console.log(\"Updating Tariff Code\");\r\n            // console.log(\"Item Index: \", itemIndex);\r\n            this.updateItem(data, itemIndex, field, value);\r\n            if (value === undefined || value === null || value.trim().length === 0 || value === \"N/A\") {\r\n                data.icdCharge = 0;\r\n                data.vatCharge = 0;\r\n                return;\r\n            }\r\n            console.log(\"Fetching charges for: \", value);\r\n            DatabaseConnector.getCommodityCharges(value.replace(/\\./g, \"\"))\r\n                .then((chargesResponse) => {\r\n                    let icdObject = chargesResponse.charges[\"import custom duty\"];\r\n                    const icdCharge = icdObject === undefined ? 0 : parseFloat(icdObject[0].charge_amount);\r\n                    let vatObject = chargesResponse.charges[\"value added tax\"];\r\n                    const vatCharge = vatObject === undefined ? 0 : parseFloat(vatObject[0].charge_amount);\r\n                    // console.log(\"ICD Charge: \", icdCharge);\r\n                    // console.log(\"VAT Charge: \", vatCharge);\r\n                    data.lines[itemIndex][\"icdCharge\"] = icdCharge;\r\n                    data.lines[itemIndex][\"vatCharge\"] = vatCharge;\r\n                    data.lines[itemIndex][\"commodityCodeStatus\"] = \"valid\";\r\n                    data.lines[itemIndex][\"commodity_description\"] = chargesResponse.description;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to get commodity charges:\", error);\r\n                    data.commodityCodeStatus = \"invalid\";\r\n                    data.icdCharge = 0;\r\n                    data.vatCharge = 0;\r\n                });\r\n        },\r\n        updateRates(shippedOnBoardDate) {\r\n            console.log(\"Updating Rates\");\r\n            DatabaseConnector.fetchRatesBasedOnShippedOnBoard(shippedOnBoardDate).then((rates) => {\r\n                console.log(\"Rates:\", rates);\r\n                this.customsEntryForm.ratesOfExchange = rates;\r\n                this.invoiceDataArray.forEach((invoice) => {\r\n                    if (invoice.currency) {\r\n                        console.log(\"Invoice Currency: \", invoice.currency);\r\n                        invoice.rate_of_exchange = rates.find((rate) => rate.base_currency === invoice.currency).rate;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        setDefaults() {\r\n            const regimeData = this.customsEntryForm.regimeTypeOptions.find(\r\n                (regime) => regime.regimeTypeCode === Configuration.defaultRegimeTypeCode\r\n            );\r\n            this.customsEntryForm.regimeType = regimeData.regimeTypeId;\r\n            console.log(\"Regime Data: \", regimeData);\r\n        },\r\n        async getRegimeTypes() {\r\n            DatabaseConnector.fetchCpcCodes(\"TT\").then((data) => {\r\n                this.customsEntryForm.regimeTypeOptions = data;\r\n                const regimeData = data.find(\r\n                    (regime) => regime.regimeTypeCode === Configuration.getConfigurations().defaultRegimeType\r\n                );\r\n                this.customsEntryForm.regimeType = regimeData.regimeTypeId;\r\n            });\r\n        },\r\n        setInvoiceLineWorksheetData() {\r\n            let promises = [];\r\n            this.invoiceDataArray.forEach((invoice) => {\r\n                invoice.lines.forEach((item) => {\r\n                    item.cpcCodeName = this.availableCPCCodes.find((cpc) => cpc.cpcId === item.cpcCode)?.code;\r\n                    const promise = DatabaseConnector.getCommodityCharges(item.tariff_code.replace(/\\./g, \"\")).then(\r\n                        (chargesResponse) => {\r\n                            let formattedCharges = Utilities.formatCharges(chargesResponse.charges);\r\n                            item.commodity = {\r\n                                code: item.tariff_code.replace(/\\./g, \"\"),\r\n                                id: chargesResponse.id,\r\n                                charges: formattedCharges,\r\n                            };\r\n                            // console.log(\"Commodity Charges: \", item.commodity)\r\n                        }\r\n                    );\r\n                    promises.push(promise);\r\n                });\r\n            });\r\n\r\n            return Promise.all(promises);\r\n        },\r\n        generateWorkSheet() {\r\n            console.log(\"Generating WorkSheet\");\r\n            this.setInvoiceLineWorksheetData();\r\n            const worksheetObject = Utilities.formatWorkSheetData(\r\n                this.referenceNumber,\r\n                \"TT\",\r\n                \"Ramnarine Rampersad\",\r\n                \"BR0285\",\r\n                this.customsEntryForm.regimeTypeCode,\r\n                this.customsEntryForm.importerName,\r\n                this.customsEntryForm.importerTaxIdentificationNumber,\r\n                this.customsEntryForm.exporterName,\r\n                this.customsEntryForm.exporterTaxIdentificationNumber,\r\n                this.customsEntryForm.vesselName,\r\n                this.customsEntryForm.portOfDischargeName,\r\n                this.customsEntryForm.depositAmount,\r\n                this.customsEntryForm.containerCharges,\r\n                this.customsEntryForm.additionalCharges,\r\n                this.customsEntryForm.localFee\r\n            );\r\n            const invoiceSummary = Utilities.formatInvoiceData(\r\n                this.invoiceDataArray,\r\n                this.customsEntryForm.freightAmount,\r\n                this.totalFOBValue\r\n            );\r\n            worksheetObject.invoices = invoiceSummary;\r\n            console.log(\"Worksheet Object: \", worksheetObject);\r\n            DatabaseConnector.generateWorkSheet(worksheetObject)\r\n                .then((worksheetResponse) => {\r\n                    SweetAlertConnector.closeCurrentAlert();\r\n                    SweetAlertConnector.showSuccessAlert(\"Worksheet Generated Successfully!\");\r\n                    const fileURL = window.URL.createObjectURL(\r\n                        new Blob([worksheetResponse], {\r\n                            type: \"application/pdf\",\r\n                        })\r\n                    );\r\n                    const fileLink = document.createElement(\"a\");\r\n                    const fileName = `Worksheet - ${this.entryDetails?.entry_number}.pdf`;\r\n                    fileLink.href = fileURL;\r\n                    fileLink.setAttribute(\"download\", fileName);\r\n                    document.body.appendChild(fileLink);\r\n                    fileLink.click();\r\n                    fileLink.remove();\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to generate worksheet:\", error);\r\n                    SweetAlertConnector.showErrorAlert(\"Failed to generate worksheet!\");\r\n                });\r\n        },\r\n        insertFullStops(numberString) {\r\n            if (numberString.length !== 11) {\r\n                console.log(\"The string must contain exactly 11 numbers.\", numberString);\r\n                return \"\";\r\n            }\r\n\r\n            return numberString.slice(0, 4) + \".\" + numberString.slice(4, 6) + \".\" + numberString.slice(6, 8) + \".\" + numberString.slice(8);\r\n        },\r\n        convertAWSData(invoices) {\r\n            return invoices\r\n                .map((invoiceArray) => {\r\n                    return invoiceArray.map((invoice) => {\r\n                        const summary = invoice.summary_fields;\r\n                        const items = invoice.line_items.map((line) => {\r\n                            // Initialize a temporary storage for the fields\r\n                            const tempItem = {\r\n                                product_code: \"\",\r\n                                quantity: \"\",\r\n                                unit_price: \"\",\r\n                                description: \"\",\r\n                                extension_price: \"\",\r\n                                tariff_code: \"\",\r\n                            };\r\n\r\n                            // Loop through each object in the line array and assign values based on field_type\r\n                            line.forEach((item) => {\r\n                                switch (item.field_type) {\r\n                                    case \"PRODUCT_CODE\":\r\n                                        tempItem.product_code = item.cell_data.text;\r\n                                        break;\r\n                                    case \"QUANTITY\":\r\n                                        tempItem.quantity = item.cell_data.text;\r\n                                        break;\r\n                                    case \"UNIT_PRICE\":\r\n                                        tempItem.unit_price = item.cell_data.text;\r\n                                        break;\r\n                                    case \"ITEM\":\r\n                                        tempItem.description = item.cell_data.text;\r\n                                        break;\r\n                                    case \"PRICE\":\r\n                                        tempItem.extension_price = item.cell_data.text;\r\n                                        break;\r\n                                    case \"recommended_commodity_code\":\r\n                                        console.log(\"THN Code: \", item.code);\r\n                                        tempitem.tariff_code = this.insertFullStops(item.code.toString());\r\n                                        break;\r\n                                }\r\n                            });\r\n                            console.log(\"Item: \", line);\r\n                            console.log(\"Temp Item: \", tempItem);\r\n                            return tempItem;\r\n                        });\r\n\r\n                        return {\r\n                            vendor_name: summary.VENDOR_NAME,\r\n                            subtotal: summary.SUBTOTAL,\r\n                            invoice_total: summary.TOTAL,\r\n                            customer_name: summary.RECEIVER_NAME,\r\n                            invoice_date: summary.INVOICE_RECEIPT_DATE,\r\n                            invoice_number: summary.INVOICE_RECEIPT_ID,\r\n                            lines: items,\r\n                        };\r\n                    });\r\n                })\r\n                .flat();\r\n        },\r\n        formatInvoiceData() {\r\n            const allcpcCodes = this.customsEntryForm.regimeTypeOptions.flatMap((regime) => regime.cpcCodes);\r\n            const defaultCPCId = allcpcCodes.find(\r\n                (cpc) => cpc.code === Configuration.getConfigurations().defaultCPCCode\r\n            ).cpcId;\r\n            console.log(\"Before Update\", this.invoiceDataArray);\r\n            this.renameInvoiceObjectKeys();\r\n            console.log(\"After Update\", this.invoiceDataArray);\r\n            console.log(\"All CPC Codes: \", allcpcCodes);\r\n            console.log(\"Default CPC Code: \", defaultCPCId);\r\n            this.invoiceDataArray.forEach((invoice) => {\r\n                invoice.invoice_total = invoice.invoice_total ? this.parseFloatFromString(invoice.invoice_total) : (invoice.invoice_exworks_amount ? this.parseFloatFromString(invoice.invoice_exworks_amount) : 0.00)\r\n                invoice.inland = invoice.invoice_internal_freight_amount ? this.parseFloatFromString(invoice.invoice_internal_freight_amount) : 0.00;\r\n                invoice.insurance = invoice.invoice_insurance_amount ? this.parseFloatFromString(invoice.invoice_insurance_amount): 0.00;\r\n                invoice.otherCharges = invoice.invoice_other_charges_amount ? this.parseFloatFromString(invoice.invoice_other_charges_amount) : 0.00;\r\n                invoice.final_total = this.parseFloatFromString(invoice.final_total);\r\n                invoice.invoice_number = invoice.invoice_id\r\n                console.log(\"Invoice Date: \", invoice.invoice_date)\r\n                invoice.invoice_date = invoice.invoice_date ? Utilities.getDateStringInputField(Utilities.parseDate(invoice.invoice_date)) : null;\r\n                console.log(\"Invoice Date: \", invoice.invoice_date)\r\n                invoice.currency = \"USD\";\r\n                if(invoice.lines !== undefined && invoice.lines !== null){\r\n                    invoice?.lines.forEach((item) => {\r\n                        item.country_of_origin = \"\";\r\n                        item.quantity = this.parseFloatFromString(item.quantity);\r\n                        item.unit_price = this.parseFloatFromString(item.unit_price);\r\n                        item.extension_price = this.parseFloatFromString(item.amount).toFixed(2);\r\n                        item.vatApplicable = true;\r\n                        item.cpcCode = defaultCPCId;\r\n                        item.npcCode = \"000\";\r\n                        // item.vat_applicable = item.vat_applicable === 'Yes'\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        renameInvoiceObjectKeys() {\r\n            for (let i = 0; i < this.invoiceDataArray.length; i++) {\r\n                let { invoice_items: lines, ...rest } = this.invoiceDataArray[i];\r\n                this.invoiceDataArray[i] = { lines, ...rest };\r\n            }\r\n        },\r\n        getTotalNumberOfLines() {\r\n            let total = 0;\r\n            for (let invoice of this.invoiceDataArray) {\r\n                total += invoice.lines ? invoice.lines.length : 0;\r\n            }\r\n            this.totalNumberOfLines = total;\r\n        },\r\n        calculateTotalCargoValue() {\r\n            let total = 0;\r\n            for (let invoice of this.invoiceDataArray) {\r\n                total += this.parseFloatFromString(invoice.invoice_total);\r\n            }\r\n            this.customsEntryForm.totalCargoValue = total;\r\n        },\r\n        validateIntegerInput(event) {\r\n            // Get the entered text\r\n            let newText = event.target.innerText.trim();\r\n\r\n            // Check if the entered text is a valid integer\r\n            if (/^\\d+$/.test(newText)) {\r\n                // Update the content if it's a valid integer\r\n                this.editableContent = newText;\r\n            } else {\r\n                // Revert to the previous content if it's not a valid integer\r\n                event.target.innerText = this.editableContent;\r\n            }\r\n            this.moveCursorToEnd(event.target);\r\n        },\r\n        updateEntryFields(fieldName, value) {\r\n            this[fieldName] = value;\r\n        },\r\n        selectOption(option) {\r\n            this.$refs.editableDiv.innerText = option;\r\n            this.showModeofTransportDropdown = false;\r\n        },\r\n        verifyData(data) {\r\n            if (data === undefined || data === null || data === \"\") {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        validateData() {\r\n            console.log(\"Importer ID: \", this.verifyData(this.customsEntryForm.importerId));\r\n            if (!this.verifyData(this.customsEntryForm.importerId)) {\r\n                SweetAlertConnector.showErrorAlert(\"Please select an importer\");\r\n                return false;\r\n            }\r\n            if (!this.verifyData(this.customsEntryForm.exporterId)) {\r\n                SweetAlertConnector.showErrorAlert(\"Please select an exporter\");\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        async saveFiles() {\r\n            console.log(\"Saving Files...\");\r\n            const formData = new FormData();\r\n            formData.append(\"reference\", this.referenceNumber);\r\n            this.selectedFiles.forEach((file) => {\r\n                formData.append(\"files\", file);\r\n            });\r\n            let promises = [DatabaseConnector.uploadFiles(formData)];\r\n\r\n            if(this.waybillFiles.length > 0){\r\n                const waybillFormData = new FormData();\r\n                waybillFormData.append(\"reference\", this.referenceNumber);\r\n                this.waybillFiles.forEach((file) => {\r\n                    waybillFormData.append(\"files\", file);\r\n                });\r\n                promises.push(DatabaseConnector.uploadFiles(waybillFormData));\r\n            }\r\n\r\n            return Promise.all(promises)\r\n                .then(([invoiceResponse, waybillResponse]) => {\r\n                    const fileResposnse = {\r\n                        invoiceFiles: invoiceResponse,\r\n                        waybillFiles: waybillResponse && waybillResponse[0] && waybillResponse[0].fileUrl ? waybillResponse[0].fileUrl : \"\",\r\n                    };\r\n                    return fileResposnse;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to upload the files:\", error);\r\n                });\r\n        },\r\n        async createInvoices(invoiceDataArray) {\r\n            if (!this.validateData()) {\r\n                return;\r\n            }\r\n\r\n            const entryData = {\r\n                referenceNumber: this.referenceNumber,\r\n                waybillNumber: this.customsEntryForm.waybillNumber,\r\n                waybillDate: this.customsEntryForm.waybillDate,\r\n                estimatedArrivalDate: this.customsEntryForm.estimatedArrivalDate,\r\n                modeOfTransport: this.customsEntryForm.modeOfTransport,\r\n                freightType: this.customsEntryForm.freightType,\r\n                marksAndNumbers: this.customsEntryForm.marksAndNumbers,\r\n                countryOfOrigin: this.customsEntryForm.countryOfOrigin,\r\n                countryOfFinalDestination: this.customsEntryForm.countryOfFinalDestination,\r\n                countryLastProvenance: this.customsEntryForm.countryLastProvinance,\r\n                tradingCountry: this.customsEntryForm.tradingCountry,\r\n                kindOfPackage: this.customsEntryForm.packageType,\r\n                numberOfPackages: this.customsEntryForm.numberOfPackages,\r\n                totalCargoValue: this.customsEntryForm.totalCargoValue,\r\n                freightCharge: this.customsEntryForm.freightAmount ?? 0,\r\n                insuranceAmount: this.customsEntryForm.insuranceAmount ?? 0,\r\n                otherCharges: this.customsEntryForm.otherCharges ?? 0,\r\n                freightCurrency: this.customsEntryForm.freightCurrency,\r\n                insuranceCurrency: this.customsEntryForm.insuranceCurrency,\r\n                otherChargesCurrency: this.customsEntryForm.otherChargesCurrency,\r\n                rateOfExchange: this.customsEntryForm.rateOfExchange,\r\n                netWeight: this.customsEntryForm.netWeight,\r\n                grossWeight: this.customsEntryForm.grossWeight,\r\n                invoiceList: invoiceDataArray,\r\n\r\n                declarant: this.customsEntryForm.declarantId,\r\n                incoTerms: this.customsEntryForm.incoTerms,\r\n                importer: this.customsEntryForm.importerId,\r\n                shipper: this.customsEntryForm.exporterId,\r\n                vessel: this.customsEntryForm.vesselId,\r\n                portOfDischarge: this.customsEntryForm.portOfDischargeId,\r\n                regimeType: this.customsEntryForm.regimeType,\r\n                deposit: this.customsEntryForm.depositAmount,\r\n                containerCharges: this.customsEntryForm.containerCharges,\r\n                additionalCharges: this.customsEntryForm.additionalCharges,\r\n                localFee: this.customsEntryForm.localFee,\r\n                entryType: ENTRY_TYPES.STANDARD,\r\n                classificationStatus: this.classificationStatus,\r\n                classificationApproved: 0,\r\n                classificationApprovedBy: \"\",\r\n                entryStatus: ENTRY_STATUS.STORED_AND_NOT_CLASSIFIED\r\n            };\r\n            console.log(\"Entry Data 1: \", entryData);\r\n            try {\r\n                SweetAlertConnector.showLoadingAlert(\"Saving your Entry...\");\r\n                this.saveFiles()\r\n                    .then((filesResponse) => {\r\n                        console.log(\"Files saved successfully:\", filesResponse);\r\n                        entryData.files = filesResponse.invoiceFiles;\r\n                        entryData.waybillFiles = filesResponse.waybillFiles;\r\n                        DatabaseConnector.createCommercialInvoice(entryData)\r\n                            .then((response) => {\r\n                                console.log(\"Entry created successfully:\", response);\r\n                                const totalFileSize = this.selectedFiles.reduce((sum, file) => sum + file.size, 0);\r\n                                this.saveInvoicePerformanceMetric(this.invoicingProcessingStart, this.invoicingProcessingEnd, this.totalNumberOfLines, this.invoiceDataArray.length, totalFileSize, response.entryId);\r\n                                this.saveClassificationPerformanceMetric(this.classificationProcessingStart, this.classificationProcessingEnd, this.invoiceDataArray.length, this.totalNumberOfLines, response.entryId);\r\n                                this.redirectToEntryDetails(response.entryId);\r\n                                SweetAlertConnector.closeCurrentAlert();\r\n                                SweetAlertConnector.showSuccessAlert(\"Entry created successfully\");\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(\"Failed to create the Entry:\", error);\r\n                                SweetAlertConnector.showErrorAlert(\"Failed to create the Entry. Please try again.\");\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Failed to save the files:\", error);\r\n                        SweetAlertConnector.showErrorAlert(\"Failed to save the files. Please try again.\");\r\n                    });\r\n            } catch (error) {\r\n                console.error(\"Failed to create the invoice:\", error);\r\n                SweetAlertConnector.showErrorAlert(\"Failed to create the Entry. Please try again.\");\r\n            }\r\n        },\r\n        redirectToEntryDetails(entryId) {\r\n            this.$router.push({ name: \"EntryDetails\", params: { entryId } });\r\n        },\r\n        moveCursorToEnd(element) {\r\n            const range = document.createRange();\r\n            const selection = window.getSelection();\r\n            range.selectNodeContents(element);\r\n            range.collapse(false); // Collapse range to end\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n        },\r\n        validateInput() {\r\n            this.isValidReference = this.referenceNumber.trim().length > 0;\r\n        },\r\n        handleFileUpload(event) {\r\n            if (!this.isValidReference) return;\r\n            this.selectedFiles = Array.from(event.target.files);\r\n            this.createFileUrl();\r\n        },\r\n        handleWaybillUpload(event) {\r\n            if (!this.isValidReference) return;\r\n            this.waybillFiles = Array.from(event.target.files);\r\n        },\r\n        createFileUrl() {\r\n            for (let file of this.selectedFiles) {\r\n                if (file.type === \"application/pdf\") {\r\n                    const url = URL.createObjectURL(file);\r\n                    this.pdfFiles.push({\r\n                        name: file.name,\r\n                        url: url,\r\n                    });\r\n                } else {\r\n                    alert(`File \"${file.name}\" is not a valid PDF file.`);\r\n                }\r\n            }\r\n        },\r\n        async openWaybill(){\r\n            if (this.waybillFiles.length === 0) {\r\n                SweetAlertConnector.showErrorAlert('No waybills Uploaded');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // Assuming only one file is selected for this function\r\n                const file = this.waybillFiles[0];\r\n                \r\n                // Convert the file into an ArrayBuffer\r\n                const arrayBuffer = await file.arrayBuffer();\r\n                \r\n                // Convert the ArrayBuffer into a Blob\r\n                const blob = new Blob([arrayBuffer], { type: 'application/pdf' });\r\n                \r\n                // Create a URL for the Blob\r\n                const url = URL.createObjectURL(blob);\r\n                \r\n                // Open a new window and display the PDF in an iframe\r\n                const newWindow = window.open('', '_blank', 'width=800,height=600');\r\n\r\n                if (newWindow) {\r\n                    newWindow.document.write(`<iframe src=\"${url}\" style=\"width:100%; height:100%;\" frameborder=\"0\"></iframe>`);\r\n                    newWindow.document.title = \"PDF Document\";\r\n                } else {\r\n                    console.error('Failed to open new window.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                SweetAlertConnector.showErrorAlert('Failed to open PDF!');\r\n            }\r\n        },\r\n        async mergeAndOpenPDFs() {\r\n            if (this.selectedFiles.length === 0) {\r\n                SweetAlertConnector.showErrorAlert('Please upload at least one file.');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const pdfDocs = await Promise.all(\r\n                    this.selectedFiles.map(async file => {\r\n                        const arrayBuffer = await file.arrayBuffer();\r\n                        return PDFDocument.load(arrayBuffer);\r\n                    })\r\n                );\r\n\r\n                const mergedPdf = await PDFDocument.create();\r\n\r\n                for (const pdfDoc of pdfDocs) {\r\n                    const copiedPages = await mergedPdf.copyPages(pdfDoc, pdfDoc.getPageIndices());\r\n                    copiedPages.forEach(page => mergedPdf.addPage(page));\r\n                }\r\n\r\n                const mergedPdfBytes = await mergedPdf.save();\r\n                const blob = new Blob([mergedPdfBytes], { type: 'application/pdf' });\r\n                const url = URL.createObjectURL(blob);\r\n                const newWindow = window.open('', '_blank', 'width=800,height=600');\r\n\r\n                if (newWindow) {\r\n                    newWindow.document.write(`<iframe src=\"${url}\" style=\"width:100%; height:100%;\" frameborder=\"0\"></iframe>`);\r\n                    newWindow.document.title = \"Merged PDF\";\r\n                } else {\r\n                    console.error('Failed to open new window.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        },\r\n        dragOver(event) {\r\n            if (!this.isValidReference) return;\r\n            this.isDragOver = true;\r\n        },\r\n        dragEnter(event) {\r\n            if (!this.isValidReference) return;\r\n            this.isDragOver = true;\r\n        },\r\n        dragLeave(event) {\r\n            if (!this.isValidReference) return;\r\n            this.isDragOver = false;\r\n        },\r\n        async saveClassificationPerformanceMetric(processingStart, processingEnd, numberOfInvoices, numberOfLines, entryId) {\r\n            const processingTime = (processingEnd - processingStart) / 1000; // Time in seconds\r\n            const metrics = {\r\n                entry_id: entryId,\r\n                processing_start: processingStart.toISOString(),\r\n                processing_end: processingEnd.toISOString(),\r\n                processing_time: processingTime,\r\n                number_of_invoices: numberOfInvoices,\r\n                number_of_lines: numberOfLines,\r\n                \r\n            };\r\n            console.log('Classification Performance Metrics: ', metrics);\r\n            await DatabaseConnector.sendClassificationPerformanceMetrics(metrics);\r\n            console.log('Classification Performance Metrics saved successfully.');\r\n        },\r\n        async saveInvoicePerformanceMetric(processingStart , processingEnd, numberOfLines, numberOfInvoices, fileSize, entryId){\r\n            const processingTime = (processingEnd - processingStart) / 1000; // Time in seconds\r\n            const metrics = {\r\n                file: {\r\n                    size: fileSize,\r\n                },\r\n                entryId: entryId,\r\n                processing_start: processingStart.toISOString(),\r\n                processing_end: processingEnd.toISOString(),\r\n                processing_time: processingTime,\r\n                number_of_lines: numberOfLines,\r\n                number_of_invoices: numberOfInvoices,\r\n                status: 'success',\r\n                error_message: null,\r\n                model_utlized: this.invoiceModelUtilized,\r\n            };\r\n            console.log('Invoice AI Performance Metrics: ', metrics);\r\n            await DatabaseConnector.sendInvoiceAIPerformanceMetrics(metrics);\r\n            console.log('Invoice AI Performance Metrics saved successfully.');\r\n        },\r\n        readWaybillModelClaude(){\r\n            const formData = new FormData();\r\n            this.waybillFiles.forEach((file) => {\r\n                formData.append(\"waybill\", file);\r\n            });\r\n            DatabaseConnector.readWaybillClaude(formData).then((response) => {\r\n                this.waybillDataExtractionCompleted = true;\r\n                this.dataExtractionLoadingMessage();\r\n                const waybillData = response[0]\r\n                console.log(\"Waybill Data\", waybillData)\r\n                this.customsEntryForm.waybillNumber = waybillData.waybill_number\r\n                this.customsEntryForm.numberOfPackages = this.parseFloatFromString(waybillData.number_of_packages);\r\n                this.customsEntryForm.modeOfTransport = waybillData.mode_of_transport\r\n\r\n                // Find closest match for importer\r\n                const selectedImporter = Utilities.findClosestMatch(waybillData.consignee_name, this.customsEntryForm.importers)\r\n                console.log(\"Selected Importer\", selectedImporter)\r\n                this.customsEntryForm.importerId = selectedImporter.id\r\n\r\n                // Find closest match for exporter\r\n                const selectedExporter = Utilities.findClosestMatch(waybillData.shipper_name, this.customsEntryForm.exporters) \r\n                console.log(\"Selected Exporter\", selectedExporter)\r\n                this.customsEntryForm.exporterId = selectedExporter.id\r\n\r\n                // Find closest match for vessel\r\n                const selectedVessel = Utilities.findClosestMatch(waybillData.vessel_name, this.customsEntryForm.vessels)\r\n                console.log(\"Selected Vessel\", selectedVessel)\r\n                this.customsEntryForm.vesselId = selectedVessel.id\r\n\r\n                // Find closest match for port of discharge\r\n                const selectedPort = Utilities.findClosestMatch(waybillData.port_of_discharge, this.customsEntryForm.ports)\r\n                console.log(\"Selected Port\", selectedPort)\r\n                this.customsEntryForm.portOfDischargeId = selectedPort.id\r\n\r\n                const shippedOnBoardString = waybillData.shipment_date;\r\n                try{\r\n                    const parsedDate = Utilities.parseDate(shippedOnBoardString)\r\n                    this.customsEntryForm.waybillDate = Utilities.formatDateString(parsedDate);\r\n                }\r\n                catch(error){\r\n                    console.error(\"Failed to parse date\", error)\r\n                }\r\n\r\n                if(waybillData.total_amount !== undefined && waybillData.total_amount !== null && waybillData.total_amount.trim().length > 0){\r\n                    const freightCharge = Utilities.parseFreightCharges(waybillData.total_amount);\r\n                    this.customsEntryForm.freightAmount = freightCharge;\r\n                }\r\n\r\n                if(waybillData.gross_weight !== undefined && waybillData.gross_weight !== null){\r\n                    this.customsEntryForm.grossWeight = this.parseFloatFromString(waybillData.gross_weight)\r\n                }\r\n\r\n                if(waybillData.package_type !== undefined && waybillData.package_type !== null){\r\n                    const selectedPackageType = Utilities.findClosestMatch(waybillData.package_type, this.customsEntryForm.packageTypes, 'text')\r\n                    console.log(\"Selected Package Type\", selectedPackageType)\r\n                    this.customsEntryForm.packageType = selectedPackageType.value\r\n                }\r\n\r\n                if(waybillData.country_of_origin !== undefined && waybillData.country_of_origin !== null){\r\n                    \r\n                    this.customsEntryForm.countryOfOrigin = waybillData.country_of_origin\r\n                }\r\n                if(waybillData.freight_type !== undefined && waybillData.freight_type !== null){\r\n                    const allFreightTypes = this.customsEntryForm.modeOfTransportOOptions.flatMap(transport => \r\n                        transport.freightTypes.map(type => ({ name: type.name }))\r\n                    );\r\n                    console.log(\"All Freight Types\", allFreightTypes)\r\n                    console.log(\"Waybill Freight Type\", waybillData.freight_type)\r\n                    const selectedFreightType = Utilities.findClosestMatch(waybillData.freight_type, allFreightTypes)\r\n                    console.log(\"Selected Freight Type\", selectedFreightType)\r\n                    this.customsEntryForm.freightType = selectedFreightType.name\r\n                }\r\n            }).catch((error) => {\r\n                console.error(\"Failed to read waybill model\", error)\r\n                SweetAlertConnector.showErrorAlert(\"Failed to read waybill model. Please try again.\")\r\n            })\r\n        },\r\n        readWaybillModel(){\r\n            const formData = new FormData();\r\n            this.waybillFiles.forEach((file) => {\r\n                formData.append(\"files\", file);\r\n            });\r\n            DatabaseConnector.readWaybillModel(formData).then((response) => {\r\n                this.waybillDataExtractionCompleted = true;\r\n                this.dataExtractionLoadingMessage();\r\n                const waybillData = response[0]\r\n                console.log(\"Waybill Data\", waybillData)\r\n                this.customsEntryForm.waybillNumber = waybillData.waybill_number\r\n                this.customsEntryForm.numberOfPackages = this.parseFloatFromString(waybillData.number_of_packages);\r\n                this.customsEntryForm.modeOfTransport = waybillData.mode_of_transport\r\n                const selectedImporter = Utilities.findClosestMatch(waybillData.consignee, this.customsEntryForm.importers)\r\n                console.log(\"Selected Importer\", selectedImporter)\r\n                this.customsEntryForm.importerId = selectedImporter.id\r\n\r\n                const selectedExporter = Utilities.findClosestMatch(waybillData.exporter, this.customsEntryForm.exporters)\r\n                console.log(\"Selected Exporter\", selectedExporter)\r\n                this.customsEntryForm.exporterId = selectedExporter.id\r\n\r\n                const selectedVessel = Utilities.findClosestMatch(waybillData.vessel, this.customsEntryForm.vessels)\r\n                console.log(\"Selected Vessel\", selectedVessel)\r\n                this.customsEntryForm.vesselId = selectedVessel.id\r\n\r\n                const selectedPort = Utilities.findClosestMatch(waybillData.port_of_discharge, this.customsEntryForm.ports)\r\n                console.log(\"Selected Port\", selectedPort)\r\n                this.customsEntryForm.portOfDischargeId = selectedPort.id\r\n\r\n                const shippedOnBoardString = waybillData.shipped_on_board_date;\r\n                try{\r\n                    const parsedDate = Utilities.parseDate(shippedOnBoardString)\r\n                    this.customsEntryForm.waybillDate = Utilities.formatDateString(parsedDate);\r\n                }\r\n                catch(error){\r\n                    console.error(\"Failed to parse date\", error)\r\n                }\r\n\r\n                if(waybillData.freight_charges !== undefined && waybillData.freight_charges !== null && waybillData.freight_charges.trim().length > 0){\r\n                    const freightCharge = Utilities.parseFreightCharges(waybillData.freight_charges);\r\n                    this.customsEntryForm.freightAmount = freightCharge;\r\n                }\r\n\r\n                if(waybillData.gross_weight_in_kgs !== undefined && waybillData.gross_weight_in_kgs !== null){\r\n                    this.customsEntryForm.grossWeight = this.parseFloatFromString(waybillData.gross_weight_in_kgs)\r\n                }\r\n\r\n                if(waybillData.package_type !== undefined && waybillData.package_type !== null){\r\n                    const selectedPackageType = Utilities.findClosestMatch(waybillData.package_type, this.customsEntryForm.packageTypes, 'text')\r\n                    console.log(\"Selected Package Type\", selectedPackageType)\r\n                    this.customsEntryForm.packageType = selectedPackageType.value\r\n                }\r\n\r\n            }).catch((error) => {\r\n                console.error(\"Failed to read waybill model\", error)\r\n                SweetAlertConnector.showErrorAlert(\"Failed to read waybill model. Please try again.\")\r\n            })\r\n        },\r\n\r\n        async uploadInvoicesAndWaybills(url = \"https://gabrielle-flask.azurewebsites.net/read_vendor_invoice_optimized\", modelUtilized = INVOICE_AI_MODELS.MICROSOFT_FORM_RECOGNIZER){\r\n            if (!this.isValidReference || this.selectedFiles.length === 0) {\r\n                SweetAlertConnector.showErrorAlert('Please enter a valid reference number and select files before uploading.');\r\n                return;\r\n            }\r\n            SweetAlertConnector.showLoadingAlert(\"Verifying Reference Number...\");\r\n            DatabaseConnector.verifyReferenceNumber(this.referenceNumber).then((response) => {\r\n                if (response === false) {\r\n                    SweetAlertConnector.closeCurrentAlert();\r\n                    SweetAlertConnector.showErrorAlert(\r\n                        `Reference Number ${this.referenceNumber} Already Exists. Please enter a new reference number.`\r\n                    );\r\n                    return;\r\n                }\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showLoadingAlert(\"Reading your invoice and Waybill\");\r\n                this.invoiceModelUtilized = modelUtilized;\r\n                this.uploadFilesMicrosoft(url);\r\n                if(this.waybillFiles.length > 0){\r\n                    // this.readWaybillModel();\r\n                    this.readWaybillModelClaude();\r\n                }\r\n                else {\r\n                    console.log(\"No Waybill Files\")\r\n                    this.waybillDataExtractionCompleted = true;\r\n                }\r\n            });\r\n        },\r\n        transformArray(data){\r\n            // Check if the data is an array of arrays\r\n            if (Array.isArray(data) && Array.isArray(data[0])) {\r\n                // Flatten the array of arrays\r\n                return data.flat();\r\n            }\r\n            // Return the data as is if it's already in the desired format\r\n            return data;\r\n        },\r\n        async compressFile(file) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                const fileAsArray = new Uint8Array(e.target.result);\r\n                const compressedFileArray = pako.deflate(fileAsArray);\r\n                // const compressedFile = new Blob([compressedFileArray], { type: file.type });\r\n                const compressedFile = compressedFileArray.buffer;\r\n                const dataToUpload = new Blob([compressedFile], {type: file.type});\r\n                const fileToUpload = new Blob([dataToUpload], {type: file.type});\r\n\r\n                \r\n                // Log the original and compressed file sizes\r\n                console.log('Original file size:', file.size, 'bytes');\r\n                console.log('Compressed file size:', fileToUpload.size, 'bytes');\r\n\r\n                // Calculate and log the percentage decrease in file size\r\n                const percentageDecrease = ((file.size - fileToUpload.size) / file.size) * 100;\r\n                console.log('Percentage decrease in file size:', percentageDecrease.toFixed(2), '%');\r\n\r\n                // Download the compressed file\r\n                const downloadLink = document.createElement('a');\r\n                downloadLink.href = URL.createObjectURL(fileToUpload);\r\n                downloadLink.download = `compressed_${file.name}`;\r\n                document.body.appendChild(downloadLink);\r\n                downloadLink.click();\r\n                document.body.removeChild(downloadLink);\r\n\r\n                resolve(fileToUpload);\r\n                };\r\n                reader.onerror = reject;\r\n                reader.readAsArrayBuffer(file);\r\n            });\r\n        },\r\n        // Calling function in your uploadFilesMicrosoft method\r\n\r\n        async uploadFilesMicrosoft(url) {\r\n            console.log(\"Uploading Files\", url);\r\n            const formData = new FormData();\r\n            formData.append(\"reference\", this.referenceNumber);\r\n            for (const file of this.selectedFiles) {\r\n                formData.append(\"files\", file);\r\n                formData.append(\"commercialInvoice\", file);\r\n            }\r\n            console.log(\"Form Data: \", formData);\r\n            // SweetAlertConnector.showLoadingAlert(\"Reading your invoice...\");\r\n            this.invoicingProcessingStart = new Date();\r\n\r\n            fetch(url, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            }).then((response) => response.json())\r\n                .then(async (data) => {\r\n                    this.invoicingProcessingEnd = new Date();\r\n                    this.invoicesDataExtractionCompleted = true;\r\n                    if(Utilities.discountCheck(data)){\r\n                        console.log(\"Discount Detected. Please review the invoice data.\");\r\n                        SweetAlertConnector.closeCurrentAlert();\r\n                        const discountResult = await SweetAlertConnector.discountAlert();\r\n                        console.log(\"Discount Result: \", discountResult);\r\n                    }\r\n                    this.dataExtractionLoadingMessage();\r\n                    console.log(\"Success:\", data);\r\n                    \r\n                    this.invoiceDataArray = this.transformArray(data);\r\n                    this.invoiceDataArray = this.invoiceDataArray.filter(invoice => invoice.invoice_items && Array.isArray(invoice.invoice_items))\r\n                    console.log(\"Filtered Invoice Data: \", this.invoiceDataArray);\r\n                    this.formatInvoiceData();\r\n                    console.log(\"Invoice Data: \", this.invoiceDataArray);\r\n                    // SweetAlertConnector.closeCurrentAlert();\r\n                    // SweetAlertConnector.showSuccessAlert(\"Invoice data read successfully.\");\r\n                    this.calculateTotalCargoValue();\r\n                    this.getTotalNumberOfLines();\r\n                    if (this.invoicesDataExtractionCompleted && this.waybillDataExtractionCompleted) {\r\n                        SweetAlertConnector.asyncLoadingAlert(\"Classifying Invoice Items...\");\r\n                    }\r\n                    this.classificationProcessingStart = new Date();\r\n                    await this.classifyItemsWithHistory();\r\n                    this.classifyInvoiceItems().then((commodityCodes) => {\r\n                        this.classificationCompleted = true;\r\n                        SweetAlertConnector.closeCurrentAlert();\r\n                        this.classificationProcessingEnd = new Date();\r\n                        console.log(\"Commodity Code: \", commodityCodes);\r\n                        SweetAlertConnector.showSuccessAlert(\"Invoice data read and classified.\");\r\n                        this.calculateTotalCargoValue();\r\n                        this.getTotalNumberOfLines();\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error:\", error);\r\n                    this.invoiceDataArray = [];\r\n                });\r\n        },\r\n        uploadFiles() {\r\n            if (!this.isValidReference || this.selectedFiles.length === 0) {\r\n                alert(\"Please enter a valid reference number and select files before uploading.\");\r\n                return;\r\n            }\r\n            DatabaseConnector.verifyReferenceNumber(this.referenceNumber).then((response) => {\r\n                if (response === false) {\r\n                    SweetAlertConnector.closeCurrentAlert();\r\n                    SweetAlertConnector.showErrorAlert(\r\n                        `Reference Number ${this.referenceNumber} Already Exists. Please enter a new reference number.`\r\n                    );\r\n                    return;\r\n                }\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                const formData = new FormData();\r\n                formData.append(\"reference\", this.referenceNumber);\r\n                this.selectedFiles.forEach((file) => {\r\n                    formData.append(\"commercialInvoice\", file);\r\n                });\r\n                SweetAlertConnector.showLoadingAlert(\"Reading your invoice...\");\r\n\r\n                fetch(\"https://mawi-updraded-api.wonderfulflower-f4234c00.eastus.azurecontainerapps.io/analyze-document\", {\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log(\"Success:\", data);\r\n                        this.invoiceDataArray = this.convertAWSData(data);\r\n                        this.formatInvoiceData();\r\n                        SweetAlertConnector.closeCurrentAlert();\r\n                        SweetAlertConnector.showSuccessAlert(\"Invoice data read successfully.\");\r\n                        this.calculateTotalCargoValue();\r\n                        this.getTotalNumberOfLines();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error:\", error);\r\n                        this.invoiceDataArray = [];\r\n                    });\r\n            });\r\n        },\r\n        removeUnsafeCharacters(str) {\r\n            // Define a regular expression for characters that are considered safe in URLs\r\n            const safeChars = /^[a-zA-Z0-9-_.~ ]*$/;\r\n\r\n            // Filter the string to keep only safe characters\r\n            return Array.from(str)\r\n                .filter((char) => safeChars.test(char))\r\n                .join(\"\");\r\n        },\r\n        async classifyInvoiceItems() {\r\n            console.log(\"Classifying Invoice Items\");\r\n            console.log(\"Invoice Data Array: \", this.invoiceDataArray);\r\n\r\n            const descriptions = this.invoiceDataArray.flatMap((invoice) => {\r\n                // Map the invoice lines to the desired format.\r\n                let formattedItems =  invoice.lines\r\n                .filter((item) => !item.tariff_code)\r\n                .map((item) => ({\r\n                    description: item.classification_description || item.description || \"\",\r\n                    commodity_code: item.commodity_code || \"\",\r\n                    product_number: item.product_number || \"\",\r\n                }));\r\n\r\n                // // Function to chunk the array into smaller arrays of a given size.\r\n                const chunkSize = 20;\r\n                const chunks = [];\r\n                for (let i = 0; i < formattedItems.length; i += chunkSize) {\r\n                    chunks.push([formattedItems.slice(i, i + chunkSize)]);\r\n                }\r\n\r\n                return chunks;\r\n            });\r\n            if (descriptions.length === 0) {\r\n                console.log(\"No descriptions to classify.\");\r\n                return [];\r\n            }\r\n            // console.log(\"Descriptions: \", [descriptions]);\r\n            const commodityCodes = [];\r\n            for (const chunk of descriptions) {\r\n                console.log(\"Chunk: \", chunk);\r\n                const result = await DatabaseConnector.getCommodityCode(chunk);\r\n                commodityCodes.push(...result);\r\n                this.processCommodityCodes(result[0]);\r\n            }   \r\n            // const commodityCodes = await DatabaseConnector.getCommodityCode([descriptions]);\r\n            // this.processCommodityCodes(commodityCodes[0]);\r\n            return commodityCodes;\r\n        },\r\n\r\n        async classifyItemsWithHistory(){\r\n            const descriptions = this.invoiceDataArray.flatMap((invoice) => {\r\n                return invoice.lines.map((item) => ({\r\n                    description: item.description || \"\",\r\n                    supplier_name: invoice.vendor_name || \"\",\r\n                    product_number: item.product_code || \"\",\r\n                }));\r\n            });\r\n            console.log(\"History Descriptions: \", descriptions);\r\n\r\n            return DatabaseConnector.classifyItemsHistory(descriptions).then((commodityCodes) => {\r\n                console.log(\"Commodity Codes from history: \", commodityCodes);\r\n                \r\n                this.processCommodityCodes(commodityCodes);\r\n            }).catch((error) => {\r\n                console.error(\"Failed to classify items with history: \", error);\r\n            });\r\n        },\r\n\r\n        processCommodityCodes(commodityCodes) {\r\n            // console.log(\"Commodity Codes Processing: \", commodityCodes);\r\n            commodityCodes.forEach((commodityCode) => {\r\n                this.invoiceDataArray.forEach((invoice) => {\r\n                    invoice.lines.forEach((item, itemIndex) => {\r\n                        if (commodityCode.description === `${item?.classification_description}` || commodityCode.description === `${item.description}`) {\r\n                            if ( commodityCode.classification_model_suggested_code !== undefined && commodityCode.classification_model_suggested_code !== null) {\r\n                                item.tariff_code = this.insertFullStops(\r\n                                    commodityCode.classification_model_suggested_code.toString()\r\n                                );\r\n                                const itemPerformanceMetric = {\r\n                                    llm_recommended_classification_code: item.tariff_code,\r\n                                    approved_classification_code: \"\",\r\n\r\n                                };\r\n                                item.performanceMetric = itemPerformanceMetric;\r\n                                this.updateTariffCode(invoice, itemIndex, \"tariff_code\", item.tariff_code);\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        updateItem(data, index, field, value) {\r\n            data.lines[index][field] = value;\r\n        },\r\n        parseFloatFromString(inputString) {\r\n            if (!inputString || inputString === undefined || inputString === null) {\r\n                return 0;\r\n            }\r\n\r\n            if (typeof inputString === \"number\") {\r\n                return inputString;\r\n            }\r\n            // Remove non-numeric characters except for period (.)\r\n            let numericString = inputString.replace(/[^0-9.]/g, \"\");\r\n\r\n            // Parse the numeric string as a float\r\n            let floatValue = parseFloat(numericString);\r\n\r\n            return floatValue;\r\n        },\r\n    },\r\n    beforeUnmount() {\r\n        // Clean up all object URLs when the component is destroyed\r\n        this.pdfFiles.forEach((pdf) => URL.revokeObjectURL(pdf.url));\r\n    },\r\n};\r\n\r\nfunction verifyInvoiceData() {\r\n    this.displayDocumentVerificationView = !this.displayDocumentVerificationView;\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Add your styles here */\r\n@import \"vue3-select/dist/vue3-select.css\";\r\n.badge-container {\r\n    margin: 10px;\r\n}\r\nbutton {\r\n    margin: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n#app {\r\n    font-family: \"Avenir\", Helvetica, Arial, sans-serif;\r\n    text-align: center;\r\n}\r\n.upload-button {\r\n    margin-left: 5px;\r\n}\r\n\r\n.dropzone {\r\n    border: 2px dashed #ccc;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    background: #fafafa;\r\n    color: #bdbdbd;\r\n    margin: 10px;\r\n}\r\n\r\n.dropzone.dragover {\r\n    border-color: #3f51b5;\r\n    background-color: #eeeeee;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    border: 1px solid #ccc;\r\n    padding: 8px;\r\n    text-align: left;\r\n}\r\n.dropdown {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n}\r\n\r\n.dropdown ul {\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.dropdown ul li {\r\n    padding: 8px 12px;\r\n    cursor: pointer;\r\n}\r\n\r\n.dropdown ul li:hover {\r\n    background-color: #f0f0f0;\r\n}\r\n\r\n.form-row {\r\n    text-align: left;\r\n    padding: 20px;\r\n}\r\n.page-header-info-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-inline: 0.5rem;\r\n}\r\n</style>\r\n","import axios from 'axios';\r\n\r\nconst apiUrl = process.env.VUE_APP_API_BASE_URL; // Adjust this URL to match your server location\r\n\r\n// const mawiApiUrl = 'https://mary-staging.whitestone-99c262a0.eastus.azurecontainerapps.io//'\r\nconst mawiApiUrl = 'https://mawi-updraded-api.wonderfulflower-f4234c00.eastus.azurecontainerapps.io/'\r\n\r\n// Helper function for sending requests\r\nconst sendRequest = async (method, url, data = null) => {\r\n    try {\r\n        const response = await axios({ method, url, data });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// CRUD operations for Waybills\r\nexport const fetchWaybills = async () => {\r\n    return await sendRequest('get', `${apiUrl}/waybills`);\r\n};\r\nexport const createWaybill = async (waybill) => {\r\n    return await sendRequest('post', `${apiUrl}/waybills`, waybill);\r\n};\r\nexport const updateWaybill = async (id, waybill) => {\r\n    return await sendRequest('put', `${apiUrl}/waybills/${id}`, waybill);\r\n};\r\nexport const deleteWaybill = async (id) => {\r\n    return await sendRequest('delete', `${apiUrl}/waybills/${id}`);\r\n};\r\n\r\n// CRUD operations for Customs Entries\r\nexport const fetchCustomsEntries = async () => {\r\n    return await sendRequest('get', `${apiUrl}/customs_entries`);\r\n};\r\nexport const createCustomsEntry = async (entry) => {\r\n    return await sendRequest('post', `${apiUrl}/customs_entries`, entry);\r\n};\r\nexport const updateCustomsEntry = async (id, entry) => {\r\n    return await sendRequest('put', `${apiUrl}/customs_entries/${id}`, entry);\r\n};\r\nexport const deleteCustomsEntry = async (id) => {\r\n    return await sendRequest('delete', `${apiUrl}/customs_entries/${id}`);\r\n};\r\n\r\n// CRUD operations for THN Codes\r\nexport const fetchThnCodes = async () => {\r\n    return await sendRequest('get', `${apiUrl}/thn_codes`);\r\n};\r\nexport const createThnCode = async (code) => {\r\n    return await sendRequest('post', `${apiUrl}/thn_codes`, code);\r\n};\r\nexport const deleteThnCode = async (thnNumber) => {\r\n    return await sendRequest('delete', `${apiUrl}/thn_codes/${thnNumber}`);\r\n};\r\n\r\n// CRUD operations for Products\r\nexport const fetchProducts = async () => {\r\n    return await sendRequest('get', `${apiUrl}/products`);\r\n};\r\nexport const createProduct = async (product) => {\r\n    return await sendRequest('post', `${apiUrl}/products`, product);\r\n};\r\nexport const updateProduct = async (code, product) => {\r\n    return await sendRequest('put', `${apiUrl}/products/${code}`, product);\r\n};\r\nexport const deleteProduct = async (code) => {\r\n    return await sendRequest('delete', `${apiUrl}/products/${code}`);\r\n};\r\n\r\n// CRUD operations for Commercial Invoices\r\nexport const fetchCommercialInvoices = async () => {\r\n    return await sendRequest('get', `${apiUrl}/commercial_invoices`);\r\n};\r\nexport const createCommercialInvoice = async (invoice) => {\r\n    return await sendRequest('post', `${apiUrl}commercial_invoices`, invoice);\r\n};\r\nexport const updateCommercialInvoice = async (id, invoice) => {\r\n    return await sendRequest('put', `${apiUrl}/commercial_invoices/${id}`, invoice);\r\n};\r\nexport const deleteCommercialInvoice = async (id) => {\r\n    return await sendRequest('delete', `${apiUrl}/commercial_invoices/${id}`);\r\n};\r\n\r\nexport const createToyotaEntry = async (entry) => {\r\n    return await sendRequest('post', `${apiUrl}commercial_invoices_vehicles`, entry);\r\n\r\n}\r\n\r\n// CRUD operations for Commercial Invoice Lines\r\nexport const fetchCommercialInvoiceLines = async () => {\r\n    return await sendRequest('get', `${apiUrl}/commercial_invoice_lines`);\r\n};\r\nexport const createCommercialInvoiceLine = async (line) => {\r\n    return await sendRequest('post', `${apiUrl}/commercial_invoice_lines`, line);\r\n};\r\nexport const updateCommercialInvoiceLine = async (id, line) => {\r\n    return await sendRequest('put', `${apiUrl}/commercial_invoice_lines/${id}`, line);\r\n};\r\nexport const deleteCommercialInvoiceLine = async (id) => {\r\n    return await sendRequest('delete', `${apiUrl}/commercial_invoice_lines/${id}`);\r\n};\r\n\r\nexport const getEntryDetails = async (entryId) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}entry-details/${entryId}`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const getCommercialInvoiceDetails = async (entryId) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}commercial-invoices-with-lines/${entryId}`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getCommercialInvoiceDetailsWithVehicles = async (entryId) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}commercial-invoices-with-lines-with-vehicles/${entryId}`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateCustomsDeclaration = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}generate-customs-declaration`, // Adjust as necessary for your server's URL\r\n            method: 'POST',\r\n            responseType: 'blob', // Important for handling the binary data\r\n            data: requestData\r\n        });\r\n        return response.data;\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateBlankValuationForm = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}blank-valuation-form-trinidad`, // Adjust as necessary for your server's URL\r\n            method: 'GET',\r\n            responseType: 'blob', // Important for handling the binary data\r\n        });\r\n        return response.data;\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const generatePreSignedValuationForm = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}generate-pre-signed-valuation-form`, // Adjust as necessary for your server's URL\r\n            method: 'POST',\r\n            responseType: 'blob', // Important for handling the binary data\r\n            data: requestData\r\n        });\r\n        return response.data;\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\nexport const generatePreSignedValuationFormVersion2 = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}generate-pre-signed-valuation-form-v2`, // Adjust as necessary for your server's URL\r\n            method: 'POST',\r\n            responseType: 'blob', // Important for handling the binary data\r\n            data: requestData\r\n        });\r\n        return response.data;\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const saveCustomsDeclaration = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}customs-declaration`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data;\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchCustomsDeclarations = async (entryId) => {\r\n    console.log(entryId);\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}customs-declaration/${entryId}`,\r\n            method: 'GET'\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n    // return await sendRequest('get', `${apiUrl}customs-declaration/${entryId}`);\r\n}\r\n\r\nexport const fetchSellers = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}sellers`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchBuyers = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}buyers`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchDeclarants = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}declarants`,\r\n            method: 'GET'\r\n        });\r\n        console.log(response);\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const fetchCustomsEntryDeclarants = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}customs-entry-declarants`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchShippers = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}shippers`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const updateCustomsDeclaration = async (entryId, declaration) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}customs-declaration/${entryId}`,\r\n            method: 'PUT',\r\n            data: declaration\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n    // return await sendRequest('put', `${apiUrl}customs-declaration/${entryId}`, declaration);\r\n}\r\n\r\nexport const fetchPackageTypes = async () => {\r\n    return fetch(\"packageTypes.json\").then(response => response.json()).then(data => {\r\n      return data;\r\n    });\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const response = await fetch('https://restcountries.com/v3/all');\r\n      const data = await response.json();\r\n      return data.map(country => ({\r\n        name: country.name.common,\r\n        code: country.cca2\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to fetch countries:', error);\r\n    }\r\n}\r\n\r\nexport const addSeller = async (seller) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}sellers`,\r\n            method: 'POST',\r\n            data: seller\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const addBuyer = async (buyer) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}buyers`,\r\n            method: 'POST',\r\n            data: buyer\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateBuyer = async (buyer) => {\r\n    try {\r\n        const response = await axios({\r\n            url: `${apiUrl}buyers/${buyer.id}`,\r\n            method: 'PUT',\r\n            data: buyer\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateShipper = async (shipper) => {\r\n    try {\r\n        const response = await axios({\r\n            url: `${apiUrl}shippers/${shipper.id}`,\r\n            method: 'PUT',\r\n            data: shipper\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateDeclarant = async (declarant) => {\r\n    try {\r\n        const response = await axios({\r\n            url: `${apiUrl}declarants/${declarant.id}`,\r\n            method: 'PUT',\r\n            data: declarant\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const addShipper = async (shipper) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}shippers`,\r\n            method: 'POST',\r\n            data: shipper\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const addDeclarant = async (declarant) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}declarants`,\r\n            method: 'POST',\r\n            data: declarant\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchCpcCodes = async (country) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}cpc-codes/${country}`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchNpcCodes = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}npc_codes`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchNPCWithCPC = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}npc_codes_with_cpc`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const fetchPorts = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}ports/TT`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchExchangeRates = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}rates-of-exchange/TTD`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const fetchRatesBasedOnShippedOnBoard = async (shippedOnBoardDate) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}exchange-rates/TTD/${shippedOnBoardDate}`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const addExchangeRate = async (exchangeRate) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}rates-of-exchange`,\r\n            method: 'POST',\r\n            data: exchangeRate\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const fetchVessels = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}vessels`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const insertVessel = async (vessel) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}vessels`,\r\n            method: 'POST',\r\n            data: vessel\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const updateVessel = async (vessel) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}vessels/${vessel.id}`,\r\n            method: 'PUT',\r\n            data: vessel\r\n        });\r\n        return response\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getTaxDetails = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}generate-tax-and-duties`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const generateWorkSheet = async (requestData, format) => {\r\n\r\n    let url = `${mawiApiUrl}generate-worksheet-json`\r\n    if(format === 'summarized')\r\n        url += '?merge_invoices=True'\r\n    try{\r\n        const response = await axios({\r\n            url: url,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateToyotaXML = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}generate-asycuda-toyota-xml`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateToyotaWorksheet = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}generate-toyota-worksheet`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const generateAsycudaXML = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}generate-asycuda-xml-json`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const getCommodityCharges = async (commodity) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}commodity-codes/${commodity}`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateDepositForm = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}deposit-form`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateScoonerBL = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}generate-sconner-bl`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateC84Form = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}tt-c84`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateOvertimeForm = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}overtime-form`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getSpecialExemptionDeclarations = async (importerTin) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}special-exemptions-declarations/${importerTin}`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const readVehicleFiles = async (requestData) => {\r\n    \r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}analyze-toyota-documents-LLM`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getCommodityCode = async(itemDescriptions) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}classify-items`,\r\n            method: 'POST',\r\n            data: itemDescriptions\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        if(error.response && error.response.status === 404 || error.response.status === 500){\r\n            return null\r\n        }\r\n        else{\r\n            console.error('API error:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nexport const generateCaricomInvoice = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}generate-caricom`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateEntryData = async (entryId, entryData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}customs-entry/${entryId}`,\r\n            method: 'PUT',\r\n            data: entryData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateWaybillData = async (waybillId, waybillData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}waybill/${waybillId}`,\r\n            method: 'PUT',\r\n            data: waybillData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const uploadFiles = async (files) => {\r\n    try{\r\n        // const response = await axios({\r\n        //     url: `${apiUrl}upload-invoices`,\r\n        //     method: 'POST',\r\n        //     data: files\r\n        // });\r\n        const response = await axios.post(`${apiUrl}upload-invoices`, files, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const deleteInvoiceLines = async (InvoiceIDList) => {\r\n    console.log(\"DB Connector\", InvoiceIDList)\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}invoice-lines/`,\r\n            method: 'DELETE',\r\n            data: InvoiceIDList\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const verifyReferenceNumber = async(referenceNumber) => {\r\n    try{\r\n        await axios({\r\n            url: `${apiUrl}check-entry-number/${referenceNumber}`,\r\n            method: 'GET'\r\n        });\r\n        return true\r\n    }\r\n    catch(error){\r\n        if (error.response && error.response.status === 409) {\r\n            return false; // If the response is 409, return false\r\n        }\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const fetchTradeAgreements = async () => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}trade_agreements`,\r\n            method: 'GET'\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const sendInvoiceAIPerformanceMetrics = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}invoice-ai-performance`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const sendClassificationPerformanceMetrics = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}classification-performance`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n\r\n}\r\n\r\nexport const insertInvoiceLines = async (invoiceLines) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}invoice-lines`,\r\n            method: 'POST',\r\n            data: invoiceLines\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const readWaybillModel = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `https://gabrielle-flask.azurewebsites.net/read_waybill`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const readWaybillClaude = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${mawiApiUrl}analyze-waybill-OCR-LLM`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateClassificationAccuracyPerformanceMetrics = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}update-classification-accuracy-performance-metrics`,\r\n            method: 'PUT',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const classifyItemsHistory = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}get-commodity-supplier-description`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateInvoiceDataOptimized = async (requestData) => {\r\n    try{\r\n        // const response = await axios({\r\n        //     url: `${apiUrl}update-multiple-invoices`,\r\n        //     method: 'PUT',\r\n        //     data: requestData\r\n        // });\r\n        const response = axios.put(`${apiUrl}update-multiple-invoices`, requestData, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const updateInvoiceLineDataOptimized = async(requestData) => {\r\n    console.log(\"checksss\", requestData)\r\n    try{\r\n        // const response = await axios({\r\n        //     url: `${apiUrl}update-multiple-invoice-lines`,\r\n        //     method: 'PUT',\r\n        //     data: requestData\r\n        // });\r\n        const response = axios.put(`${apiUrl}update-multiple-invoice-lines`, requestData, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\nexport const insertNewInvoice = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}commercial_invoices-with-performance-metrics`,\r\n            method: 'POST',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const generateBreakdownSheet = async (requestData) => {\r\n    try{\r\n        const response = await axios({\r\n            url: `${apiUrl}generate-invoice-breakdown-excel`,\r\n            method: 'POST',\r\n            responseType: 'blob',\r\n            data: requestData\r\n        });\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        console.error('API error:', error);\r\n        throw error;\r\n    }\r\n}\r\n","\r\nimport stringSimilarity from 'string-similarity';\r\nimport { parse, format } from 'date-fns';\r\nimport { enUS } from 'date-fns/locale';\r\n\r\nexport const formatWorkSheetData = (referenceNumber, country, declarantName, declarantTIN, regimeType, importerName, importerTIN, exporterName, exporterTIN, vesselName, portOfDischarger, deposit, containerCharges, additionalCharges, localFee, freightAmount, insurance, otherCharges, freightCurrency, freightRateOfExchange, insuranceCurrency, insuranceRateOfExchange, otherChargesCurrency, otherChargesRateOfExchange, manualExemptionApplied = null, arrival_date = \"\") => {\r\n    console.log(\"Reference Number: \", referenceNumber)\r\n    const workSheetObject = {\r\n        relieved: manualExemptionApplied,\r\n        reference_number: referenceNumber,\r\n        country: country,\r\n        declarant: {\r\n            name: declarantName,\r\n            tin: declarantTIN\r\n        },\r\n        regime: regimeType,\r\n        waybill: {\r\n            importer: {\r\n                name: importerName,\r\n                tin: importerTIN\r\n            },\r\n            exporter: {\r\n                name: exporterName,\r\n                tin: exporterTIN\r\n            },\r\n            vessel: vesselName,\r\n            port_of_discharge: portOfDischarger,\r\n            arrival_date: arrival_date,\r\n            charges: {\r\n                international_freight: {\r\n                    amount: parseFloat(verifyNumbers(freightAmount)),\r\n                    currency: freightCurrency,\r\n                    rate_of_exchange: freightRateOfExchange\r\n                },\r\n                insurance: {\r\n                    amount: parseFloat(verifyNumbers(insurance)),\r\n                    currency: insuranceCurrency,\r\n                    rate_of_exchange: insuranceRateOfExchange\r\n                },\r\n                other_charges: {\r\n                    amount: parseFloat(verifyNumbers(otherCharges)),\r\n                    currency: otherChargesCurrency,\r\n                    rate_of_exchange: otherChargesRateOfExchange\r\n                }\r\n            },\r\n            // external_freight: parseFloat(verifyNumbers(freightAmount)),\r\n            // insurance: parseFloat(verifyNumbers(insurance)),\r\n            // other_charges: parseFloat(verifyNumbers(otherCharges))\r\n        },\r\n        additional_local_charges: {\r\n            deposit: deposit,\r\n            container_charges: containerCharges,\r\n            additional_charges: additionalCharges,\r\n            local_fee: localFee\r\n        }\r\n    }\r\n\r\n    return workSheetObject;\r\n\r\n}\r\n\r\n// export const formatWorkSheetData = (referenceNumber, country, declarantName, declarantTIN, regimeType, importerName, importerTIN, exporterName, exporterTIN, vesselName, portOfDischarger, deposit, containerCharges, additionalCharges, localFee, freightAmount, insurance, otherCharges) => {\r\n//     const workSheetObject = {\r\n//         reference_number: referenceNumber,\r\n//         country: country,\r\n//         declarant: {\r\n//             name: declarantName,\r\n//             tin: declarantTIN\r\n//         },\r\n//         regime: regimeType,\r\n//         waybill: {\r\n//             importer: {\r\n//                 name: importerName,\r\n//                 tin: importerTIN\r\n//             },\r\n//             exporter: {\r\n//                 name: exporterName,\r\n//                 tin: exporterTIN\r\n//             },\r\n//             vessel: vesselName,\r\n//             port_of_discharge: portOfDischarger,\r\n//             external_freight: parseFloat(verifyNumbers(freightAmount)),\r\n//             insurance: parseFloat(verifyNumbers(insurance)),\r\n//             other_charges: parseFloat(verifyNumbers(otherCharges))\r\n//         },\r\n//         valuation: {\r\n//             additional_local_charges: {\r\n//                 deposit: deposit,\r\n//                 container_charges: containerCharges,\r\n//                 additional_charges: additionalCharges,\r\n//                 local_fee: localFee\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return workSheetObject;\r\n\r\n// }\r\n\r\nconst verifyNumbers = (data) => {\r\n    if(data === undefined || data === null || data === '' || data === '0.0' || isNaN(data) || data === \"N/A\"){\r\n        return 0.0\r\n    }\r\n    return data\r\n}\r\n\r\nexport const parseFloatFromString = (inputString) => {\r\n    if (!inputString || inputString === undefined || inputString === null) {\r\n        return 0;\r\n    }\r\n\r\n    if (typeof inputString === \"number\") {\r\n        return inputString;\r\n    }\r\n    // Remove non-numeric characters except for period (.)\r\n    let numericString = inputString.replace(/[^0-9.]/g, \"\");\r\n\r\n    // Parse the numeric string as a float\r\n    let floatValue = parseFloat(numericString);\r\n\r\n    return floatValue;\r\n}\r\n\r\nconst cacluateCIF = (invoiceTotal, totalFOB, freight, inland, insurance, otherCharges) => {\r\n    invoiceTotal = parseFloat(verifyNumbers(invoiceTotal));\r\n    totalFOB = parseFloat(verifyNumbers(totalFOB));\r\n    freight = parseFloat(verifyNumbers(freight));\r\n    inland = parseFloat(verifyNumbers(inland));\r\n    insurance = parseFloat(verifyNumbers(insurance));\r\n    otherCharges = parseFloat(verifyNumbers(otherCharges));\r\n    console.log(\"Calculating CIF...\")\r\n    console.log(invoiceTotal, parseFloat(totalFOB), freight, inland, insurance, otherCharges);\r\n    const freightSplit = (invoiceTotal / parseFloat(totalFOB)) * freight;\r\n    return invoiceTotal + freightSplit + inland + insurance + parseFloat(otherCharges);\r\n}\r\n\r\nexport const formatCharges = (chargeData, vatApplicable) => {\r\n    console.log(\"VAT Applicable: \", vatApplicable)\r\n    console.log(\"Charge Data: \", chargeData);\r\n    let charges = [];\r\n    for (const [name, chargeDetails] of Object.entries(chargeData)) {\r\n        let chargeObj = {\r\n            name,\r\n            value: \"0\", // Default value\r\n            id: null,\r\n            operand_field: \"\",\r\n            subjected_to_vat: true\r\n\r\n        };\r\n\r\n        chargeDetails.forEach(detail => {\r\n            if (detail.charge_amount !== undefined) {\r\n                chargeObj.value = detail.charge_amount;\r\n                chargeObj.id = detail.tariff_charge_id;\r\n            }\r\n            // if(detail.name === \"value added tax\"){\r\n            //     if(vatApplicable){\r\n            //         chargeObj.value = \"12.5\";\r\n            //     }\r\n            //     else chargeObj.value = \"0\";\r\n            // }\r\n        });\r\n\r\n        if(chargeDetails[1].operand_field !== undefined){\r\n            chargeObj.operand_field = chargeDetails[1].operand_field;\r\n        }\r\n        if(chargeDetails[1].subjected_to_vat !== undefined){\r\n            chargeObj.subjected_to_vat = chargeDetails[1].subjected_to_vat;\r\n        }\r\n\r\n\r\n        charges.push(chargeObj);\r\n    }\r\n\r\n    return charges;\r\n}\r\n\r\n\r\n\r\nexport const generateXMLData = (invoices, referenceNumber, waybillNumber, grossWeight, netWeight, packageQuantity, packageType, marksAndNumbers, freightAmount, availableCPCCodes, totalFOB, tradeAgreementOptions) => {\r\n    console.log(\"Available CPC Codes: \", availableCPCCodes)\r\n    console.log(\"Total Gross Weight: \", grossWeight)\r\n    let cumulativeWeight = 0;  // This will track the cumulative gross weight calculated\r\n    let sum = 0;\r\n    return invoices.map((invoice, invoiceIndex, invoiceArray) => {\r\n        return {\r\n            exworks: parseFloat(invoice.invoice_total),\r\n            invoice_currency: invoice.currency,\r\n            rate_of_exchange: parseFloat(invoice.rate_of_exchange),\r\n            supplementary_charges_and_deductions: {\r\n                internal_freight: parseFloat(verifyNumbers(invoice.inland)),\r\n                insurance: parseFloat(verifyNumbers(invoice.insurance)),\r\n                other: parseFloat(verifyNumbers(invoice.otherCharges)),\r\n                deductions: 0,\r\n            },\r\n            line_items: invoice.lines.map((item, itemIndex, array) => {\r\n                let gross_weight = (parseFloat(item.extension_price) / totalFOB) * parseFloat(grossWeight);\r\n                sum += gross_weight;\r\n                if (itemIndex === array.length - 1 && invoiceIndex === invoiceArray.length - 1) {\r\n                    // For the last item, adjust the weight to ensure total weights sum up to the total gross weight\r\n                    gross_weight = parseFloat(grossWeight) - cumulativeWeight;\r\n                    gross_weight = Number(gross_weight.toFixed(2));\r\n                    // gross_weight = Math.floor(gross_weight * 100) / 100;\r\n                    console.log(\"Total Gross Weight: \", grossWeight)\r\n                    console.log(\"Last Item Gross Weight: \", gross_weight)\r\n                    console.log(\"Cumulative Weight: \", cumulativeWeight)\r\n\r\n                } else {\r\n                    // For all other items, truncate the weight to two decimal places\r\n                    gross_weight = Math.floor(gross_weight * 100) / 100;\r\n                    console.log(`Item Gross Weight: ${gross_weight} - Sum: ${sum}`)\r\n                    cumulativeWeight += gross_weight;\r\n                }\r\n                const net_weight = parseFloat(gross_weight) - (parseFloat(gross_weight) / 10)\r\n                \r\n                return {\r\n                    description: item.description,\r\n                    quantity: parseFloat(item.quantity),\r\n                    unit_cost: parseFloat(item.unit_price),\r\n                    exworks: parseFloat(item.extension_price),\r\n                    cpc_code: parseInt(availableCPCCodes.find(cpc => cpc.cpcId === item.cpcCode)?.code),\r\n                    country_origin_code: item.country_of_origin,\r\n                    anc_code: item.npc_code,\r\n                    trade_agreement: tradeAgreementOptions.find(agreement => agreement.id === item.tradeAgreement)?.code || \"\",\r\n                    commodity: `${item.tariff_code.replace(/\\./g, '')}`,\r\n                    gross_weight: parseFloat(gross_weight),\r\n                    net_weight: Math.floor(net_weight * 100) / 100,\r\n                    package_quantity: invoiceIndex === 0 && itemIndex === 0 ? parseFloat(packageQuantity) : 0,\r\n                    kind_of_package: packageType,\r\n                    marks_and_numbers: marksAndNumbers,\r\n                }\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const stringToNumber = (currencyString) => {\r\n    // Remove the dollar sign and any commas\r\n    const numericString = currencyString.replace(/[$,\\s]/g, '');\r\n\r\n    // Convert the resulting string to a number\r\n    const number = parseFloat(numericString);\r\n\r\n    // Return the number\r\n    return number;\r\n}\r\n\r\nexport const trimStringToLimit = (inputString, limit = 200) =>{\r\n    if (inputString.length > limit) {\r\n        return inputString.substring(0, limit);\r\n    }\r\n    return inputString;\r\n}\r\n\r\n// export const formatVehicleDataXML = (vehicles, availableCPCCodes, totalFOB = 0.0, grossWeight = 200) => {\r\n//     // let cumulativeWeight = 0;  // This will track the cumulative gross weight calculated\r\n//     // let sum = 0;\r\n//     return vehicles.flatMap(vehicle => \r\n//         vehicle.details.map(detail => ({\r\n//             description: trimStringToLimit(vehicle.description, 200),\r\n//             quantity: detail.quantity,\r\n//             unit_cost: vehicle.unitPrice,\r\n//             exworks: parseFloat(detail.quantity) * parseFloat(vehicle.unitPrice),\r\n//             cpc_code: parseInt(availableCPCCodes.find(cpc => cpc.cpcId === detail.cpcCode)?.code),\r\n//             country_origin_code: 'US',\r\n//             anc_code: detail.npcCode, \r\n//             commodity: vehicle.thnNumber.replace(/\\./g, \"\"),\r\n//             gross_weight: vehicle.grossWeight,\r\n//             net_weight: vehicle.netWeight,\r\n//             package_quantity: 1,\r\n//             kind_of_package: 'CT',\r\n//             marks_and_numbers: `CHASSIS # ${detail.chassisNumber}`,\r\n//             chassis_number: detail.chassisNumber,\r\n//             curb_weight: vehicle.curbWeight,\r\n//             engine_number: detail.engineNumber,\r\n//             exterior_color: detail.exteriorColor,\r\n//             customer: detail.customerName,\r\n//             customer_tin: detail.customerTIN,\r\n//             instruction_code: detail.brokerInstructions,\r\n//             engine_displacement: parseFloat(vehicle.engineDisplacement),\r\n//             manufacture_year: detail.manufactureYear,\r\n//             number_of_seats: vehicle.numberOfSeats,\r\n//             number_of_doors: vehicle.numberOfDoors,\r\n//             tyre_size: vehicle.tyreSize,\r\n//             model_code: vehicle.modelCode,\r\n//             fuel_type: vehicle.fuelType,\r\n//             seat_position: vehicle.seatPosition,\r\n//             used_flag: false,\r\n//             trade_agreement: '',\r\n//             model_name: vehicle.modelCode,\r\n//         }))\r\n//     );\r\n// }\r\n\r\nexport const formatVehicleDataXML = (vehicles, availableCPCCodes, totalFOB, totalGrossWeight = 200, countryOfOrigin = 'US') => {\r\n    let cumulativeWeight = 0;  // This will track the cumulative gross weight calculated\r\n    \r\n    return vehicles.flatMap((vehicle, vehicleIndex, vehicleArray) => \r\n        vehicle.details.map((detail, detailIndex, detailArray) => {\r\n            let gross_weight = (parseFloat(detail.quantity) * parseFloat(vehicle.unitPrice) / totalFOB) * parseFloat(totalGrossWeight);\r\n\r\n            if (detailIndex === detailArray.length - 1 && vehicleIndex === vehicleArray.length - 1) {\r\n                // For the last item, adjust the weight to ensure total weights sum up to the total gross weight\r\n                gross_weight = parseFloat(totalGrossWeight) - cumulativeWeight;\r\n                gross_weight = Number(gross_weight.toFixed(2));\r\n            } else {\r\n                // For all other items, truncate the weight to two decimal places\r\n                gross_weight = Math.floor(gross_weight * 100) / 100;\r\n                cumulativeWeight += gross_weight;\r\n            }\r\n\r\n            const net_weight = parseFloat(gross_weight) - (parseFloat(gross_weight) / 10);\r\n\r\n            return {\r\n                description: trimStringToLimit(vehicle.description, 200),\r\n                quantity: 1,\r\n                unit_cost: vehicle.unitPrice,\r\n                exworks: parseFloat(vehicle.unitPrice),\r\n                cpc_code: parseInt(availableCPCCodes.find(cpc => cpc.cpcId === detail.cpcCode)?.code),\r\n                country_origin_code: countryOfOrigin,\r\n                anc_code: detail.npcCode, \r\n                commodity: vehicle.thnNumber.replace(/\\./g, \"\"),\r\n                gross_weight: parseFloat(gross_weight),\r\n                net_weight: Math.floor(net_weight * 100) / 100,\r\n                package_quantity: 1,\r\n                kind_of_package: 'CT',\r\n                marks_and_numbers: `CHASSIS # ${detail.chassisNumber}`,\r\n                chassis_number: detail.chassisNumber,\r\n                curb_weight: vehicle.curbWeight || 0,\r\n                engine_number: detail.engineNumber,\r\n                exterior_color: detail.exteriorColor,\r\n                customer: detail.customerName || \"\",\r\n                customer_tin: detail.customerTIN || \"\",\r\n                instruction_code: detail.brokerInstructions,\r\n                engine_displacement: parseFloat(vehicle.engineDisplacement),\r\n                manufacture_year: detail.manufactureYear,\r\n                number_of_seats: vehicle.numberOfSeats,\r\n                number_of_doors: vehicle.numberOfDoors,\r\n                tyre_size: vehicle.tyreSize || \"\",\r\n                model_code: vehicle.modelCode,\r\n                fuel_type: vehicle.fuelType,\r\n                seat_position: vehicle.seatPosition,\r\n                used_flag: false,\r\n                trade_agreement: '',\r\n                model_name: vehicle.modelCode,\r\n            }\r\n        })\r\n    );\r\n}\r\n\r\nexport const discountCheck = (invoices) => {\r\n    if (!Array.isArray(invoices)) {\r\n        return false;\r\n    }\r\n\r\n    // Iterate over each invoice\r\n    for (let invoice of invoices) {\r\n        // Check if the invoice has items\r\n        if (!invoice || !invoice.invoice_items || !Array.isArray(invoice.invoice_items)) {\r\n            continue;\r\n        }\r\n\r\n        // Iterate over the items to check for discounted_unit_price\r\n        for (let item of invoice.invoice_items) {\r\n            const unitPrice = parseFloat(item.unit_price);\r\n            const discountedPrice = parseFloat(item.discounted_unit_price);\r\n\r\n            // Check if discountedPrice is a valid number and is different from unitPrice\r\n            if (item.discounted_unit_price && !isNaN(discountedPrice) && discountedPrice !== unitPrice) {\r\n                return true; // Return true if any item has a valid discounted_unit_price different from unit_price\r\n            }\r\n        }\r\n    }\r\n\r\n    return false; // Return false if no items have a valid discounted_unit_price in any invoice\r\n}\r\n\r\nexport const formatVehicleDataWorksheet = (vehicles, availableCPCCodes, countryOfOrigin = 'US') => {\r\n    return vehicles.flatMap(vehicle => \r\n        vehicle.details.map(detail => ({\r\n            description: `${vehicle.description} CN: ${detail.chassisNumber}`,\r\n            quantity: 1,\r\n            unit_cost: vehicle.unitPrice,\r\n            exworks: parseFloat(vehicle.unitPrice),\r\n            cpc_code: `${parseInt(availableCPCCodes.find(cpc => cpc.cpcId === detail.cpcCode)?.code)}`,\r\n            country_of_origin: countryOfOrigin,\r\n            anc_code: detail.npcCode, \r\n            commodity: vehicle.commodity,\r\n            gross_weight: vehicle.grossWeight,\r\n            net_weight: vehicle.netWeight,\r\n            package_quantity: 1,\r\n            kind_of_package: 'CT',\r\n            marks_and_numbers: `CHASSIS # ${detail.chassisNumber}`,\r\n            chassis_number: detail.chassisNumber,\r\n            curb_weight: vehicle.curbWeight,\r\n            engine_number: detail.engineNumber,\r\n            exterior_color: detail.exteriorColor,\r\n            customer: detail.customerName,\r\n            customer_tin: detail.customerTIN,\r\n            instruction_code: detail.brokerInstructions,\r\n            engine_displacement: parseFloat(vehicle.engineDisplacement),\r\n            manufacture_year: detail.manufactureYear,\r\n            number_of_seats: vehicle.numberOfSeats,\r\n            number_of_doors: vehicle.numberOfDoors,\r\n            tyre_size: vehicle.tyreSize,\r\n            model_code: vehicle.modelCode,\r\n            fuel_type: vehicle.fuelType,\r\n            seat_position: vehicle.seatPosition,\r\n            used_flag: false\r\n        }))\r\n    );\r\n}\r\n\r\nexport const formatCommercialData = (invoices, freight, totalFOB) => {\r\n    console.log(\"Invoices: \", invoices)\r\n    return invoices.map(invoice => {\r\n        return {\r\n            name: invoice.invoice_number,\r\n            supplier: invoice.supplier_name,\r\n            exworks: parseFloat(invoice.invoice_total),\r\n            invoice_currency: invoice.currency,\r\n            cif_foreign_currency: cacluateCIF(invoice.invoice_total, totalFOB, freight, invoice.inland, invoice.insurance, invoice.otherCharges),\r\n            rate_of_exchange: invoice.rate_of_exchange,\r\n            cif_local_currency: cacluateCIF(invoice.invoice_total, totalFOB, freight, invoice.inland, invoice.insurance, invoice.otherCharges) * invoice.rate_of_exchange,\r\n            supplementary_charges_and_deductions: {\r\n                internal_freight: parseFloat(verifyNumbers(invoice.inland)),\r\n                insurance: parseFloat(verifyNumbers(invoice.insurance)),\r\n                // external_freight: freight,\r\n                other: parseFloat(verifyNumbers(invoice.otherCharges)),\r\n                deductions: 0,\r\n            },\r\n            line_items: invoice.lines.map(item => {\r\n                return {\r\n                    ...(item.manualExemption ? { relieved: true } : {}),\r\n                    description: item.description,\r\n                    quantity: parseFloat(item.quantity),\r\n                    unit_cost: parseFloat(item.unit_price),\r\n                    exworks: parseFloat(item.extension_price),\r\n                    cpc_code: item.cpcCodeName,\r\n                    trade_agreement: item.tradeAgreementCode || \"\",\r\n                    country_of_origin: item.country_of_origin,\r\n                    anc_code: item.npcCode, \r\n                    commodity: item.commodity\r\n                }\r\n            })\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport const formatInvoiceData = (invoices, freight, totalFOB) => {\r\n    return invoices.map(invoice => {\r\n        return {\r\n            name: invoice.invoice_id,\r\n            supplier: invoice.vendor_name,\r\n            exworks: invoice.invoice_total,\r\n            invoice_currency: invoice.currency,\r\n            cif_foreign_currency: cacluateCIF(invoice.invoice_total, totalFOB, freight, invoice.inland, invoice.insurance, invoice.otherCharges),\r\n            rate_of_exchange: invoice.rate_of_exchange,\r\n            cif_local_currency: cacluateCIF(invoice.invoice_total, totalFOB, freight, invoice.inland, invoice.insurance, invoice.otherCharges) * invoice.rate_of_exchange,\r\n            supplementary_charges_and_deductions: {\r\n                internal_freight: parseFloat(invoice.inland),\r\n                insurance: parseFloat(invoice.insurance),\r\n                // external_freight: parseFloat(freight),\r\n                other: parseFloat(invoice.otherCharges),\r\n                deductions: 0,\r\n            },\r\n            line_items: invoice.lines.map(item => {\r\n                return {\r\n                    description: item.description,\r\n                    quantity: parseFloat(item.quantity),\r\n                    unit_cost: parseFloat(item.unit_price),\r\n                    exworks: parseFloat(item.extension_price),\r\n                    cpc_code: item.cpcCodeName,\r\n                    country_of_origin: item.country_of_origin,\r\n                    anc_code: item.npcCode, \r\n                    commodity: item.commodity\r\n                }\r\n            })\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport function getCurrentDateString() {\r\n    const today = new Date();\r\n    \r\n    // Get the day, month, and year\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed\r\n    const year = today.getFullYear();\r\n    \r\n    // Format the date string as DD/MM/YYYY\r\n    const dateString = `${day}/${month}/${year}`;\r\n    \r\n    return dateString;\r\n  }\r\n\r\nexport function getDateStringInputField(date = new Date()) {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport const formatDepositData = (regimeType, waybillNumber, waybillDate, incoTerms, importer, importNumber, declarant, declarantNumber, referenceNumber, shipper, countryOfOrigin, countryOfOriginCode, meansOfTransport, modeOTransportCode, portOfDischarger, portCode, depositAmount, reason) => {\r\n    return {\r\n        regimeType: regimeType,\r\n        waybillNumber: waybillNumber,\r\n        waybillDate: waybillDate,\r\n        incoTerms: incoTerms,\r\n        termsOfPayment: \"SDT\",\r\n        importer: importer,\r\n        imorterNo: importNumber === null ? \"\" : importNumber,\r\n        declarant: declarant,\r\n        declarantNo: declarantNumber,\r\n        reference: referenceNumber,\r\n        consignor: shipper,\r\n        countryOfConsignment: countryOfOrigin,\r\n        countryOfConsignmentCode: countryOfOriginCode,\r\n        meansOfTransportation: meansOfTransport,\r\n        rotation: \"/24\",\r\n        mode: modeOTransportCode,\r\n        portOfImportation: portOfDischarger,\r\n        portCode: portCode,\r\n        dateOfImportation: getCurrentDateString(),\r\n        depositAmount: parseFloat(depositAmount).toFixed(2),\r\n        reason: reason\r\n    }\r\n}\r\n\r\nexport const formatCaricomData = (importerNameAddress, exporterNameAddress, referenceNumber, countryOfOrigin, incoTerms, portOfLoading, countryOfDestination, modeOfTransport, vessel, currency, descriptionOfGoods, grossWeight, invoices, packageQuantity, totalCargoValue, freight, insurance, otherCharges, packageType=\"pks\") => {\r\n    let packageList = invoices.flatMap(invoice => {\r\n        return invoice.lines.map(line => {\r\n            let lineGrossWeight = (parseFloat(line.extension_price) / totalCargoValue) * parseFloat(grossWeight);\r\n            let lineNetWeight = lineGrossWeight - (lineGrossWeight / 10)\r\n            return {\r\n                \"numberAndKindOfPackages\": \"\",\r\n                \"specificationOfCommodities\": line.description,\r\n                \"netWeight\": lineNetWeight.toFixed(2),\r\n                \"quantity\": parseFloat(line.quantity).toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n                \"unitPrice\": parseFloat(line.unit_price).toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n                \"amount\": parseFloat(line.extension_price).toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n                \"invoiceNumber\": invoice.invoice_number,\r\n            }\r\n        })\r\n    });\r\n    const totalValue = parseFloat(totalCargoValue) + parseFloat(freight) + parseFloat(insurance) + parseFloat(otherCharges);\r\n    console.log(\"Other Charges:\", otherCharges)\r\n    console.log(totalCargoValue, freight, insurance, otherCharges, totalValue)\r\n    packageList[0].numberAndKindOfPackages = `${packageQuantity} ${packageType}(s)`;\r\n    return {\r\n        \"sellerNameAddress\": exporterNameAddress,\r\n        \"invoiceNumber\": `${getCurrentDateString()} ${referenceNumber}`,\r\n        \"customerOrderNumber\": \"\",\r\n        \"otherReferences\": \"\",\r\n        \"buyer\": \"\",\r\n        \"consigneeNameAddress\": importerNameAddress,\r\n        \"presentingBank\": \"\",\r\n        \"countryOfOrigin\": countryOfOrigin,\r\n        \"incoterms\": incoTerms,\r\n        \"portOfLoading\": portOfLoading,\r\n        \"countryOfFinalDestination\": countryOfDestination,\r\n        \"modeOfTransport\": modeOfTransport,\r\n        \"currencyOfSale\": currency,\r\n        \"otherTransportInformation\": vessel,\r\n        \"marksAndNumbers\": \"As Addressed\",\r\n        \"descriptionOfGoods\": descriptionOfGoods,\r\n        \"grossWeight\": grossWeight.toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n        \"packages\": packageList,\r\n        \"fob\": totalCargoValue.toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n        \"packaging\": \"0.00\",\r\n        \"freight\": freight.toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n        \"insurance\": insurance.toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n        \"otherCharges\": otherCharges.toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n        \"invoiceTotal\": totalValue.toLocaleString('en-US', {minimumFractionDigits: 2}),\r\n    }\r\n}\r\n\r\nexport const initializeCustomsEntryForm = () => {\r\n    return {\r\n        exporters: [],\r\n        importers: [],\r\n        vessels: [],\r\n        ports: [],\r\n        declarants: [],\r\n        incotermsList: [],\r\n        ratesOfExchange: [],\r\n        importerId: '',\r\n        exporterId: '',\r\n        importerName: '',\r\n        exporterName: '',\r\n        importerTaxIdentificationNumber: '',\r\n        exporterTaxIdentificationNumber: '',\r\n        exporterCountry: '',\r\n        declarantId: '',\r\n        declarantTaxIdentificationNumber: '',\r\n        modeOfTransport: '',\r\n        freightType: '',\r\n        waybillNumber: '',\r\n        waybillDate: '',\r\n        vesselId: '',\r\n        vesselName: '',\r\n        incoTerms: '',\r\n        portOfDischargeId: '',\r\n        portOfDischargeName: '',\r\n        netWeight: 0.0,\r\n        grossWeight: 0.0,\r\n        numberOfPackages: 0,\r\n        packageType: '',\r\n        packageTypes: [],\r\n        marksAndNumbers: 'As Addressed',\r\n        freightCurrency: 'USD',\r\n        insuranceCurrency: 'USD',\r\n        otherChargesCurrency: 'USD',\r\n        totalCargoValue: 0.0,\r\n        freightAmount: 0.0,\r\n        insuranceAmount: 0.0,\r\n        otherCharges: 0.0,\r\n        insuranceRateOfExchange: 0.0,\r\n        otherChargesRateOfExchange: 0.0,\r\n        freightRateOfExchange: 0.0,\r\n        rateOfExchange: 0.0,\r\n        regimeType: '',\r\n        regimeTypeCode: '',\r\n        regimeTypeOptions: [],\r\n        depositAmount: 0.0,\r\n        containerCharges: 0.0,\r\n        additionalCharges: 0.0,\r\n        localFee: 0.0,\r\n        countryOfOrigin: '',\r\n        countryOfFinalDestination: 'TT',\r\n        countryLastProvinance: '',\r\n        tradingCountry: ''\r\n    }\r\n}\r\n\r\nexport const getClassificationStatusCreatePage = (invoiceList) => {\r\n    return invoiceList.some(invoice => {\r\n        return invoice.lines.some(line => !line.tariff_code || line.tariff_code.trim() === '');\r\n      });\r\n\r\n}\r\n\r\nexport const getClassificationStatus = (invoiceList) => {\r\n    return invoiceList.some(invoice => {\r\n        return invoice.lines.some(line => !line.tariff_code || line.tariff_code.trim() === '')\r\n    })\r\n}\r\n\r\nexport const formatDate = (dateString) => {\r\n    const options = { day: '2-digit', month: 'short', year: 'numeric' };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(undefined, options);\r\n}\r\n\r\nexport const calculateInvoiceTotal = (extenstionTotal, insurance, inland, otherCharges) => {\r\n    return extenstionTotal + insurance + inland + otherCharges;\r\n}\r\n\r\nconst normalizeString = (str) => {\r\n    return str\r\n      .toLowerCase()\r\n      .replace(/\\bltd\\b/g, 'limited')\r\n      .replace(/[^a-z0-9]/g, '');\r\n};\r\n\r\nexport const findClosestMatch = (searchString, searchArray, searchField = 'name') => {\r\n    const normalizedSearchString = normalizeString(searchString);\r\n    const names = searchArray.map(item => normalizeString(item[searchField]));\r\n\r\n    const { bestMatch } = stringSimilarity.findBestMatch(normalizedSearchString, names);\r\n    return searchArray.find(item => normalizeString(item[searchField]) === bestMatch.target);\r\n}\r\n\r\nexport const parseDate = (dateString) => {\r\n    // Remove ordinal suffixes (like \"TH\") from the date string\r\n    const cleanDateString = dateString.replace(/(\\d+)(ST|ND|RD|TH)/gi, '$1');\r\n  \r\n    const possibleFormats = [\r\n      'dd-MMM-yyyy',\r\n      'dd/MM/yyyy',\r\n      'MMM/dd/yyyy',\r\n      'yyyy-MM-dd',\r\n      'yyyy/MM/dd',\r\n      'dd MMM yyyy',\r\n      'MMM dd, yyyy',\r\n      'dd-MM-yyyy',\r\n      'yyyyMMdd',\r\n      'dd,MMM,yyyy'  // Add this format to handle \"19TH,MAR,2024\"\r\n    ];\r\n  \r\n    for (const formatString of possibleFormats) {\r\n      const parsedDate = parse(cleanDateString, formatString, new Date(), { locale: enUS });\r\n      if (!isNaN(parsedDate)) {\r\n        return parsedDate;\r\n      }\r\n    }\r\n  \r\n    // If no format matches, try using the built-in Date constructor\r\n    const parsedDate = new Date(cleanDateString);\r\n    if (!isNaN(parsedDate)) {\r\n      return parsedDate;\r\n    }\r\n  \r\n    throw new Error(`Unable to parse date: ${dateString}`);\r\n  };\r\n  \r\n  export const formatDateString = (date) => {\r\n    return format(date, 'yyyy-MM-dd'); // or any desired format\r\n  };\r\n\r\n  export const parseFreightCharges = (freightString) => {\r\n    // Remove any non-numeric characters except for the decimal point\r\n    const cleanedString = freightString.replace(/[^0-9.]/g, '');\r\n  \r\n    // Convert the cleaned string to a float number\r\n    const parsedValue = parseFloat(cleanedString);\r\n  \r\n    // Check if the parsed value is a valid number\r\n    if (isNaN(parsedValue)) {\r\n      return 0.0;\r\n    }\r\n  \r\n    return parsedValue;\r\n  };\r\n\r\n  export const formatScoonerBLDetails = (exporter, importer, marksAndNumbers, vesselName, countryOfDestination, invoiceLines, freightPayableAt, grossWeight, portOfDischarge, referenceNumber) => {\r\n    return {\r\n        exporter: exporter,\r\n        importer: importer,\r\n        marksAndNumbers: marksAndNumbers,\r\n        vesselName: vesselName,\r\n        countryOfDestination: countryOfDestination,\r\n        invoiceLines: invoiceLines,\r\n        freightPayableAt: freightPayableAt,\r\n        grossWeight: grossWeight,\r\n        portOfDischarge: portOfDischarge,\r\n        date: getCurrentDateString(),\r\n        referenceNumber: referenceNumber\r\n    }\r\n  }\r\n\r\nexport const transformArray = (data) => {\r\n    // Check if the data is an array of arrays\r\n    if (Array.isArray(data) && Array.isArray(data[0])) {\r\n        // Flatten the array of arrays\r\n        return data.flat();\r\n    }\r\n    // Return the data as is if it's already in the desired format\r\n    return data;\r\n}\r\n\r\nexport const renameObjectKeys = (invoices) => {\r\n    for (let i = 0; i < invoices.length; i++) {\r\n        let { invoice_items: lines, ...rest } = invoices[i];\r\n        invoices[i] = { lines, ...rest };\r\n    }\r\n    return invoices;\r\n}\r\n\r\nexport const readFilesLLM = async (url, files) => {\r\n    console.log(\"Uploading Files\", url);\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n        formData.append(\"files\", file);\r\n        formData.append(\"commercialInvoice\", file);\r\n    }\r\n    const invoiceProcessingStart = new Date();\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n    }).then((response) => response.json()).then((data) => {\r\n        console.log(\"Data: \", data);\r\n        const invoiceProcessingEnd = new Date();\r\n        console.log(\"Invoice Processing Time: \", invoiceProcessingEnd - invoiceProcessingStart);\r\n        const invoices = renameObjectKeys(data);\r\n        invoices.forEach(invoice => {\r\n            invoice.invoice_total = invoice.invoice_total ? parseFloatFromString(invoice.invoice_total) : (invoice.invoice_exworks_amount ? parseFloatFromString(invoice.invoice_exworks_amount) : 0.00)\r\n            invoice.inland = invoice.invoice_internal_freight_amount ? parseFloatFromString(invoice.invoice_internal_freight_amount) : 0.00;\r\n            invoice.insurance = invoice.invoice_insurance_amount ? parseFloatFromString(invoice.invoice_insurance_amount): 0.00;\r\n            invoice.otherCharges = invoice.invoice_other_charges_amount ? parseFloatFromString(invoice.invoice_other_charges_amount) : 0.00;\r\n            invoice.final_total = parseFloatFromString(invoice.final_total);\r\n            invoice.total_tax = 0.00;\r\n            invoice.subtotal = invoice.invoice_total ? parseFloatFromString(invoice.invoice_total) : (invoice.invoice_exworks_amount ? parseFloatFromString(invoice.invoice_exworks_amount) : 0.00);\r\n            invoice.invoice_number = invoice.invoice_id;\r\n            delete invoice.invoice_id;\r\n            console.log(\"Invoice Date: \", invoice.invoice_date)\r\n            invoice.invoice_date = invoice.invoice_date ? getDateStringInputField(parseDate(invoice.invoice_date)) : null;\r\n            console.log(\"Invoice Date: \", invoice.invoice_date)\r\n            invoice.currency = \"USD\";\r\n            invoice.lines.forEach((item) => {\r\n                item.country_of_origin = \"\";\r\n                item.quantity = parseFloatFromString(item.quantity);\r\n                item.unit_price = parseFloatFromString(item.unit_price);\r\n                item.extension_price = parseFloatFromString(item.amount).toFixed(2);\r\n                item.vatApplicable = true;\r\n                item.cpcCode = 30;\r\n                item.npcCode = \"000\";\r\n                // item.vat_applicable = item.vat_applicable === 'Yes'\r\n            });\r\n        });\r\n        const llmResponse = {\r\n            invoiceData: invoices,\r\n            invoiceProcessingTime: invoiceProcessingEnd - invoiceProcessingStart\r\n        }\r\n        return llmResponse;\r\n    });\r\n}\r\n\r\nexport const formatDateReadFromDB = (databaseDate) => {\r\n    if (databaseDate === \"0000-00-00\" || !databaseDate) {\r\n        return \"\";\r\n    } else {\r\n        let dateObject = new Date(databaseDate);\r\n        if (isNaN(dateObject)) {\r\n            return \"\";\r\n        } else {\r\n            return dateObject.toISOString().split(\"T\")[0];\r\n        }\r\n    }\r\n}","import Swal from 'sweetalert2'\r\nimport * as Utilities from '@/composables/Utilities';\r\n\r\nexport function showSuccessAlert(title) {\r\n    Swal.fire({\r\n        position: 'top-end',\r\n        toast: true, \r\n        icon: 'success',\r\n        title: title,\r\n        showConfirmButton: false,\r\n        timer: 2000, \r\n        timerProgressBar: true, \r\n    });\r\n}\r\n\r\nexport function asyncLoadingAlert(text){\r\n    Swal.fire({\r\n        html: text,\r\n        allowOutsideClick: true, // Allow users to interact with the page\r\n        backdrop: false, // No backdrop\r\n        showConfirmButton: false,\r\n        width: '300px',\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        position: 'top-end',\r\n        customClass: {\r\n          container: 'swal2-top-end'\r\n        }\r\n    });\r\n}\r\n\r\nexport function closeCurrentAlert() {\r\n    Swal.close();\r\n}\r\n\r\nexport function updateCurrentAlert(text) {\r\n    Swal.update({\r\n        html: text\r\n    });\r\n\r\n}\r\n\r\nexport function showErrorAlert(text) {\r\n    Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: text,\r\n    });\r\n}\r\n\r\nexport function showLoadingAlert(title) {\r\n    Swal.fire({\r\n        title: 'One moment...',\r\n        html: title,\r\n        allowOutsideClick: false,\r\n        showConfirmButton: false,\r\n        willOpen: () => {\r\n          Swal.showLoading();\r\n        }\r\n    });\r\n}\r\n\r\nexport async function displayConfirmationDialog(){\r\n    return await Swal.fire({\r\n        title: 'I noticed you deleted something!',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n        return result;\r\n    });\r\n}\r\n\r\nexport async function form(declarationList, signatories) {\r\n    // Create options HTML for the first select field\r\n    const options1 = Object.entries(declarationList).map(\r\n        ([value, text]) => `<option value=\"${value}\">${text}</option>`\r\n    ).join('');\r\n\r\n    // Create options HTML for the second select field\r\n    const options2 = signatories.map(\r\n        (signatory) => `<option value=\"${signatory.id}\">${signatory.name}</option>`\r\n    ).join('');\r\n\r\n    return await Swal.fire({\r\n        title: \"Special Exemption Details\",\r\n        html: `\r\n            <select id=\"swal-input1\" class=\"swal2-input\">\r\n                <option value=\"\" selected disabled>Please select declaration number</option>\r\n                ${options1}\r\n            </select>\r\n            <div style=\"margin-top: 15px;\"></div>\r\n            <select id=\"swal-input2\" class=\"swal2-input\">\r\n                <option value=\"\" selected disabled>Please select signatory</option>\r\n                ${options2}\r\n            </select>\r\n            <div style=\"margin-top: 15px;\"></div>\r\n            <div id=\"swal-radio-group\" class=\"swal2-input\">\r\n                <label>Generate Pre-Signed:</label>\r\n                <div>\r\n                    <input type=\"radio\" id=\"generate-yes\" name=\"generate-pre-signed\" value=\"yes\">\r\n                    <label for=\"generate-yes\">Yes</label>\r\n                    <input type=\"radio\" id=\"generate-no\" name=\"generate-pre-signed\" value=\"no\" checked>\r\n                    <label for=\"generate-no\">No</label>\r\n                </div>\r\n            </div>\r\n        `,\r\n        focusConfirm: false,\r\n        showCancelButton: true,\r\n        preConfirm: () => {\r\n            const select1 = Swal.getPopup().querySelector('#swal-input1').value;\r\n            const select2 = Swal.getPopup().querySelector('#swal-input2').value;\r\n            const generatePreSigned = Swal.getPopup().querySelector('input[name=\"generate-pre-signed\"]:checked').value;\r\n\r\n            if (!select1 || !select2) {\r\n                Swal.showValidationMessage(`Please select both declaration numbers`);\r\n            }\r\n            return { \r\n                select1, \r\n                select2, \r\n                generatePreSigned: generatePreSigned === 'yes' \r\n            };\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return result.value;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function overtimeAlert() {\r\n    return await Swal.fire({\r\n        title: \"Cargo Details\",\r\n        html: `\r\n        <div style=\"display: flex; flex-direction: column; align-items: center;\">\r\n            <label for=\"cargo-details\" style=\"margin-bottom: 5px;\">Please enter the cargo details:</label>\r\n            <input type=\"text\" id=\"cargo-details\" class=\"swal2-input\" placeholder=\"Enter cargo details here...\" style=\"margin-bottom: 15px;\">\r\n            <label for=\"start-time\" style=\"margin-bottom: 5px;\">Please enter the start time:</label>\r\n            <input type=\"time\" id=\"start-time\" class=\"swal2-input\" value=\"16:00\">\r\n        </div>\r\n        `,\r\n        focusConfirm: false,\r\n        showCancelButton: true,\r\n        preConfirm: () => {\r\n            const cargoDetails = Swal.getPopup().querySelector('#cargo-details').value;\r\n            const startTime = Swal.getPopup().querySelector('#start-time').value;\r\n\r\n            if (!cargoDetails || !startTime) {\r\n                Swal.showValidationMessage(`Please enter both cargo details and start time`);\r\n            }\r\n\r\n            const [hours, minutes] = startTime.split(':');\r\n            const hour = parseInt(hours, 10);\r\n            const period = hour >= 12 ? 'PM' : 'AM';\r\n            const adjustedHour = hour % 12 || 12;\r\n            const formattedTime = `${adjustedHour}:${minutes} ${period}`;\r\n\r\n            return { cargoDetails, startTime: formattedTime };\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            console.log('Cargo Details:', result.value.cargoDetails);\r\n            console.log('Start Time:', result.value.startTime);\r\n            return result.value;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function caricomAlert() {\r\n    return await Swal.fire({\r\n        title: \"Enter Cargo Details\",\r\n        input: 'text',\r\n        inputLabel: 'Cargo Details',\r\n        inputPlaceholder: 'Enter the cargo details here...',\r\n        showCancelButton: true,\r\n        inputValidator: (value) => {\r\n            if (!value) {\r\n                return 'Cargo details are required!';\r\n            }\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return result.value;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function enterYourName(){\r\n    return await Swal.fire({\r\n        title: \"Enter Your Name\",\r\n        input: 'text',\r\n        inputLabel: 'Name',\r\n        inputPlaceholder: 'Enter your name here...',\r\n        showCancelButton: true,\r\n        inputValidator: (value) => {\r\n            if (!value) {\r\n                return 'Name is required!';\r\n            }\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return result.value;\r\n        }\r\n        return \"CANCELED\"\r\n    });\r\n}\r\n\r\nexport async function discountAlert() {\r\n    return await Swal.fire({\r\n        title: 'Discount Detected',\r\n        text: \"A discount has been detected on an invoice. Would you like to use the discounted price or the full price?\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Use Discounted Price',\r\n        cancelButtonText: 'Use Full Price'\r\n    }).then((result) => {\r\n        return result.isConfirmed; // Return true if the user chooses discounted price, false otherwise\r\n    });\r\n}\r\n\r\nexport async function worksheetFormatAlert() {\r\n    return await Swal.fire({\r\n        title: 'Choose Document Format',\r\n        text: \"Please select the format in which you want to generate the document.\",\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Summarized',\r\n        cancelButtonText: 'Detailed'\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return 'summarized';\r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n            return 'detailed';\r\n        }\r\n    });\r\n}\r\n\r\nexport async function zeroValueAlert(){\r\n    return await Swal.fire({\r\n        title: 'Zero Value',\r\n        text: \"At least one item has a value of zero. Do you want to proceed?\",\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes Proceed',\r\n        cancelButtonText: 'No'\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return 'yes';\r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n            return 'no';\r\n        }\r\n    });\r\n}\r\n\r\nexport async function depositReasonAlert() {\r\n    return await Swal.fire({\r\n        title: \"Select Reason for Deposit\",\r\n        input: 'select',\r\n        inputOptions: {\r\n            'PENDING CARICOM AREA INVOICE': 'PENDING CARICOM AREA INVOICE',\r\n            'PENDING STATUS OF SIGNATORY ON CARICOM CARE INVOICE': 'PENDING STATUS OF SIGNATORY ON CARICOM CARE INVOICE'\r\n        },\r\n        inputPlaceholder: 'Select a reason...',\r\n        showCancelButton: true,\r\n        inputValidator: (value) => {\r\n            if (!value) {\r\n                return 'You need to select a reason!';\r\n            }\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return result.value;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function displayRateOfExchangeTable(exchangeRates){\r\n    const tableHtml = `\r\n      <table border=\"1\" style=\"width:100%; text-align:left;\">\r\n        <thead>\r\n          <tr>\r\n            <th>Base Currency</th>\r\n            <th>Rate</th>\r\n            <th>Effective Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${exchangeRates.map(rate => `\r\n            <tr>\r\n              <td>${rate.base_currency}</td>\r\n              <td>${rate.rate}</td>\r\n              <td>${Utilities.formatDate(rate.last_updated)}</td>\r\n            </tr>\r\n          `).join('')}\r\n        </tbody>\r\n      </table>\r\n    `;\r\n\r\n    Swal.fire({\r\n      title: 'Exchange Rates',\r\n      html: tableHtml,\r\n      width: '800px', // Adjust the width as needed\r\n      showCloseButton: true,\r\n      focusConfirm: false,\r\n      confirmButtonText: 'Close'\r\n    });\r\n}\r\n\r\nexport async function displayEditableTaxTable(taxData, extensionPrice = 0) {\r\n    const tableHtml = `\r\n        <table border=\"1\" style=\"width:100%; text-align:left;\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Tax Name</th>\r\n                    <th>Tax Percentage</th>\r\n                    <th>Amount Payable</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                ${Object.entries(taxData).map(([taxName, taxArray], index) => {\r\n                    const taxDetails = taxArray[0];\r\n                    const chargeAmount = parseFloat(taxDetails.charge_amount);\r\n                    if (chargeAmount > 0) {\r\n                        return `\r\n                            <tr>\r\n                                <td id=\"taxName-${index}\" data-index=\"${index}\">${taxName}</td>\r\n                                <td><input type=\"number\" id=\"chargeAmount-${index}\" class=\"chargeAmount\" data-index=\"${index}\" value=\"${chargeAmount}\" /></td>\r\n                                <td><input type=\"number\" id=\"amountpayable-${index}\" class=\"amountPayable\" data-index=\"${index}\" value=\"${(chargeAmount / 100 * extensionPrice).toFixed(2)}\" /></td>\r\n                            </tr>\r\n                        `;\r\n                    }\r\n                    return '';\r\n                }).join('')}\r\n            </tbody>\r\n        </table>\r\n    `;\r\n\r\n    const result = await Swal.fire({\r\n        title: 'Tax Information',\r\n        html: tableHtml,\r\n        width: '800px',\r\n        showCloseButton: true,\r\n        focusConfirm: false,\r\n        confirmButtonText: 'OK',\r\n        didOpen: () => {\r\n            document.querySelectorAll('.chargeAmount').forEach(input => {\r\n                input.addEventListener('input', function() {\r\n                    const index = this.dataset.index;\r\n                    const percentage = parseFloat(this.value) || 0;\r\n                    const amountPayable = (percentage / 100 * extensionPrice).toFixed(2);\r\n                    document.getElementById(`amountpayable-${index}`).value = amountPayable;\r\n                });\r\n            });\r\n            document.querySelectorAll('.amountPayable').forEach(input => {\r\n                input.addEventListener('input', function() {\r\n                    const index = this.dataset.index;\r\n                    const amountPayable = parseFloat(this.value) || 0;\r\n                    const chargeAmount = (amountPayable / extensionPrice * 100).toFixed(2);\r\n                    document.getElementById(`chargeAmount-${index}`).value = chargeAmount;\r\n                });\r\n            });\r\n        },\r\n        preConfirm: () => {\r\n            // Collect all the data from the inputs\r\n            const taxes = {};\r\n            document.querySelectorAll('.chargeAmount').forEach(input => {\r\n                const index = input.dataset.index;\r\n                // const taxName = document.querySelector(`tbody tr:nth-child(${index + 1}) td:first-child`).innerHTML;\r\n                const taxName = document.getElementById(`taxName-${index}`).innerHTML;\r\n                const chargeAmount = parseFloat(document.getElementById(`chargeAmount-${index}`).value);\r\n                const amountPayable = parseFloat(document.getElementById(`amountpayable-${index}`).value);\r\n                taxes[taxName] = {\r\n                    chargeAmount: chargeAmount,\r\n                    amountPayable: amountPayable\r\n                };\r\n            });\r\n            return taxes;\r\n        }\r\n    });\r\n    if (result.isConfirmed && result.value) {\r\n        // console.log(result.value); // This will log the object with all the taxes and their updated values\r\n        return result.value; // Returns the object\r\n    }\r\n    return {};\r\n\r\n}\r\n\r\n\r\nexport async function scoonerBLAlert() {\r\n    return await Swal.fire({\r\n        title: \"Scooner BL Details\",\r\n        html: `\r\n            <select id=\"freightPayableAt\" class=\"swal2-input\">\r\n                <option value=\"\">Freight Payable At</option>\r\n                <option value=\"Freight Collect\">Freight Collect</option>\r\n                <option value=\"Freight Pre-Paid\">Freight Pre-Paid</option>\r\n            </select>\r\n            <input type=\"text\" id=\"portOfDischarge\" class=\"swal2-input\" placeholder=\"Port of Discharge\">\r\n        `,\r\n        showCancelButton: true,\r\n        preConfirm: () => {\r\n            const freightPayableAt = Swal.getPopup().querySelector('#freightPayableAt').value;\r\n            const portOfDischarge = Swal.getPopup().querySelector('#portOfDischarge').value;\r\n            if (!freightPayableAt || !portOfDischarge) {\r\n                Swal.showValidationMessage('Both fields are required!');\r\n                return null;\r\n            }\r\n            return { freightPayableAt, portOfDischarge };\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            return result.value;\r\n        }\r\n    });\r\n}\r\n\r\n\r\n// export async function displayEditableTaxTable(taxData, extensionPrice = 0) {\r\n//     const tableHtml = `\r\n//         <table border=\"1\" style=\"width:100%; text-align:left;\">\r\n//             <thead>\r\n//                 <tr>\r\n//                     <th>Tax Name</th>\r\n//                     <th>Charge Amount</th>\r\n//                     <th>Amount</th>\r\n//                     <th>Percentage Exempted</th>\r\n//                     <th>Amount Exempted</th>\r\n//                 </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//                 ${Object.entries(taxData).map(([taxName, taxArray], index) => {\r\n//                     const taxDetails = taxArray[0];\r\n//                     const chargeAmount = parseFloat(taxDetails.charge_amount);\r\n//                     const taxAmount = (chargeAmount / 100) * extensionPrice;\r\n//                     if (chargeAmount > 0) {\r\n//                         return `\r\n//                             <tr>\r\n//                                 <td>${taxName}</td>\r\n//                                 <td>${chargeAmount}%</td>\r\n//                                 <td class=\"taxAmount\">${taxAmount.toFixed(2)}</td>\r\n//                                 <td><input type=\"number\" id=\"percentageExempted-${index}\" class=\"percentageExempted\" data-index=\"${index}\" value=\"0\" /></td>\r\n//                                 <td><input type=\"number\" id=\"amountExempted-${index}\" class=\"amountExempted\" data-index=\"${index}\" value=\"0\" readonly /></td>\r\n//                             </tr>\r\n//                         `;\r\n//                     }\r\n//                     return '';\r\n//                 }).join('')}\r\n//             </tbody>\r\n//         </table>\r\n//     `;\r\n\r\n//     await Swal.fire({\r\n//         title: 'Tax Information',\r\n//         html: tableHtml,\r\n//         width: '800px', // Adjust the width as needed\r\n//         showCloseButton: true,\r\n//         focusConfirm: false,\r\n//         confirmButtonText: 'OK',\r\n//         didOpen: () => {\r\n//             document.querySelectorAll('.percentageExempted').forEach(input => {\r\n//                 input.addEventListener('input', function() {\r\n//                     const index = this.dataset.index ;\r\n//                     const percentage = parseFloat(this.value) || 0;\r\n//                     // console.log(index)\r\n//                     // console.log(document.querySelectorAll('.taxAmount')[index - 1]);\r\n//                     const taxAmount = parseFloat(document.querySelectorAll('.taxAmount')[index - 1].innerText) || 0;\r\n//                     document.getElementById('amountExempted-' + index).value = (percentage / 100 * taxAmount).toFixed(2);\r\n//                 });\r\n//             });\r\n//         }\r\n//     });\r\n// }\r\n","import { ref } from 'vue'\r\nexport function usePackageTypes(){\r\n    const packageTypesList = ref([{ \"value\": \"1A\", \"text\": \"Drum, steel\" },\r\n    { \"value\": \"1B\", \"text\": \"Drum, aluminium\" },\r\n    { \"value\": \"1D\", \"text\": \"Drum, plywood\" },\r\n    { \"value\": \"1G\", \"text\": \"Drum, fibre\" },\r\n    { \"value\": \"1W\", \"text\": \"Drum, wooden\" },\r\n    { \"value\": \"2C\", \"text\": \"Barrel, wooden\" },\r\n    { \"value\": \"3A\", \"text\": \"Jerrican, steel\" },\r\n    { \"value\": \"3H\", \"text\": \"Jerrican, plastic\" },\r\n    { \"value\": \"43\", \"text\": \"Bag, super bulk\" },\r\n    { \"value\": \"4A\", \"text\": \"Box, steel\" },\r\n    { \"value\": \"4B\", \"text\": \"Box, aluminium\" },\r\n    { \"value\": \"4C\", \"text\": \"Box, natural wood\" },\r\n    { \"value\": \"4D\", \"text\": \"Box, plywood\" },\r\n    { \"value\": \"4F\", \"text\": \"Box, reconstituted wood\" },\r\n    { \"value\": \"4G\", \"text\": \"Box, fibreboard\" },\r\n    { \"value\": \"4H\", \"text\": \"Box, plastic\" },\r\n    { \"value\": \"5H\", \"text\": \"Bag, woven plastic\" },\r\n    { \"value\": \"5L\", \"text\": \"Bag, textile\" },\r\n    { \"value\": \"5M\", \"text\": \"Bag, paper\" },\r\n    { \"value\": \"6H\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"6P\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"AA\", \"text\": \"Intermediate bulk container, rigid\" },\r\n    { \"value\": \"AB\", \"text\": \"Receptacle, fibre\" },\r\n    { \"value\": \"AC\", \"text\": \"Receptacle, paper\" },\r\n    { \"value\": \"AD\", \"text\": \"Receptacle, wooden\" },\r\n    { \"value\": \"AE\", \"text\": \"Aerosol\" },\r\n    { \"value\": \"AF\", \"text\": \"Pallet, modular, collars 80cms * 6\" },\r\n    { \"value\": \"AG\", \"text\": \"Pallet, shrinkwrapped\" },\r\n    { \"value\": \"AH\", \"text\": \"Pallet, 100cms * 110cms\" },\r\n    { \"value\": \"AI\", \"text\": \"Clamshell\" },\r\n    { \"value\": \"AJ\", \"text\": \"Cone\" },\r\n    { \"value\": \"AM\", \"text\": \"Ampoule, non-protected\" },\r\n    { \"value\": \"AP\", \"text\": \"Ampoule, protected\" },\r\n    { \"value\": \"AT\", \"text\": \"Atomizer\" },\r\n    { \"value\": \"AV\", \"text\": \"Capsule\" },\r\n    { \"value\": \"BA\", \"text\": \"Barrel\" },\r\n    { \"value\": \"BB\", \"text\": \"Bobbin\" },\r\n    { \"value\": \"BC\", \"text\": \"Bottlecrate / bottlerack\" },\r\n    { \"value\": \"BD\", \"text\": \"Board\" },\r\n    { \"value\": \"BE\", \"text\": \"Bundle\" },\r\n    { \"value\": \"BF\", \"text\": \"Balloon, non-protected\" },\r\n    { \"value\": \"BG\", \"text\": \"Bag\" },\r\n    { \"value\": \"BH\", \"text\": \"Bunch\" },\r\n    { \"value\": \"BI\", \"text\": \"Bin\" },\r\n    { \"value\": \"BJ\", \"text\": \"Bucket\" },\r\n    { \"value\": \"BK\", \"text\": \"Basket\" },\r\n    { \"value\": \"BL\", \"text\": \"Bale, compressed\" },\r\n    { \"value\": \"BM\", \"text\": \"Basin\" },\r\n    { \"value\": \"BN\", \"text\": \"Bale, non-compressed\" },\r\n    { \"value\": \"BO\", \"text\": \"Bottle, non-protected, cylindrical\" },\r\n    { \"value\": \"BP\", \"text\": \"Balloon, protected\" },\r\n    { \"value\": \"BQ\", \"text\": \"Bottle, protected cylindrical\" },\r\n    { \"value\": \"BR\", \"text\": \"Bar\" },\r\n    { \"value\": \"BS\", \"text\": \"Bottle, non-protected, bulbous\" },\r\n    { \"value\": \"BT\", \"text\": \"Bolt\" },\r\n    { \"value\": \"BU\", \"text\": \"Butt\" },\r\n    { \"value\": \"BV\", \"text\": \"Bottle, protected bulbous\" },\r\n    { \"value\": \"BW\", \"text\": \"Box, for liquids\" },\r\n    { \"value\": \"BX\", \"text\": \"Box\" },\r\n    { \"value\": \"BY\", \"text\": \"Board, in bundle/bunch/truss\" },\r\n    { \"value\": \"BZ\", \"text\": \"Bars, in bundle/bunch/truss\" },\r\n    { \"value\": \"CA\", \"text\": \"Can, rectangular\" },\r\n    { \"value\": \"CB\", \"text\": \"Crate, beer\" },\r\n    { \"value\": \"CC\", \"text\": \"Churn\" },\r\n    { \"value\": \"CD\", \"text\": \"Can, with handle and spout\" },\r\n    { \"value\": \"CE\", \"text\": \"Creel\" },\r\n    { \"value\": \"CF\", \"text\": \"Coffer\" },\r\n    { \"value\": \"CG\", \"text\": \"Cage\" },\r\n    { \"value\": \"CH\", \"text\": \"Chest\" },\r\n    { \"value\": \"CI\", \"text\": \"Canister\" },\r\n    { \"value\": \"CJ\", \"text\": \"Coffin\" },\r\n    { \"value\": \"CK\", \"text\": \"Cask\" },\r\n    { \"value\": \"CL\", \"text\": \"Coil\" },\r\n    { \"value\": \"CM\", \"text\": \"Card\" },\r\n    { \"value\": \"CN\", \"text\": \"Container, not otherwise specified\" },\r\n    { \"value\": \"CO\", \"text\": \"Carboy, non-protected\" },\r\n    { \"value\": \"CP\", \"text\": \"Carboy, protected\" },\r\n    { \"value\": \"CQ\", \"text\": \"Cartridge\" },\r\n    { \"value\": \"CR\", \"text\": \"Crate\" },\r\n    { \"value\": \"CS\", \"text\": \"Case\" },\r\n    { \"value\": \"CT\", \"text\": \"Carton\" },\r\n    { \"value\": \"CU\", \"text\": \"Cup\" },\r\n    { \"value\": \"CV\", \"text\": \"Cover\" },\r\n    { \"value\": \"CW\", \"text\": \"Cage, roll\" },\r\n    { \"value\": \"CX\", \"text\": \"Can, cylindrical\" },\r\n    { \"value\": \"CY\", \"text\": \"Cylinder\" },\r\n    { \"value\": \"CZ\", \"text\": \"Canvas\" },\r\n    { \"value\": \"DA\", \"text\": \"Crate, multiple layer, plastic\" },\r\n    { \"value\": \"DB\", \"text\": \"Crate, multiple layer, wooden\" },\r\n    { \"value\": \"DC\", \"text\": \"Crate, multiple layer, cardboard\" },\r\n    { \"value\": \"DG\", \"text\": \"Cage, Commonwealth Handling Equipment\" },\r\n    { \"value\": \"DH\", \"text\": \"Box, Commonwealth Handling Equipment\" },\r\n    { \"value\": \"DI\", \"text\": \"Drum, iron\" },\r\n    { \"value\": \"DJ\", \"text\": \"Demijohn, non-protected\" },\r\n    { \"value\": \"DK\", \"text\": \"Crate, bulk, cardboard\" },\r\n    { \"value\": \"DL\", \"text\": \"Crate, bulk, plastic\" },\r\n    { \"value\": \"DM\", \"text\": \"Crate, bulk, wooden\" },\r\n    { \"value\": \"DN\", \"text\": \"Dispenser\" },\r\n    { \"value\": \"DP\", \"text\": \"Demijohn, protected\" },\r\n    { \"value\": \"DR\", \"text\": \"Drum\" },\r\n    { \"value\": \"DS\", \"text\": \"Tray, one layer no cover, plastic\" },\r\n    { \"value\": \"DT\", \"text\": \"Tray, one layer no cover, wooden\" },\r\n    { \"value\": \"DU\", \"text\": \"Tray, one layer no cover, polystyrene\" },\r\n    { \"value\": \"DV\", \"text\": \"Tray, one layer no cover, cardboard\" },\r\n    { \"value\": \"DW\", \"text\": \"Tray, two layers no cover, plastic\" },\r\n    { \"value\": \"DX\", \"text\": \"Tray, two layers no cover, wooden\" },\r\n    { \"value\": \"DY\", \"text\": \"Tray, two layers no cover, cardboard\" },\r\n    { \"value\": \"EC\", \"text\": \"Bag, plastic\" },\r\n    { \"value\": \"ED\", \"text\": \"Case, with pallet base\" },\r\n    { \"value\": \"EE\", \"text\": \"Case, with pallet base, wooden\" },\r\n    { \"value\": \"EF\", \"text\": \"Case, with pallet base, cardboard\" },\r\n    { \"value\": \"EG\", \"text\": \"Case, with pallet base, plastic\" },\r\n    { \"value\": \"EH\", \"text\": \"Case, with pallet base, metal\" },\r\n    { \"value\": \"EI\", \"text\": \"Case, isothermic\" },\r\n    { \"value\": \"EN\", \"text\": \"Envelope\" },\r\n    { \"value\": \"FC\", \"text\": \"Crate, fruit\" },\r\n    { \"value\": \"FD\", \"text\": \"Crate, framed\" },\r\n    { \"value\": \"FI\", \"text\": \"Firkin\" },\r\n    { \"value\": \"FL\", \"text\": \"Flask\" },\r\n    { \"value\": \"FO\", \"text\": \"Footlocker\" },\r\n    { \"value\": \"FP\", \"text\": \"Filmpack\" },\r\n    { \"value\": \"FR\", \"text\": \"Frame\" },\r\n    { \"value\": \"FT\", \"text\": \"Foodtainer\" },\r\n    { \"value\": \"FW\", \"text\": \"Cart, flatbed\" },\r\n    { \"value\": \"FX\", \"text\": \"Bag, flexible container\" },\r\n    { \"value\": \"GB\", \"text\": \"Bottle, gas\" },\r\n    { \"value\": \"GI\", \"text\": \"Girder\" },\r\n    { \"value\": \"GR\", \"text\": \"Receptacle, glass\" },\r\n    { \"value\": \"GU\", \"text\": \"Tray, containing horizontally stacked\" },\r\n    { \"value\": \"GZ\", \"text\": \"Girders, in bundle/bunch/truss\" },\r\n    { \"value\": \"HA\", \"text\": \"Basket, with handle, plastic\" },\r\n    { \"value\": \"HB\", \"text\": \"Basket, with handle, wooden\" },\r\n    { \"value\": \"HC\", \"text\": \"Basket, with handle, cardboard\" },\r\n    { \"value\": \"HG\", \"text\": \"Hogshead\" },\r\n    { \"value\": \"HR\", \"text\": \"Hamper\" },\r\n    { \"value\": \"IA\", \"text\": \"Package, display, wooden\" },\r\n    { \"value\": \"IB\", \"text\": \"Package, display, cardboard\" },\r\n    { \"value\": \"IC\", \"text\": \"Package, display, plastic\" },\r\n    { \"value\": \"ID\", \"text\": \"Package, display, metal\" },\r\n    { \"value\": \"IE\", \"text\": \"Package, show\" },\r\n    { \"value\": \"IF\", \"text\": \"Package, flow\" },\r\n    { \"value\": \"IG\", \"text\": \"Package, paper wrapped\" },\r\n    { \"value\": \"IH\", \"text\": \"Drum, plastic\" },\r\n    { \"value\": \"IK\", \"text\": \"Package, cardboard, with bottle grip\" },\r\n    { \"value\": \"IL\", \"text\": \"Tray, rigid, lidded stackable (CEN)\" },\r\n    { \"value\": \"IN\", \"text\": \"Ingot\" },\r\n    { \"value\": \"IZ\", \"text\": \"Ingots, in bundle/bunch/truss\" },\r\n    { \"value\": \"JC\", \"text\": \"Jerrican, rectangular\" },\r\n    { \"value\": \"JG\", \"text\": \"Jug\" },\r\n    { \"value\": \"JR\", \"text\": \"Jar\" },\r\n    { \"value\": \"JT\", \"text\": \"Jutebag\" },\r\n    { \"value\": \"JY\", \"text\": \"Jerrican, cylindrical\" },\r\n    { \"value\": \"KG\", \"text\": \"Keg\" },\r\n    { \"value\": \"LG\", \"text\": \"Log\" },\r\n    { \"value\": \"LT\", \"text\": \"Lot\" },\r\n    { \"value\": \"LV\", \"text\": \"Liftvan\" },\r\n    { \"value\": \"LZ\", \"text\": \"Logs, in bundle/bunch/truss\" },\r\n    { \"value\": \"MB\", \"text\": \"Bag, multiply\" },\r\n    { \"value\": \"MC\", \"text\": \"Crate, milk\" },\r\n    { \"value\": \"MR\", \"text\": \"Receptacle, metal\" },\r\n    { \"value\": \"MS\", \"text\": \"Sack, multi-wall\" },\r\n    { \"value\": \"MT\", \"text\": \"Mat\" },\r\n    { \"value\": \"MW\", \"text\": \"Receptacle, plastic wrapped\" },\r\n    { \"value\": \"MX\", \"text\": \"Matchbox\" },\r\n    { \"value\": \"NA\", \"text\": \"Not available\" },\r\n    { \"value\": \"NE\", \"text\": \"Unpacked or unpackaged\" },\r\n    { \"value\": \"NF\", \"text\": \"Unpacked or unpackaged, single unit\" },\r\n    { \"value\": \"NG\", \"text\": \"Unpacked or unpackaged, multiple units\" },\r\n    { \"value\": \"NS\", \"text\": \"Nest\" },\r\n    { \"value\": \"NT\", \"text\": \"Net\" },\r\n    { \"value\": \"NU\", \"text\": \"Net, tube, plastic\" },\r\n    { \"value\": \"NV\", \"text\": \"Net, tube, textile\" },\r\n    { \"value\": \"OA\", \"text\": \"Pallet, CHEP 40 cm x 60 cm\" },\r\n    { \"value\": \"OB\", \"text\": \"Pallet, CHEP 80 cm x 120 cm\" },\r\n    { \"value\": \"OC\", \"text\": \"Pallet, CHEP 100 cm x 120 cm\" },\r\n    { \"value\": \"OD\", \"text\": \"Pallet, AS 4068-1993\" },\r\n    { \"value\": \"OE\", \"text\": \"Pallet, ISO T11\" },\r\n    { \"value\": \"OF\", \"text\": \"Platform, unspecified weight or dimensions\" },\r\n    { \"value\": \"OK\", \"text\": \"Block\" },\r\n    { \"value\": \"PA\", \"text\": \"Packet\" },\r\n    { \"value\": \"PB\", \"text\": \"Pallet, box Combined open-ended box\" },\r\n    { \"value\": \"PC\", \"text\": \"Parcel\" },\r\n    { \"value\": \"PD\", \"text\": \"Pallet, modular, collars 80cms * 1\" },\r\n    { \"value\": \"PE\", \"text\": \"Pallet, modular, collars 80cms * 1\" },\r\n    { \"value\": \"PF\", \"text\": \"Pen\" },\r\n    { \"value\": \"PG\", \"text\": \"Plate\" },\r\n    { \"value\": \"PH\", \"text\": \"Pitcher\" },\r\n    { \"value\": \"PI\", \"text\": \"Pipe\" },\r\n    { \"value\": \"PJ\", \"text\": \"Punnet\" },\r\n    { \"value\": \"PK\", \"text\": \"Package\" },\r\n    { \"value\": \"PL\", \"text\": \"Pail\" },\r\n    { \"value\": \"PN\", \"text\": \"Plank\" },\r\n    { \"value\": \"PO\", \"text\": \"Pouch\" },\r\n    { \"value\": \"PR\", \"text\": \"Receptacle, plastic\" },\r\n    { \"value\": \"PT\", \"text\": \"Pot\" },\r\n    { \"value\": \"PU\", \"text\": \"Tray\" },\r\n    { \"value\": \"PV\", \"text\": \"Pipes, in bundle/bunch/truss\" },\r\n    { \"value\": \"PX\", \"text\": \"Pallet\" },\r\n    { \"value\": \"PY\", \"text\": \"Plates, in bundle/bunch/truss\" },\r\n    { \"value\": \"PZ\", \"text\": \"Planks, in bundle/bunch/truss\" },\r\n    { \"value\": \"QA\", \"text\": \"Drum, steel, non-removable head\" },\r\n    { \"value\": \"QB\", \"text\": \"Drum, steel, removable head\" },\r\n    { \"value\": \"QC\", \"text\": \"Drum, aluminium, non-removable head\" },\r\n    { \"value\": \"QD\", \"text\": \"Drum, aluminium, removable head\" },\r\n    { \"value\": \"QF\", \"text\": \"Drum, plastic, non-removable head\" },\r\n    { \"value\": \"QG\", \"text\": \"Drum, plastic, removable head\" },\r\n    { \"value\": \"QH\", \"text\": \"Barrel, wooden, bung type\" },\r\n    { \"value\": \"QJ\", \"text\": \"Barrel, wooden, removable head\" },\r\n    { \"value\": \"QK\", \"text\": \"Jerrican, steel, non-removable head\" },\r\n    { \"value\": \"QL\", \"text\": \"Jerrican, steel, removable head\" },\r\n    { \"value\": \"QM\", \"text\": \"Jerrican, plastic, non-removable head\" },\r\n    { \"value\": \"QN\", \"text\": \"Jerrican, plastic, removable head\" },\r\n    { \"value\": \"QP\", \"text\": \"Box, wooden, natural wood, ordinary\" },\r\n    { \"value\": \"QQ\", \"text\": \"Box, wooden, natural wood, with side\" },\r\n    { \"value\": \"QR\", \"text\": \"Box, plastic, expanded\" },\r\n    { \"value\": \"QS\", \"text\": \"Box, plastic, solid\" },\r\n    { \"value\": \"RD\", \"text\": \"Rod\" },\r\n    { \"value\": \"RG\", \"text\": \"Ring\" },\r\n    { \"value\": \"RJ\", \"text\": \"Rack, clothing hanger\" },\r\n    { \"value\": \"RK\", \"text\": \"Rack\" },\r\n    { \"value\": \"RL\", \"text\": \"Reel\" },\r\n    { \"value\": \"RO\", \"text\": \"Roll\" },\r\n    { \"value\": \"RT\", \"text\": \"Rednet\" },\r\n    { \"value\": \"RZ\", \"text\": \"Rods, in bundle/bunch/truss\" },\r\n    { \"value\": \"SA\", \"text\": \"Sack\" },\r\n    { \"value\": \"SB\", \"text\": \"Slab\" },\r\n    { \"value\": \"SC\", \"text\": \"Crate, shallow\" },\r\n    { \"value\": \"SD\", \"text\": \"Spindle\" },\r\n    { \"value\": \"SE\", \"text\": \"Sea-chest\" },\r\n    { \"value\": \"SH\", \"text\": \"Sachet\" },\r\n    { \"value\": \"SI\", \"text\": \"Skid\" },\r\n    { \"value\": \"SK\", \"text\": \"Case, skeleton\" },\r\n    { \"value\": \"SL\", \"text\": \"Slipsheet\" },\r\n    { \"value\": \"SM\", \"text\": \"Sheetmetal\" },\r\n    { \"value\": \"SO\", \"text\": \"Spool\" },\r\n    { \"value\": \"SP\", \"text\": \"Sheet, plastic wrapping\" },\r\n    { \"value\": \"SS\", \"text\": \"Case, steel\" },\r\n    { \"value\": \"ST\", \"text\": \"Sheet\" },\r\n    { \"value\": \"SU\", \"text\": \"Suitcase\" },\r\n    { \"value\": \"SV\", \"text\": \"Envelope, steel\" },\r\n    { \"value\": \"SW\", \"text\": \"Shrinkwrapped\" },\r\n    { \"value\": \"SX\", \"text\": \"Set\" },\r\n    { \"value\": \"SY\", \"text\": \"Sleeve\" },\r\n    { \"value\": \"SZ\", \"text\": \"Sheets, in bundle/bunch/truss\" },\r\n    { \"value\": \"TB\", \"text\": \"Tub\" },\r\n    { \"value\": \"TC\", \"text\": \"Tea-chest\" },\r\n    { \"value\": \"TD\", \"text\": \"Tube, collapsible\" },\r\n    { \"value\": \"TI\", \"text\": \"Tierce\" },\r\n    { \"value\": \"TK\", \"text\": \"Tank, rectangular\" },\r\n    { \"value\": \"TL\", \"text\": \"Tub, with lid\" },\r\n    { \"value\": \"TN\", \"text\": \"Tin\" },\r\n    { \"value\": \"TO\", \"text\": \"Tun\" },\r\n    { \"value\": \"TR\", \"text\": \"Trunk\" },\r\n    { \"value\": \"TS\", \"text\": \"Truss\" },\r\n    { \"value\": \"TU\", \"text\": \"Tube\" },\r\n    { \"value\": \"TV\", \"text\": \"Tube, with nozzle\" },\r\n    { \"value\": \"TY\", \"text\": \"Tank, cylindrical\" },\r\n    { \"value\": \"TZ\", \"text\": \"Tubes, in bundle/bunch/truss\" },\r\n    { \"value\": \"UC\", \"text\": \"Uncaged\" },\r\n    { \"value\": \"UN\", \"text\": \"Unit (single item or object)\" },\r\n    { \"value\": \"VA\", \"text\": \"Vat\" },\r\n    { \"value\": \"VG\", \"text\": \"Bulk, gas (at 1031 mbar and 15°C)\" },\r\n    { \"value\": \"VI\", \"text\": \"Vial\" },\r\n    { \"value\": \"VK\", \"text\": \"Vanpack\" },\r\n    { \"value\": \"VL\", \"text\": \"Bulk, liquid\" },\r\n    { \"value\": \"VN\", \"text\": \"Vehicle\" },\r\n    { \"value\": \"VO\", \"text\": \"Bulk, solid, large particles\" },\r\n    { \"value\": \"VP\", \"text\": \"Vacuum-packed\" },\r\n    { \"value\": \"VQ\", \"text\": \"Bulk, liquefied gas (at abnormal temperature/pressure)\" },\r\n    { \"value\": \"VR\", \"text\": \"Bulk, solid, granular particles (i.e., granulates)\" },\r\n    { \"value\": \"VY\", \"text\": \"Bulk, solid, fine particles (i.e., powdered)\" },\r\n    { \"value\": \"WA\", \"text\": \"Intermediate bulk container\" },\r\n    { \"value\": \"WB\", \"text\": \"Wickerbottle\" },\r\n    { \"value\": \"WC\", \"text\": \"Intermediate bulk container, steel\" },\r\n    { \"value\": \"WD\", \"text\": \"Intermediate bulk container, aluminium\" },\r\n    { \"value\": \"WF\", \"text\": \"Intermediate bulk container, metal\" },\r\n    { \"value\": \"WG\", \"text\": \"Intermediate bulk container, steel\" },\r\n    { \"value\": \"WH\", \"text\": \"Intermediate bulk container, aluminium\" },\r\n    { \"value\": \"WJ\", \"text\": \"Intermediate bulk container, metal\" },\r\n    { \"value\": \"WK\", \"text\": \"Intermediate bulk container, steel\" },\r\n    { \"value\": \"WL\", \"text\": \"Intermediate bulk container, aluminium\" },\r\n    { \"value\": \"WM\", \"text\": \"Intermediate bulk container, metal\" },\r\n    { \"value\": \"WN\", \"text\": \"Intermediate bulk container, woven\" },\r\n    { \"value\": \"WP\", \"text\": \"Intermediate bulk container, woven\" },\r\n    { \"value\": \"WQ\", \"text\": \"Intermediate bulk container, woven\" },\r\n    { \"value\": \"WR\", \"text\": \"Intermediate bulk container, woven\" },\r\n    { \"value\": \"WS\", \"text\": \"Intermediate bulk container, plastic\" },\r\n    { \"value\": \"WT\", \"text\": \"Intermediate bulk container, textile\" },\r\n    { \"value\": \"WU\", \"text\": \"Intermediate bulk container, natural\" },\r\n    { \"value\": \"WV\", \"text\": \"Intermediate bulk container, textile\" },\r\n    { \"value\": \"WW\", \"text\": \"Intermediate bulk container, textile\" },\r\n    { \"value\": \"WX\", \"text\": \"Intermediate bulk container, textile\" },\r\n    { \"value\": \"WY\", \"text\": \"Intermediate bulk container, plywood\" },\r\n    { \"value\": \"WZ\", \"text\": \"Intermediate bulk container, reconstructed\" },\r\n    { \"value\": \"XA\", \"text\": \"Bag, woven plastic, without inner coat\" },\r\n    { \"value\": \"XB\", \"text\": \"Bag, woven plastic, sift proof\" },\r\n    { \"value\": \"XC\", \"text\": \"Bag, woven plastic, water resistant\" },\r\n    { \"value\": \"XD\", \"text\": \"Bag, plastics film\" },\r\n    { \"value\": \"XF\", \"text\": \"Bag, textile, without inner coat\" },\r\n    { \"value\": \"XG\", \"text\": \"Bag, textile, sift proof\" },\r\n    { \"value\": \"XH\", \"text\": \"Bag, textile, water resistant\" },\r\n    { \"value\": \"XJ\", \"text\": \"Bag, paper, multi-wall\" },\r\n    { \"value\": \"XK\", \"text\": \"Bag, paper, multi-wall, water resistant\" },\r\n    { \"value\": \"YA\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YB\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YC\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YD\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YF\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YG\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YH\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YJ\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YK\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YL\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YM\", \"text\": \"Composite packaging, plastic receptacle\" },\r\n    { \"value\": \"YN\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YP\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YQ\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YR\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YS\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YT\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YV\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YW\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YX\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YY\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"YZ\", \"text\": \"Composite packaging, glass receptacle\" },\r\n    { \"value\": \"ZA\", \"text\": \"Intermediate bulk container, paper\" },\r\n    { \"value\": \"ZB\", \"text\": \"Bag, large\" },\r\n    { \"value\": \"ZC\", \"text\": \"Intermediate bulk container, paper\" },\r\n    { \"value\": \"ZD\", \"text\": \"Intermediate bulk container, rigid\" },\r\n    { \"value\": \"ZF\", \"text\": \"Intermediate bulk container, rigid\" },\r\n    { \"value\": \"ZG\", \"text\": \"Intermediate bulk container, rigid\" },\r\n    { \"value\": \"ZH\", \"text\": \"Intermediate bulk container, rigid\" },\r\n    { \"value\": \"ZJ\", \"text\": \"Intermediate bulk container, rigid\" },\r\n    { \"value\": \"ZK\", \"text\": \"Intermediate bulk container, rigid\" },\r\n    { \"value\": \"ZL\", \"text\": \"Intermediate bulk container, composite\" },\r\n    { \"value\": \"ZM\", \"text\": \"Intermediate bulk container, composite\" },\r\n    { \"value\": \"ZN\", \"text\": \"Intermediate bulk container, composite\" },\r\n    { \"value\": \"ZP\", \"text\": \"Intermediate bulk container, composite\" },\r\n    { \"value\": \"ZQ\", \"text\": \"Intermediate bulk container, composite\" },\r\n    { \"value\": \"ZR\", \"text\": \"Intermediate bulk container, fibre\" },\r\n    { \"value\": \"ZS\", \"text\": \"Intermediate bulk container, fibre\" },\r\n    { \"value\": \"ZT\", \"text\": \"Intermediate bulk container, fibre\" },\r\n    { \"value\": \"ZU\", \"text\": \"Intermediate bulk container, flexible\" },\r\n    { \"value\": \"ZV\", \"text\": \"Intermediate bulk container, metal\" },\r\n    { \"value\": \"ZW\", \"text\": \"Intermediate bulk container, natural\" },\r\n    { \"value\": \"ZX\", \"text\": \"Intermediate bulk container, plywood\" },\r\n    { \"value\": \"ZY\", \"text\": \"Intermediate bulk container, reconstructed\" },\r\n    { \"value\": \"ZZ\", \"text\": \"Mutually defined\" }]);\r\n\r\n    return packageTypesList \r\n}","export function getConfigurations(){\r\n    const configuration = {\r\n        defaultCPCCode: \"4000\",\r\n        boncedCPCCode: \"7000\",\r\n        defaultRegimeType: \"IM4\",\r\n        defaultNPCCode: \"000\",\r\n    }\r\n    return configuration;\r\n}\r\n\r\nexport function getTrinidadTaxes(){\r\n    const taxes = [\r\n        {\r\n            fullName: \"Value Added Tax\",\r\n            shortName: \"VAT\",\r\n        },\r\n        {\r\n            fullName: \"Import Duty\",\r\n            shortName: \"ICD\",\r\n        },\r\n        // {\r\n        //     fullName: \"Import Surcharge\",\r\n        //     shortName: \"SUR\",\r\n        // },\r\n        // {\r\n        //     fullName: \"Tobacco Tax\",\r\n        //     shortName: \"TOX\",\r\n        // },\r\n        {\r\n            fullName: \"Motor Vehicle Tax\",\r\n            shortName: \"MVT\",\r\n        },\r\n        // {\r\n        //     fullName: \"Special Tax\",\r\n        //     shortName: \"SPX\",\r\n        // },\r\n        // {\r\n        //     fullName: \"Anti-Dumping Import Duty\",\r\n        //     shortName: \"ADD\",\r\n        // }\r\n    ];\r\n    console.log(taxes);\r\n    return taxes;\r\n}\r\n\r\nexport function getFreightTypes(){\r\n    const freightTypes = [\r\n        {\r\n            modeOfTransport: \"Ocean\",\r\n            freightTypes: [\r\n                { code: \"12\", name: \"FCL\" },\r\n                { code: \"13\", name: \"LCL\" },\r\n                { code: \"11\", name: \"Break Bulk\" },\r\n            ]\r\n        },\r\n        {\r\n            modeOfTransport: \"Air\",\r\n            freightTypes: [\r\n                { code: \"41\", name: \"Express\" },\r\n                { code: \"42\", name: \"Loose\" },\r\n            ]\r\n        }\r\n    ]\r\n    return freightTypes;\r\n}","<template lang=\"\">\r\n    <h1>Verify Document Data</h1>\r\n    <div class=\"container-fluid text-center verify-document-data-body\">\r\n        <div class=\"row review-document-item\" v-for=\"(invoice, index) in invoices\" :key=\"invoice.name\">\r\n            <div class=\"col\">\r\n                <embed\r\n                    :src=\"pdfFiles[index].url\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    type=\"application/pdf\"\r\n                    class=\"pdf-viewer\"\r\n                />\r\n            </div>\r\n            <div class=\"col document-review-table\">\r\n                <DocumentTableView\r\n                    :invoiceDataArray=\"[invoice]\"\r\n                    :customsEntryForm=\"customsEntryForm\"\r\n                    :documentVerificationFormat=\"true\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DocumentTableView from \"./DocumentTableView.vue\";\r\nexport default {\r\n    props: [\"invoices\", \"customsEntryForm\", \"pdfFiles\"],\r\n    components: {\r\n        DocumentTableView,\r\n    },\r\n};\r\n</script>\r\n<style lang=\"css\">\r\n.verify-document-data-body {\r\n    padding-bottom: 2rem;\r\n}\r\n\r\ndiv.review-document-item {\r\n    margin: 1rem;\r\n    padding-block: 2rem;\r\n    box-shadow: 0px 0px 18px 2px #d0cfcf;\r\n    border-radius: 15px;\r\n    margin-block: 2rem;\r\n}\r\n\r\ndiv.document-review-table {\r\n    border: 5px solid #e4e4e4;\r\n    border-radius: 15px;\r\n    padding: 2rem;\r\n    margin-inline: 0.8rem;\r\n    max-height: 100vh;\r\n    overflow-y: auto;\r\n}\r\nembed.pdf-viewer {\r\n    border-radius: 15px;\r\n}\r\n</style>\r\n","<template lang=\"\">\r\n    <div v-for=\"(data, dataIndex) in invoiceDataArray\" :key=\"dataIndex\">\r\n        <h2 v-if=\"!documentVerificationFormat\">Invoice Data #{{ dataIndex + 1 }}</h2>\r\n        <h3>Header Information</h3>\r\n        <div class=\"form-row\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                    <label for=\"InvoiceNumber\"><strong>Invoice Number</strong></label>\r\n                    <input\r\n                        type=\"text\"\r\n                        v-model=\"data.invoice_number\"\r\n                        class=\"form-control\"\r\n                        id=\"InvoiceNumber\"\r\n                        placeholder=\"Enter Invoice Number\"\r\n                    />\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <label for=\"SupplierName\"><strong>Supplier Name</strong></label>\r\n                    <input\r\n                        type=\"text\"\r\n                        v-model=\"data.vendor_name\"\r\n                        class=\"form-control\"\r\n                        id=\"SupplierName\"\r\n                        placeholder=\"Enter Supplier Name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    :class=\"{\r\n                        'col-md-2': !documentVerificationFormat,\r\n                        'col-md-3': documentVerificationFormat,\r\n                    }\"\r\n                >\r\n                    <label for=\"InvoiceDate\"><strong>Invoice Date</strong></label>\r\n                    <input type=\"date\" v-model=\"data.invoice_date\" class=\"form-control\" id=\"InvoiceDate\" />\r\n                </div>\r\n\r\n                <div\r\n                    :class=\"{\r\n                        'col-md-2': !documentVerificationFormat,\r\n                        'col-md-3': documentVerificationFormat,\r\n                    }\"\r\n                >\r\n                    <label for=\"invoiceCurrency\"><strong>Invoice Currency</strong></label>\r\n                    <v-select\r\n                        v-model=\"data.currency\"\r\n                        :options=\"currencies\"\r\n                        label=\"name\"\r\n                        id=\"invoiceCurrency\"\r\n                        :searchable=\"true\"\r\n                        :reduce=\"(currency) => currency.code\"\r\n                        :filterable=\"true\"\r\n                        placeholder=\"Select a Currency\"\r\n                    ></v-select>\r\n                </div>\r\n                <div class=\"col-md-1\" v-if=\"!documentVerificationFormat\">\r\n                    <label for=\"rateOfExchange\"><strong>Exchange Rate</strong></label>\r\n                    <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"rateOfExchange\"\r\n                        v-model=\"data.rate_of_exchange\"\r\n                    />\r\n                </div>\r\n                <div class=\"col-md-1\" v-if=\"!documentVerificationFormat\">\r\n                    <label for=\"discountApplied\"><strong>Apply Discount</strong></label>\r\n                    <div class=\"form-check form-switch ms-2 custom-switch d-flex align-items-center\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" v-model=\"data.discount_applied\" @change=\"handleInvoiceDiscountApplication(data)\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <h3>Line Details</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Line #</th>\r\n                    <th>Product Code</th>\r\n                    <th>Description</th>\r\n                    <th>THN Code</th>\r\n                    <th v-if=\"!documentVerificationFormat\">Duty</th>\r\n                    <th v-if=\"!documentVerificationFormat\">VAT</th>\r\n                    <th>Unit Quantity</th>\r\n                    <th>Unit Price</th>\r\n                    <th>Extension Price</th>\r\n                    <th></th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <template v-if=\"data.lines\">\r\n                    <template v-for=\"(item, itemIndex) in data.lines\" :key=\"itemIndex\">\r\n                        <tr>\r\n                            <td>{{ itemIndex + 1 }}</td>\r\n                            <td\r\n                                contenteditable=\"true\"\r\n                                @blur=\"updateItem(data, itemIndex, 'product_code', $event.target.innerText)\"\r\n                            >\r\n                                {{ item.product_code || \"N/A\" }}\r\n                            </td>\r\n                            <td\r\n                                contenteditable=\"true\"\r\n                                @blur=\"updateItem(data, itemIndex, 'description', $event.target.innerText)\"\r\n                            >\r\n                                {{ item.description || \"N/A\" }}\r\n                            </td>\r\n                            <td\r\n                                :class=\"[\r\n                                    item.commodityCodeStatus === 'valid'\r\n                                        ? 'valid-commodity-code'\r\n                                        : 'invalid-commodity-code',\r\n                                ]\"\r\n                                contenteditable=\"true\"\r\n                                @input=\"handleInput($event)\"\r\n                                @blur=\"updateTariffCode(data, itemIndex, 'tariff_code', $event.target.innerText)\"\r\n                                :title=\"item.commodity_description\"\r\n                                data-bs-toggle=\"tooltip\"\r\n                            >\r\n                                {{ item.tariff_code || \"N/A\" }}\r\n                            </td>\r\n                            <td v-if=\"!documentVerificationFormat\">{{ item.icdCharge }}%</td>\r\n                            <td v-if=\"!documentVerificationFormat\">{{ item.vatCharge }}%</td>\r\n                            <td\r\n                                contenteditable=\"true\"\r\n                                @blur=\"updateItem(data, itemIndex, 'quantity', $event.target.innerText)\"\r\n                                :style=\"naStyle(item.quantity)\"\r\n                            >\r\n                                {{ item.quantity || \"N/A\" }}\r\n                            </td>\r\n                            <td\r\n                                contenteditable=\"true\"\r\n                                @blur=\"updateItem(data, itemIndex, 'unit_price', $event.target.innerText)\"\r\n                                :style=\"naStyle(item.unit_price)\"\r\n                            >\r\n                                {{ item.unit_price || \"N/A\" }}\r\n                            </td>\r\n                            <td\r\n                                contenteditable=\"true\"\r\n                                @blur=\"updateItem(data, itemIndex, 'extension_price', $event.target.innerText)\"\r\n                                :style=\"extensionStyle(item)\"\r\n                            >\r\n                                {{ item.extension_price || \"N/A\" }}\r\n                            </td>\r\n                            <td>\r\n                                <button v-if=\"verifyExtensionPrice(item)\" @click=\"fixExtensionPrice(item)\" class=\"icon-button\">\r\n                                <i class=\"fa-solid fa-hammer green-icon\"></i>\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"toggleDetails(itemIndex)\">\r\n                                    <span v-if=\"expandedIndex === itemIndex\">\r\n                                        <i class=\"fas fa-chevron-up\" style=\"color: white\"></i>\r\n                                    </span>\r\n                                    <span v-else>\r\n                                        <i class=\"fas fa-chevron-down\" style=\"color: white\"></i>\r\n                                    </span>\r\n                                </button>\r\n                                <!-- <button class=\"btn btn-danger\" @click=\"deleteRow(data, itemIndex)\"><i class=\"fa fa-trash\"></i></button> -->\r\n                            </td>\r\n                        </tr>\r\n                        <tr v-if=\"expandedIndex === itemIndex\">\r\n                            <td colspan=\"10\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"countryOfOrigin\" class=\"form-label\"\r\n                                            ><strong>Country of Origin</strong></label\r\n                                        >\r\n                                        <v-select\r\n                                            v-model=\"item.country_of_origin\"\r\n                                            :options=\"countries\"\r\n                                            label=\"name\"\r\n                                            id=\"countryOfOrigin\"\r\n                                            :searchable=\"true\"\r\n                                            :reduce=\"(country) => country.code\"\r\n                                            :filterable=\"true\"\r\n                                            placeholder=\"Select a Country of Origin\"\r\n                                        ></v-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"cpcCode\" class=\"form-label\"><strong>CPC Code</strong></label>\r\n                                        <v-select\r\n                                            v-model=\"item.cpcCode\"\r\n                                            :options=\"availableCPCCodes\"\r\n                                            label=\"cpcDisplay\"\r\n                                            id=\"cpcCode\"\r\n                                            :searchable=\"true\"\r\n                                            :reduce=\"(cpc) => cpc.cpcId\"\r\n                                            :filterable=\"true\"\r\n                                            placeholder=\"Select 1 a CPC Code\"\r\n                                            @change=\"onCPCCodeChange(item)\"\r\n                                        ></v-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"npcCode\" class=\"form-label\"><strong>NPC Code</strong></label>\r\n                                        <v-select\r\n                                            v-model=\"item.npcCode\"\r\n                                            :options=\"availableNPCCodes(item.cpcCode)\"\r\n                                            label=\"code_description\"\r\n                                            id=\"npcCode\"\r\n                                            :searchable=\"true\"\r\n                                            :reduce=\"(npc) => npc.code\"\r\n                                            :filterable=\"true\"\r\n                                            placeholder=\"Select a NPC Code\"\r\n                                        ></v-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"tradeAgreement\" class=\"form-label\"\r\n                                            ><strong>Trade Agreement</strong></label\r\n                                        >\r\n                                        <v-select\r\n                                            v-model=\"item.tradeAgreement\"\r\n                                            :options=\"tradeAgreements\"\r\n                                            label=\"name\"\r\n                                            id=\"tradeAgreement\"\r\n                                            :searchable=\"true\"\r\n                                            :reduce=\"(tradeAgreement) => tradeAgreement.id\"\r\n                                            :filterable=\"true\"\r\n                                            placeholder=\"Select a Trade Agreement\"\r\n                                        ></v-select>\r\n                                    </div>\r\n                                    <div class=\"col-md-2\">\r\n                                        <label for=\"applicableTaxes\" class=\"form-label\"><strong>Manually Exempt Tax</strong></label>\r\n                                        <div>\r\n                                            <button class=\"btn btn-primary\" @click=\"displayManualExemptionAlert(item)\"> Manually Exempt Tax\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-1\">\r\n                                        <label for=\"discount\" class=\"form-label\"><strong>Apply Discount</strong></label>\r\n                                        <div class=\"form-check form-switch ms-2 custom-switch\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" v-model=\"item.discount_applied\" @change=\"handleLineDiscountApplication()\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-1\">\r\n                                        <label for=\"delete\" class=\"form-label\"><strong>Delete</strong></label>\r\n                                        <div>\r\n                                            <button class=\"btn btn-danger\" @click=\"deleteRow(data, itemIndex)\">\r\n                                                <i class=\"fa fa-trash\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </template>\r\n                </template>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=\"7\">\r\n                        <button @click=\"addNewLine(data)\">Add New Line</button>\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n\r\n        <h3>Footer Information</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Invoice Total</th>\r\n                    <th>Inland</th>\r\n                    <th>Insurance</th>\r\n                    <th>Other Charges</th>\r\n                    <th>Final Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td\r\n                        contenteditable=\"true\"\r\n                        @blur=\"updateData(data, 'invoice_total', $event.target.innerText)\"\r\n                        :style=\"naStyle(data.invoice_total)\"\r\n                    >\r\n                        {{ data.invoice_total || 0.0 }}\r\n                    </td>\r\n                    <td\r\n                        contenteditable=\"true\"\r\n                        @blur=\"updateData(data, 'inland', $event.target.innerText)\"\r\n                        :style=\"naStyle(data.inland)\"\r\n                    >\r\n                        {{ data.inland || 0.0 }}\r\n                    </td>\r\n                    <td\r\n                        contenteditable=\"true\"\r\n                        @blur=\"updateData(data, 'insurance', $event.target.innerText)\"\r\n                        :style=\"naStyle(data.insurance)\"\r\n                    >\r\n                        {{ data.insurance || 0.0 }}\r\n                    </td>\r\n                    <td\r\n                        contenteditable=\"true\"\r\n                        @blur=\"updateData(data, 'otherCharges', $event.target.innerText)\"\r\n                        :style=\"naStyle(data.otherCharges)\"\r\n                    >\r\n                        {{ data.otherCharges || 0.0 }}\r\n                    </td>\r\n                    <td @blur=\"updateData(data, 'final_total', $event.target.innerText)\">\r\n                        {{ calculateInvoiceTotal(data) }}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <h3>Calculated Check</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Total Extension Prices</th>\r\n                    <th>Number of Line Items</th>\r\n                    <th>Matches Invoice Total?</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr :style=\"checkInvoiceTotal(data)\">\r\n                    <td>\r\n                        {{ calculateTotalExtensionPrice(data.lines) }}\r\n                    </td>\r\n                    <td>{{ data.lines ? data.lines.length : 0 }}</td>\r\n                    <td>\r\n                        {{\r\n                            calculateTotalExtensionPrice(data.lines) === parseFloat(data.invoice_total).toFixed(2)\r\n                                ? \"Yes\"\r\n                                : \"No\"\r\n                        }}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <table>\r\n        <tr>\r\n            <td>\r\n                <!-- <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewInvoice\">Add New Invoice</button> -->\r\n                 <input type=\"file\" multiple @change=\"handleFileUpload\"  accept=\"application/pdf\" style=\"display: none\" ref=\"newInvoice\"/>\r\n                <button type=\"button\" class=\"btn btn-primary\"  @click=\"triggerFileInput('newInvoice')\">Add New Invoice</button>\r\n            </td>\r\n            <td>\r\n                <ul>\r\n                    <li v-for=\"(file, index) in newInvoices\" :key=\"index\">\r\n                        {{ file.name }}\r\n                    </li>\r\n                </ul>\r\n            </td>\r\n            <td>\r\n                <div v-if=\"newInvoices.length > 0\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" @click=\"uploadFilesLLM()\">Upload Invoices</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</template>\r\n<script>\r\nimport * as DatabaseConnector from \"@/composables/DatabaseConnector\";\r\nimport * as Currency from \"@/composables/Currency\";\r\nimport * as SweetAlertConnector from \"../composables/SweetAlertConnector\";\r\nimport * as Utilities from \"@/composables/Utilities\";\r\nexport default {\r\n    props: [\"invoiceDataArray\", \"customsEntryForm\", \"documentVerificationFormat\", \"linesToBeDeleted\", \"linesToBeAdded\", \"invoicesToBeAdded\"],\r\n    data() {\r\n        return {\r\n            countries: [],\r\n            expandedIndex: null,\r\n            currencies: [],\r\n            cpcCodeOptions: [\"4000\"],\r\n            npcCodeOptions: [\"000\"],\r\n            applicableTaxes : [],\r\n            newInvoices : [],\r\n        };\r\n    },\r\n    methods: {\r\n        calculateTotalExtensionPrice,\r\n        checkInvoiceTotal,\r\n        calculateInvoiceTotal,\r\n        naStyle,\r\n        addNewLine,\r\n        updateData,\r\n        deleteRow,\r\n        toggleDetails,\r\n        extensionStyle,\r\n        updateTariffCode,\r\n        parseFloatFromString,\r\n        fetchCountries,\r\n        updateItem,\r\n        fetchNpcCodes,\r\n        fetchTradeAgreements,\r\n        handleInput,\r\n        formatValue,\r\n        truncateString,\r\n        moveCursorToEnd,\r\n        verifyExtensionPrice,\r\n        fixExtensionPrice,\r\n        displayManualExemptionAlert,\r\n        availableNPCCodes,\r\n        onCPCCodeChange(item) {\r\n            console.log(\"CPC Code Changed: \", item);\r\n            item.npcCode = availableNPCCodes(item.cpcCode)[0].code || \"\";\r\n        },\r\n        addNewInvoice,\r\n        triggerFileInput,\r\n        handleFileUpload,\r\n        uploadFilesLLM,\r\n        classifyInvoiceItems,\r\n        processCommodityCodes,\r\n        handleLineDiscountApplication(item){\r\n            console.log(\"Handling Line Discount Application\", item);\r\n        },\r\n        handleInvoiceDiscountApplication(invoice){\r\n            invoice.lines.forEach((item) => {\r\n                item.discount_applied = invoice.discount_applied;\r\n            });\r\n        },\r\n        initTooltips() {\r\n            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\r\n            tooltipTriggerList.forEach((tooltipTriggerEl) => {\r\n                new window.bootstrap.Tooltip(tooltipTriggerEl);\r\n            });\r\n        },\r\n    },\r\n    mounted() {\r\n        this.fetchCountries();\r\n        this.currencies = Currency.getCurrencyList();\r\n        this.fetchNpcCodes();\r\n        this.fetchTradeAgreements();\r\n        this.initTooltips();\r\n        \r\n    },\r\n    computed: {\r\n        availableCPCCodes,\r\n    },\r\n};\r\n\r\nasync function uploadFilesLLM(url = \"https://mawi-updraded-api.wonderfulflower-f4234c00.eastus.azurecontainerapps.io/analyze-invoices-OCR-LLM\"){\r\n    SweetAlertConnector.showLoadingAlert(\"Reading your invoices. Please wait...\");\r\n    Utilities.readFilesLLM(url, this.newInvoices).then((response) => {\r\n        SweetAlertConnector.closeCurrentAlert();\r\n        const invoices = response.invoiceData;\r\n        invoices.forEach((invoice) => {\r\n            this.invoiceDataArray.push(invoice);\r\n            this.invoicesToBeAdded.push(invoice);\r\n            this.newInvoices = [];\r\n        });\r\n        SweetAlertConnector.showLoadingAlert(\"Invoices read successfully. Classifying Invoice Items. Please wait...\");\r\n        this.classifyInvoiceItems(invoices).then(() => {\r\n            SweetAlertConnector.closeCurrentAlert();\r\n            SweetAlertConnector.showSuccessAlert(\"Invoices classified successfully.\");\r\n            console.log(\"Invoices classified successfully.\", this.invoiceDataArray);\r\n            \r\n        }).catch((error) => {\r\n            SweetAlertConnector.closeCurrentAlert();\r\n            SweetAlertConnector.showErrorAlert(\"Failed to classify invoices. Please try again.\");\r\n            console.error(\"Failed to classify invoices: \", error);\r\n        });\r\n        \r\n    }).catch((error) => {\r\n        SweetAlertConnector.closeCurrentAlert();\r\n        SweetAlertConnector.showErrorAlert(\"Failed to read invoices. Please try again.\");\r\n        this.newInvoices = [];\r\n        console.error(\"Failed to read invoices: \", error);\r\n    });\r\n    \r\n}\r\n\r\nasync function classifyInvoiceItems(invoices){\r\n    const descriptions = invoices.flatMap((invoice) => {\r\n        // Map the invoice lines to the desired format.\r\n        return invoice.lines\r\n        .filter((item) => !item.tariff_code)\r\n        .map((item) => ({\r\n            description: item.classification_description || item.description || \"\",\r\n            commodity_code: item.commodity_code || \"\",\r\n            product_number: item.product_number || \"\",\r\n        }));\r\n    });\r\n    if (descriptions.length === 0) {\r\n        console.log(\"No descriptions to classify.\");\r\n        return [];\r\n    }\r\n    console.log(\"Descriptions: \", descriptions);\r\n    const commodityCodes = await DatabaseConnector.getCommodityCode([descriptions]);\r\n    this.processCommodityCodes(commodityCodes[0], invoices);\r\n}\r\n\r\nfunction processCommodityCodes(commodityCodes, invoices){\r\n    commodityCodes.forEach((commodityCode) => {\r\n        invoices.forEach((invoice) => {\r\n            invoice.lines.forEach((item, itemIndex) => {\r\n                if (commodityCode.description === `${item?.classification_description}` || commodityCode.description === `${item.description}`) {\r\n                    if ( commodityCode.classification_model_suggested_code !== undefined && commodityCode.classification_model_suggested_code !== null) {\r\n                        item.tariff_code = insertFullStops(\r\n                            commodityCode.classification_model_suggested_code.toString()\r\n                        );\r\n                        const itemPerformanceMetric = {\r\n                            llm_recommended_classification_code: item.tariff_code,\r\n                            approved_classification_code: \"\",\r\n\r\n                        };\r\n                        item.performanceMetric = itemPerformanceMetric;\r\n                        this.updateTariffCode(invoice, itemIndex, \"tariff_code\", item.tariff_code);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nfunction calculateTotalExtensionPrice(items) {\r\n    if(items === undefined || items === null || items.length === 0){\r\n        return 0;\r\n    }\r\n    return items.reduce((acc, item) => acc + this.parseFloatFromString(item.extension_price || 0), 0).toFixed(2);\r\n}\r\n\r\nfunction triggerFileInput(refName) {\r\n    this.$refs[refName].click();\r\n}\r\n\r\nfunction handleFileUpload(event){\r\n    console.log(\"Handling File Upload\");\r\n    this.newInvoices = Array.from(event.target.files);\r\n}\r\n\r\nfunction addNewInvoice(){\r\n    const newInvoice = {\r\n    \"lines\": [\r\n        {\r\n            \"amount\": 519.48,\r\n            \"description\": \"LETS JAM SHINE&COND GEL EX HOLD 4.4\",\r\n            \"classification_description\": \"LETS JAM SHINE&COND GEL EX HOLD 4.4, Supplier: SOFISHEEN-CARSON, Item composition: Hair gel\",\r\n            \"quantity\": 234,\r\n            \"unit_price\": 2.77,\r\n            \"discounted_unit_price\": 2.22,\r\n            \"commodity_code\": \"3305.90.00\",\r\n            \"country_of_origin\": \"\",\r\n            \"product_number\": \"O0291113\",\r\n            \"extension_price\": \"648.18\",\r\n            \"vatApplicable\": true,\r\n            \"cpcCode\": 30,\r\n            \"npcCode\": \"000\"\r\n        }\r\n    ],\r\n    \"customer_address\": \"BRYDEN PI LIMITED, 5A CTC DRIVE, MACOYA, TUNAPUNA, TRINIDAD & TABOGO, 99999, TT\",\r\n    \"customer_address_recipient\": \"BRYDEN PI LIMITED\",\r\n    \"customer_name\": \"BRYDEN PI LIMITED\",\r\n    \"due_date\": \"2024-04-15\",\r\n    \"invoice_inco_terms\": \"FCA DESTINATION PER SHIP\",\r\n    \"invoice_date\": \"2024-02-15\",\r\n    \"invoice_id\": \"687013501\",\r\n    \"invoice_exworks_amount\": 4334.88,\r\n    \"invoice_total_amount\": 4334.88,\r\n    \"shipping_address\": \"BRYDEN PI LIMITED-EXP TO TRINIDAD, 1 IBIS AVENUE, SAN JUAN, 99999, TT\",\r\n    \"shipping_address_recipient\": \"BRYDEN PI LIMITED-EXP TO TRINIDAD\",\r\n    \"vendor_address\": \"L'OREAL USA S/D, INC., Cranbury, NJ 08512\",\r\n    \"vendor_address_recipient\": \"L'OREAL USA S/D, INC.\",\r\n    \"vendor_name\": \"L'OREAL USA S/D, INC.\",\r\n    \"file_name\": \"RLL151623 - INV 3 CLASSED.pdf\",\r\n    \"invoice_total\": \"5705.10\",\r\n    \"inland\": 0,\r\n    \"insurance\": 0,\r\n    \"otherCharges\": 0,\r\n    \"final_total\": 0,\r\n    \"total_tax\": 0,\r\n    \"subtotal\": 4334.88,\r\n    \"invoice_number\": \"687013501\",\r\n    \"currency\": \"USD\"\r\n};\r\n    this.invoiceDataArray.push(newInvoice);\r\n    this.invoicesToBeAdded.push(newInvoice);\r\n}\r\n\r\n\r\nfunction fixExtensionPrice(item) {\r\n      const expected = (parseFloat(item.unit_price) * parseFloat(item.quantity)).toFixed(2);\r\n      const actual = parseFloat(item.extension_price).toFixed(2);\r\n      if (expected !== actual) {\r\n        item.extension_price = expected;\r\n      }\r\n}\r\nfunction verifyExtensionPrice(item) {\r\n      const expected = (parseFloat(item.unit_price) * parseFloat(item.quantity)).toFixed(2);\r\n      const actual = parseFloat(item.extension_price).toFixed(2);\r\n      return expected !== actual || [item.unit_price, item.quantity, item.extension_price].some(v => [null, undefined, '', false].includes(v));\r\n}\r\nfunction checkInvoiceTotal(data) {\r\n    const totalExtensions = this.calculateTotalExtensionPrice(data.lines);\r\n    const invoiceTotal = parseFloat(data.invoice_total || 0).toFixed(2);\r\n    return totalExtensions !== invoiceTotal ? { backgroundColor: \"red\", color: \"white\" } : {};\r\n}\r\n\r\nfunction calculateInvoiceTotal(invoice) {\r\n    const invoiceTotal = parseFloat(invoice.invoice_total) || 0;\r\n    const inland = parseFloat(invoice.inland) || 0;\r\n    const insurance = parseFloat(invoice.insurance) || 0;\r\n    const otherCharges = parseFloat(invoice.otherCharges) || 0;\r\n\r\n    const total = invoiceTotal + inland + insurance + otherCharges;\r\n\r\n    return total.toFixed(2);\r\n}\r\nfunction naStyle(value) {\r\n    if ([null, undefined, \"\", false].includes(value)) {\r\n        // return { backgroundColor: 'yellow', color: 'black' };\r\n        return { \"font-weight\": \"bold\", color: \"#B8860B\" };\r\n    }\r\n    return {};\r\n}\r\n\r\nfunction addNewLine(data) {\r\n    console.log(\"Adding New Line\");\r\n    console.log(\"Data: \", data);\r\n    const newItem = {\r\n        product_code: \"\",\r\n        description: \"\",\r\n        tariff_code: \"\",\r\n        quantity: \"\",\r\n        unit_price: \"\",\r\n        extension_price: \"\",\r\n        invoice_id: data.invoice_id,\r\n        country_of_origin: \"\",\r\n        cpcCode: 30,\r\n        npcCode: \"000\"\r\n    };\r\n    data.lines.push(newItem);\r\n    this.linesToBeAdded.push(newItem);\r\n}\r\nfunction updateData(data, field, value) {\r\n    data[field] = value;\r\n}\r\n\r\nfunction deleteRow(data, index) {\r\n    console.log(\"Deleting Row: \", index);\r\n    console.log(\"Data: \", data.lines);\r\n    if (data.lines[index].invoice_line_id !== undefined)\r\n        this.linesToBeDeleted.push(data.lines[index].invoice_line_id);\r\n    data.lines.splice(index, 1);\r\n}\r\n\r\nfunction toggleDetails(index) {\r\n    this.expandedIndex = this.expandedIndex === index ? null : index;\r\n}\r\nfunction extensionStyle(item) {\r\n    if(item.extension_price === undefined || item.extension_price === null || item.extension_price === \"\" || item.extension_price === \"N/A\" || item.extension_price === \"0.00\" || item.extension_price === 0){ \r\n        return { \"font-weight\": \"bold\", color: \"red\" };\r\n    }\r\n    const expected = (parseFloat(item.unit_price) * parseFloat(item.quantity)).toFixed(2);\r\n    const actual = parseFloat(item.extension_price).toFixed(2);\r\n    if ([item.unit_price, item.quantity, item.extension_price].some((v) => [null, undefined, \"\", false].includes(v))) {\r\n        // return { backgroundColor: 'yellow', color: 'black' };\r\n        return { \"font-weight\": \"bold\", color: \"#B8860B\" };\r\n    } else if (expected !== actual) {\r\n        // return { backgroundColor: 'red', color: 'white' };\r\n        return { \"font-weight\": \"bold\", color: \"red\" };\r\n    }\r\n    return {};\r\n}\r\nfunction updateTariffCode(data, itemIndex, field, value) {\r\n    console.log(\"Updating Tariff Code\");\r\n    // console.log(\"Item Index: \", itemIndex);\r\n    this.updateItem(data, itemIndex, field, value);\r\n    if (value === undefined || value === null || value.trim().length === 0 || value === \"N/A\") {\r\n        data.icdCharge = 0;\r\n        data.vatCharge = 0;\r\n        return;\r\n    }\r\n    console.log(\"Fetching charges for: \", value);\r\n    DatabaseConnector.getCommodityCharges(value.replace(/\\./g, \"\"))\r\n        .then((chargesResponse) => {\r\n            // console.log(\"Charges Response: \", chargesResponse);\r\n            let icdObject = chargesResponse.charges[\"import custom duty\"];\r\n            const icdCharge = icdObject === undefined ? 0 : parseFloat(icdObject[0].charge_amount);\r\n            let vatObject = chargesResponse.charges[\"value added tax\"];\r\n            const vatCharge = vatObject === undefined ? 0 : parseFloat(vatObject[0].charge_amount);\r\n            // console.log(\"ICD Charge: \", icdCharge);\r\n            // console.log(\"VAT Charge: \", vatCharge);\r\n            data.lines[itemIndex][\"icdCharge\"] = icdCharge;\r\n            data.lines[itemIndex][\"vatCharge\"] = vatCharge;\r\n            data.lines[itemIndex][\"commodityCodeStatus\"] = \"valid\";\r\n            data.lines[itemIndex][\"applicableTaxes\"] = chargesResponse.charges;\r\n            data.lines[itemIndex][\"commodity_description\"] = chargesResponse.description;\r\n            // console.log(data.lines[itemIndex]);\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Failed to get commodity charges:\", error);\r\n            data.lines[itemIndex][\"commodityCodeStatus\"] = \"invalid\";\r\n            data.lines[itemIndex][\"icdCharge\"] = 0;\r\n            data.lines[itemIndex][\"vatCharge\"] = 0;\r\n            data.lines[itemIndex][\"commodity_description\"] = \"\";\r\n        });\r\n}\r\nfunction parseFloatFromString(inputString) {\r\n    if (!inputString || inputString === undefined || inputString === null) {\r\n        return 0;\r\n    }\r\n\r\n    if (typeof inputString === \"number\") {\r\n        return inputString;\r\n    }\r\n    // Remove non-numeric characters except for period (.)\r\n    let numericString = inputString.replace(/[^0-9.]/g, \"\");\r\n\r\n    // Parse the numeric string as a float\r\n    let floatValue = parseFloat(numericString);\r\n\r\n    return floatValue;\r\n}\r\nasync function fetchCountries() {\r\n    try {\r\n        const response = await fetch(\"https://restcountries.com/v3.1/all\");\r\n        const data = await response.json();\r\n        this.countries = data.map((country) => ({\r\n            name: country.name.common,\r\n            code: country.cca2,\r\n        }));\r\n    } catch (error) {\r\n        console.error(\"Failed to fetch countries:\", error);\r\n    }\r\n}\r\n\r\nfunction updateItem(data, index, field, value) {\r\n    data.lines[index][field] = value;\r\n}\r\n\r\nfunction availableCPCCodes() {\r\n    if (this.customsEntryForm.regimeTypeCode !== undefined && this.customsEntryForm.regimeTypeCode !== null) {\r\n        const regimeData = this.customsEntryForm.regimeTypeOptions.find(\r\n            (regime) => regime.regimeTypeCode === this.customsEntryForm.regimeTypeCode\r\n        );\r\n        if (regimeData) {\r\n            return regimeData.cpcCodes;\r\n        } else return [];\r\n    } else {\r\n        return this.customsEntryForm.regimeTypeOptions.flatMap((regime) => regime.cpcCodes);\r\n    }\r\n}\r\n\r\nfunction availableNPCCodes(cpcId){\r\n    const filteredList = this.npcCodeOptions.filter(npc => npc.cpcId === cpcId);\r\n    if(filteredList.length > 0){\r\n        return filteredList;\r\n    }\r\n    const uniqueNPCCodes = this.npcCodeOptions.filter((npc, index, self) =>\r\n        index === self.findIndex((t) => (\r\n            t.code === npc.code\r\n        ))\r\n    );\r\n    return uniqueNPCCodes;\r\n\r\n}\r\n\r\nfunction handleInput(event) {\r\n    const value = event.target.innerText;\r\n    // Remove any existing dots and non-numeric characters\r\n    const sanitizedValue = value.replace(/[^0-9]/g, \"\");\r\n    // Format the value as XXXX.XX.XX\r\n    const formattedValue = this.formatValue(sanitizedValue);\r\n    // Update the text content of the cell\r\n    event.target.innerText = formattedValue;\r\n    this.moveCursorToEnd(event.target);\r\n    // Update the item data after handling the input\r\n}\r\nfunction formatValue(value) {\r\n    let formattedValue = \"\";\r\n    // Insert dots after the first four characters and after the next two characters\r\n    for (let i = 0; i < value.length; i++) {\r\n        if (i === 4 || i === 6 || i === 8) {\r\n            formattedValue += \".\";\r\n        }\r\n        formattedValue += value[i];\r\n    }\r\n    return this.truncateString(formattedValue);\r\n}\r\n\r\nfunction insertFullStops(numberString){\r\n    if (numberString.length !== 11) {\r\n        console.log(\"The string must contain exactly 11 numbers.\", numberString);\r\n        return \"\";\r\n    }\r\n\r\n    return numberString.slice(0, 4) + \".\" + numberString.slice(4, 6) + \".\" + numberString.slice(6, 8) + \".\" + numberString.slice(8);\r\n}\r\n\r\nfunction truncateString(str) {\r\n    if (str.length > 13) {\r\n        return str.substring(0, 14);\r\n    }\r\n    return str;\r\n}\r\nfunction moveCursorToEnd(element) {\r\n    const range = document.createRange();\r\n    const selection = window.getSelection();\r\n    range.selectNodeContents(element);\r\n    range.collapse(false); // Collapse range to end\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n}\r\nasync function fetchNpcCodes() {\r\n    DatabaseConnector.fetchNPCWithCPC().then((data) => {\r\n        this.npcCodeOptions = data;\r\n        // console.log(\"NPC Codes: \", data);\r\n        \r\n    });\r\n}\r\n\r\nasync function fetchTradeAgreements() {\r\n    DatabaseConnector.fetchTradeAgreements().then((data) => {\r\n        this.tradeAgreements = data;\r\n        // console.log(\"Trade Agreements: \", data);\r\n    });\r\n}\r\nfunction displayManualExemptionAlert(item){\r\n    if(item.commodityCodeStatus === 'invalid' || item.applicableTaxes === undefined || item.applicableTaxes === null || item.applicableTaxes.length === 0){\r\n        SweetAlertConnector.showErrorAlert(\"Invalid or No Commodity Code Provided. Please enter a valid commodity code before proceeding.\");\r\n        return;\r\n    }\r\n    console.log(\"Displaying Manual Exemption Alert\", item);\r\n    console.log(\"Applicable Taxes: \", item.applicableTaxes);\r\n    // if(item.manualExemptions === undefined || item.manualExemptions === null || item.manualExemptions.length === 0){\r\n    //     item.manualExemptions = convertArrayFormat(this.applicableTaxes);\r\n    // }\r\n    SweetAlertConnector.displayEditableTaxTable(item.applicableTaxes, item.extension_price).then((taxResults ) => {\r\n        console.log(\"Tax Results: \", taxResults );\r\n        if (Object.keys(taxResults).length === 0) {\r\n            console.log(\"No data returned or the user canceled the modal.\");\r\n        } else {\r\n            console.log(\"Received tax data:\", taxResults);\r\n            item.manualExemption = true;\r\n            item.Exemptions = taxResults;\r\n            if(\"import custom duty\" in taxResults){\r\n                item.icdCharge = taxResults[\"import custom duty\"].chargeAmount\r\n            }\r\n            if(\"value added tax\" in taxResults){\r\n                item.vatCharge = taxResults[\"value added tax\"].chargeAmount\r\n            }\r\n        }\r\n    });\r\n}\r\n// function convertArrayFormat(array) {\r\n//     return array.map(item => ({\r\n//         shortName: item.shortName,\r\n//         amountExempt: 0.00\r\n//     }));\r\n// }\r\n</script>\r\n\r\n\r\n<style lang=\"\"></style>\r\n","import { ref } from 'vue'\r\n\r\nexport function getCurrencyList() {\r\n    const currencyList = ref([\r\n        { code: \"USD\", name: \"United States Dollar\" },\r\n        { code: \"EUR\", name: \"Euro\" },\r\n        { code: \"JPY\", name: \"Japanese Yen\" },\r\n        { code: \"GBP\", name: \"British Pound Sterling\" },\r\n        { code: \"AUD\", name: \"Australian Dollar\" },\r\n        { code: \"CAD\", name: \"Canadian Dollar\" },\r\n        { code: \"CHF\", name: \"Swiss Franc\" },\r\n        { code: \"CNY\", name: \"Chinese Yuan\" },\r\n        { code: \"SEK\", name: \"Swedish Krona\" },\r\n        { code: \"NZD\", name: \"New Zealand Dollar\" },\r\n        { code: \"MXN\", name: \"Mexican Peso\" },\r\n        { code: \"SGD\", name: \"Singapore Dollar\" },\r\n        { code: \"HKD\", name: \"Hong Kong Dollar\" },\r\n        { code: \"NOK\", name: \"Norwegian Krone\" },\r\n        { code: \"KRW\", name: \"South Korean Won\" },\r\n        { code: \"TRY\", name: \"Turkish Lira\" },\r\n        { code: \"INR\", name: \"Indian Rupee\" },\r\n        { code: \"RUB\", name: \"Russian Ruble\" },\r\n        { code: \"BRL\", name: \"Brazilian Real\" },\r\n        { code: \"ZAR\", name: \"South African Rand\" },\r\n        { code: \"TTD\", name: \"Trinidad & Tobago Dollar\" },\r\n        { code: \"XCD\", name: \"EC Dollar\" }, \r\n        { code: \"BBD\", name: \"Barbados Dollar\" }, \r\n        { code: \"CNY\", name: \"China Renminbi\" }, \r\n        { code: \"AED\", name: \"UAE Dirham\" },\r\n        { code: \"EGP\", name: \"Egyptian Pound\" }, \r\n        { code: \"GYD\", name: \"Guyana Dollar\" }, \r\n        { code: \"BZD\", name: \"Belize Dollar\" },\r\n    ])\r\n\r\n    return currencyList\r\n}","import { render } from \"./DocumentTableView.vue?vue&type=template&id=e1013c34&lang=true\"\nimport script from \"./DocumentTableView.vue?vue&type=script&lang=js\"\nexport * from \"./DocumentTableView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./VerifyDocumentData.vue?vue&type=template&id=2dc902e0&lang=true\"\nimport script from \"./VerifyDocumentData.vue?vue&type=script&lang=js\"\nexport * from \"./VerifyDocumentData.vue?vue&type=script&lang=js\"\n\nimport \"./VerifyDocumentData.vue?vue&type=style&index=0&id=2dc902e0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"card\">\r\n        <div class=\"drag-area\" @dragover.prevent=\"onDragover\" @dragleave.prevent=\"onDragLeave\" @drop.prevent=\"onDrop\">\r\n            <span v-if=\"!isDragging\">\r\n                <h3>Drag & Drop files here or</h3>\r\n                <span class=\"select\" role=\"button\" @click=\"selectFiles\">\r\n                    <h3>Choose a file</h3>\r\n                </span>\r\n            </span>\r\n            <div v-else class=\"select\">Drop files here</div>\r\n            <input name=\"file\" type=\"file\" class=\"file\" ref=\"fileInput\" multiple @change=\"onFileSelect\"/>\r\n        </div>\r\n        <div class=\"file-item\" v-for=\"(image, index) in images\" :key=\"index\">\r\n            <p>{{image.name}}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"upload-button\">Upload</button>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            isDragging: false,\r\n            images: [],\r\n        }\r\n    },\r\n    methods:{\r\n        selectFiles(){\r\n            this.$refs.fileInput.click();\r\n        },\r\n        onFileSelect(e){\r\n            const files = e.target.files;\r\n            this.handleFiles(files);\r\n        },\r\n        handleFiles(files){\r\n            if(files.length === 0){ return; }\r\n            for(let i = 0; i < files.length; i++){\r\n                const file = files[i];\r\n                if(!this.images.includes(file)){\r\n                    this.images.push(file);\r\n                    const reader = new FileReader();\r\n                    reader.onload = (e) => {\r\n                        const image = new Image();\r\n                        image.src = e.target.result;\r\n                        // this.$refs.fileInput.insertAdjacentHTML('beforebegin', `<div class=\"image\"><span class=\"delete\">&times;</span><img src=\"${image.src}\"/></div>`);\r\n                    }\r\n                    reader.readAsDataURL(file);\r\n                }\r\n            }\r\n        },\r\n        onDragover(e){\r\n            e.preventDefault();\r\n            this.isDragging = true;\r\n            e.dataTransfer.dropEffect = 'copy';\r\n        },\r\n        onDragLeave(e){\r\n            e.preventDefault();\r\n            this.isDragging = false;\r\n        },\r\n        onDrop(e){\r\n            e.preventDefault();\r\n            this.isDragging = false;\r\n            const files = e.dataTransfer.files;\r\n            this.handleFiles(files);\r\n        }\r\n    \r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.upload-button{\r\n    margin-top: 5px;\r\n}\r\n.card{\r\n    width: 100%;\r\n    padding: 10px;\r\n    box-shadow: 0 0 5px #ffdfdf;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n}\r\n\r\n.card .top{\r\n    text-align: center;\r\n}\r\n\r\n.card p{\r\n    font-weight: bold;\r\n    color: #4287f5;\r\n}\r\n\r\n.card button{\r\n    outline: 0;\r\n    border: 0;\r\n    color: #fff;\r\n    border-radius: 4px;\r\n    font-weight: 400;\r\n    padding: 8px 13px;\r\n    width: 100%;\r\n    background: #4287f5;\r\n}\r\n\r\n.card .drag-area{\r\n    border: 2px dashed #4287f5;\r\n    border-radius: 5px;\r\n    height: 150px;\r\n    background: #fff;\r\n    color: #4287f5;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    user-select: center;\r\n    -webkit-user-select: none;\r\n    margin-top: 10px;\r\n}\r\n\r\n.card .drag-area .visible{\r\n    font-size: 18px;\r\n}\r\n\r\n.card .select{\r\n    color: #5256ad;\r\n    margin-left: 5px;\r\n    cursor: pointer;\r\n    transition: 0.4s;\r\n}\r\n\r\n.card .select:hover{\r\n    opacity: 0.6;\r\n}\r\n\r\n.card .container{\r\n    width: 100%;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n    max-height: 200px;\r\n    position: relative;\r\n    margin-bottom: 8px;\r\n    padding-top: 10px;\r\n}\r\n\r\n.card .container .image{\r\n    width: 75px;\r\n    margin-right: 5px;\r\n    height: 75px;\r\n    position: relative;\r\n    margin-bottom: 8px;\r\n}\r\n\r\n.card .container .image img{\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n}\r\n\r\n.card .container .image span{\r\n    position: absolute;\r\n    top: -2px;\r\n    right: 9px;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n}\r\n\r\n.card input,\r\n\r\n.card .drag-area .on-drop,\r\n\r\n.card .drag-area.dragover .visible{\r\n    display: none;\r\n}\r\n.delete{\r\n    z-index: 999;\r\n    color: #4287f5;\r\n}\r\n.file-item{\r\n    align-items:start;\r\n    padding: 3px;\r\n    border: 2px solid #4287f5;\r\n    border-radius: 5px;\r\n    margin-top: 3px;\r\n}\r\n</style>","import { render } from \"./FileDragAndDrop.vue?vue&type=template&id=0fd0d03f&scoped=true\"\nimport script from \"./FileDragAndDrop.vue?vue&type=script&lang=js\"\nexport * from \"./FileDragAndDrop.vue?vue&type=script&lang=js\"\n\nimport \"./FileDragAndDrop.vue?vue&type=style&index=0&id=0fd0d03f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0fd0d03f\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"customs-entry-form\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\"> \r\n                <label class=\"required\" for=\"buyerNameAddress\"><strong>Importer</strong></label>\r\n                <v-select :options=\"localData.importers\" v-model=\"localData.importerId\" label=\"name\" :searchable=\"true\" :reduce=\"importer => importer.id\"  :filterable=\"true\" placeholder=\"Select an Importer\">\r\n                    <template #option=\"option\">\r\n                        <div \r\n                        class=\"option-wrapper\" \r\n                        :data-bs-toggle=\"'tooltip'\"\r\n                        :data-bs-placement=\"'right'\"\r\n                        :title=\"option.tooltipContent\"\r\n                        >\r\n                        {{ option.name }}\r\n                        </div>\r\n                    </template>\r\n                </v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"sellerNameAddress\"><strong>Exporter</strong></label>\r\n                    <v-select :options=\"localData.exporters\" v-model=\"localData.exporterId\" label=\"name\" :searchable=\"true\" :reduce=\"exporter => exporter.id\"  :filterable=\"true\" placeholder=\"Select an Exporter\">\r\n                        <template #option=\"option\">\r\n                            <div \r\n                            class=\"option-wrapper\" \r\n                            :data-bs-toggle=\"'tooltip'\"\r\n                            :data-bs-placement=\"'right'\"\r\n                            :title=\"option.tooltipContent\"\r\n                            >\r\n                            {{ option.name }}\r\n                            </div>\r\n                        </template>\r\n                    </v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"modeOfTransport\"><strong>Mode of Transport</strong></label>\r\n                    <select class=\"form-select\" v-model=\"localData.modeOfTransport\" ref=\"modeOfTransportSelect\">\r\n                        <option value=\"\" disabled>Select a Mode of Transport</option>\r\n                        <option v-for=\"(mode, index) in localData.modeOfTransportOOptions\" :key=\"index\" :value=\"mode.modeOfTransport\">{{ mode.modeOfTransport }}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"freightType\"><strong>Freight Type</strong></label>\r\n                    <select class=\"form-select\" v-model=\"localData.freightType\">\r\n                        <option value=\"\" disabled>Select a Freight Type</option>\r\n                        <option v-for=\"(freight, index) in this.availableFreightTypes\" :key=\"index\" :value=\"freight.name\">{{ freight.name }}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"waybillNumber\"><strong>Waybill Numbers</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"waybillNumber\" v-model=\"localData.waybillNumber\" placeholder=\"Please Enter Waybill Number\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"waybillDate\"><strong>Waybill Date</strong></label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"waybillDate\" v-model=\"localData.waybillDate\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"vessel\"><strong>Vessel</strong></label>\r\n                    <!-- <select class=\"form-select\" v-model=\"localData.vesselId\">\r\n                        <option value=\"\" disabled>Select a Vessel</option>\r\n                        <option v-for=\"(vessel, index) in localData.vessels\" :key=\"index\" :value=\"vessel.id\">{{ vessel.name }}</option>\r\n                    </select> -->\r\n                    <v-select :options=\"localData.vessels\" v-model=\"localData.vesselId\" label=\"name\" :searchable=\"true\" :reduce=\"vessel => vessel.id\"  :filterable=\"true\" placeholder=\"Select a Vessel\"></v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"portOfDischarge\"><strong>Port of Discharge</strong></label>\r\n                    <!-- <select class=\"form-select\" v-model=\"localData.portOfDischargeId\">\r\n                        <option value=\"\" disabled>Select a Port of Discharge</option>\r\n                        <option v-for=\"(port, index) in localData.ports\" :key=\"index\" :value=\"port.id\">{{ port.name }}</option>\r\n                    </select> -->\r\n                    <v-select :options=\"localData.ports\" v-model=\"localData.portOfDischargeId\" label=\"name\" :searchable=\"true\" :reduce=\"port => port.id\"  :filterable=\"true\" placeholder=\"Select a Port of Discharge\"></v-select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\"> \r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"grossWeight\"><strong>Gross Weight</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"grossWeight\" v-model=\"localData.grossWeight\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"netWeight\"><strong>Net Weight</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"netWeight\" v-model=\"localData.netWeight\" required readonly>\r\n                </div> \r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"numberOfPackages\"><strong>Number of Packages</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"numberOfPackages\" v-model=\"localData.numberOfPackages\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"packageType\"><strong>Package Type</strong></label>\r\n                    <!-- <select class=\"form-select\" v-model=\"localData.packageType\">\r\n                        <option value=\"\" disabled>Select a Package Type</option>\r\n                        <option v-for=\"(type, index) in localData.packageTypes\" :key=\"index\" :value=\"type.value\">{{ type.text }}</option>\r\n                    </select> -->\r\n                    <v-select :options=\"localData.packageTypes\" v-model=\"localData.packageType\" label=\"text\" :searchable=\"true\" :reduce=\"type => type.value\"  :filterable=\"true\" placeholder=\"Select a Package Type\"></v-select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"totalCargoValue\"><strong>Total Cargo Value</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"totalCargoValue\" v-model=\"localData.totalCargoValue\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-1\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"currency\"><strong>Freight</strong></label>\r\n                    <v-select :clearable=\"false\" :options=\"currencies\" v-model=\"localData.freightCurrency\" label=\"code\" id=\"invoiceCurrency\" :searchable=\"true\" :filterable=\"true\" :reduce=\"currency => currency.code\"></v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"freightAmount\" class=\"label-green-italic\">{{localData.freightRateOfExchange}}</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"freightAmount\" v-model=\"localData.freightAmount\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-1\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"currency\"><strong>Insurance</strong></label>\r\n                    <v-select :clearable=\"false\" :options=\"currencies\" v-model=\"localData.insuranceCurrency\" label=\"code\" id=\"invoiceCurrency\" :searchable=\"true\" :filterable=\"true\" :reduce=\"currency => currency.code\"></v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n               <label for=\"InsuranceAmount\" class=\"label-green-italic\">{{ localData.insuranceRateOfExchange }}</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"InsuranceAmount\" v-model=\"localData.insuranceAmount\" required>\r\n            </div>\r\n            <div class=\"col-md-1\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"currency\"><strong>Charges</strong></label>\r\n                    <v-select :clearable=\"false\" :options=\"currencies\" v-model=\"localData.otherChargesCurrency\" label=\"code\" id=\"invoiceCurrency\" :searchable=\"true\" :filterable=\"true\" :reduce=\"currency => currency.code\"></v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"othercharges\" class=\"label-green-italic\">{{localData.otherChargesRateOfExchange}}</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"otherCharges\" v-model=\"localData.otherCharges\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"declarant\"><strong>Declarant</strong></label>\r\n                    <select class=\"form-select\" v-model=\"localData.declarantId\">\r\n                        <option value=\"\" disabled>Select a Declarant</option>\r\n                        <option v-for=\"(declarant, index) in localData.declarants\" :key=\"index\" :value=\"declarant.id\">{{ declarant.name }}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"regimeType\"><strong>Regime Type</strong></label>\r\n                    <!-- <select class=\"form-select\" v-model=\"localData.regimeType\">\r\n                        <option value=\"\" disabled>Select a Regime Type</option>\r\n                        <option v-for=\"(regime, index) in localData.regimeTypeOptions\" :key=\"index\" :value=\"regime.regimeTypeId\">{{ regime.regimeType }}</option>\r\n                    </select> -->\r\n                    <v-select :options=\"localData.regimeTypeOptions\" v-model=\"localData.regimeType\" label=\"regimeType\" :searchable=\"true\" :reduce=\"regime => regime.regimeTypeId\"  :filterable=\"true\" placeholder=\"Select a Regime Type\"></v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <label for =\"incoTerms\"><strong>Incoterms</strong></label>\r\n                <!-- <select class=\"form-select\" v-model=\"localData.incoTerms\">\r\n                    <option value=\"\" disabled>Select an Incoterm</option>\r\n                    <option v-for=\"(incoterm, index) in localData.incotermsList\" :key=\"index\" :value=\"incoterm.code\">{{ incoterm.code }} - {{ incoterm.name }}</option>\r\n                </select> -->\r\n                <v-select :options=\"localData.incotermsList\" v-model=\"localData.incoTerms\" label=\"name\" :searchable=\"true\" :reduce=\"incoterm => incoterm.code\"  :filterable=\"true\" placeholder=\"Select an Incoterm\"></v-select>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <label for=\"country\"><strong>Country of Origin</strong></label>\r\n                <!-- <select class=\"form-select\" v-model=\"localData.countryOfOrigin\" id=\"country\" @change=\"countryChange\">\r\n                  <option disabled value=\"\">Please select one</option>\r\n                  <option v-for=\"country in countryList\" :key=\"country.code\" :value=\"country.code\">\r\n                    {{ country.code }} - {{ country.name }}\r\n                  </option>\r\n                </select> -->\r\n                <v-select :options=\"countryList\" v-model=\"localData.countryOfOrigin\" label=\"name\" :searchable=\"true\" :reduce=\"country => country.code\"  :filterable=\"true\" placeholder=\"Select a Country of Origin\"></v-select>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"containerCharges\"><strong>Container Charges</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"containerCharges\" v-model=\"localData.containerCharges\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"localFee\"><strong>Local Fee</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"localFee\" v-model=\"localData.localFee\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"depositAmount\"><strong>Deposit Amount</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"depositAmount\" v-model=\"localData.depositAmount\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"additionalCharges\"><strong>Additional Charges</strong></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"additionalCharges\" v-model=\"localData.additionalCharges\" required>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"col-md-3\">\r\n                <label for=\"country\"><strong>Country of Origin</strong></label>\r\n                <select class=\"form-select\" v-model=\"localData.countryOfOrigin\" id=\"country\" @change=\"countryChange\">\r\n                  <option disabled value=\"\">Please select one</option>\r\n                  <option v-for=\"country in countryList\" :key=\"country.code\" :value=\"country.code\">\r\n                    {{ country.code }} - {{ country.name }}\r\n                  </option>\r\n                </select>\r\n            </div> -->\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"marksAndNumbers\"><strong>Marks and Numbers</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"marksAndNumbers\" v-model=\"localData.marksAndNumbers\" required>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <label for=\"country\"><strong>Country of Final Destination</strong></label>\r\n                <v-select :options=\"countryList\" v-model=\"localData.countryOfFinalDestination\" label=\"name\" :searchable=\"true\" :reduce=\"country => country.code\"  :filterable=\"true\" placeholder=\"Select a Country of Destination\"></v-select>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"countryLastProvinance\"><strong>Country of Last Provinance</strong></label>\r\n                    <v-select :options=\"countryList\" v-model=\"localData.countryLastProvinance\" label=\"name\" :searchable=\"true\" :reduce=\"country => country.code\"  :filterable=\"true\" placeholder=\"Select a Country of Last Provinance\"></v-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"tradingCountry\"><strong>Trading Country</strong></label>\r\n                    <v-select :options=\"countryList\" v-model=\"localData.tradingCountry\" label=\"name\" :searchable=\"true\" :reduce=\"country => country.code\"  :filterable=\"true\" placeholder=\"Select a Trading Country\"></v-select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"estimatedArrivalDate\"><strong>Arrival Date</strong></label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"estimatedArrivalDate\" v-model=\"localData.estimatedArrivalDate\" required>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as DatabaseConnector from '@/composables/DatabaseConnector';\r\n  import * as PackageTypes from '@/composables/PackageTypes';\r\n  import * as IncoTerms from '@/composables/IncoTerms';\r\n  import * as BrokerCongifurations from '@/composables/BrokerConfiguration';\r\n  import * as Currency from '@/composables/Currency'\r\n\r\n  export default {\r\n    name: 'CustomsEntryForm',\r\n    props: ['customsEntryForm'],\r\n    mounted() {\r\n        console.log(\"Mounting\")\r\n        this.getConfigurations();\r\n        this.localData.packageTypes = PackageTypes.usePackageTypes();\r\n        this.localData.incotermsList = IncoTerms.getIncoTermsList();\r\n        this.currencies = Currency.getCurrencyList();\r\n        this.localData.modeOfTransportOOptions = BrokerCongifurations.getFreightTypes();\r\n        this.initTooltips();\r\n    },\r\n    data() {\r\n      return {\r\n        freightTypeOptions: [],\r\n        localData: this.customsEntryForm,\r\n        countryList: [],\r\n        currencies: [],\r\n      }\r\n    },\r\n    computed: {\r\n        availableFreightTypes(){\r\n            const results = this.localData.modeOfTransportOOptions?.find(mode => mode.modeOfTransport === this.localData.modeOfTransport)?.freightTypes;\r\n            return results;\r\n        }\r\n    },\r\n    updated() {\r\n        // Re-initialize Bootstrap tooltips if options change\r\n        this.initTooltips();\r\n    },\r\n    methods: {\r\n        initTooltips() {\r\n            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\r\n            tooltipTriggerList.forEach((tooltipTriggerEl) => {\r\n                new window.bootstrap.Tooltip(tooltipTriggerEl);\r\n            });\r\n        },\r\n        setModeOfTransport(modeOfTransport){\r\n            this.$nextTick(() => {\r\n                this.localData.modeOfTransport = modeOfTransport;\r\n                this.$refs.modeOfTransportSelect.dispatchEvent(new Event('change'));\r\n            })\r\n        },\r\n        updateModeOfTransport(event){\r\n            const modeOfTransport = this.localData.modeOfTransportOOptions.find(mode => mode.modeOfTransport === event.target.value);\r\n            this.freightTypeOptions = modeOfTransport.freightTypes;\r\n        },\r\n        updateField(field, value) {\r\n            this.localData[field] = value;\r\n            console.log(this.localData);\r\n            this.$emit('update-section-one', this.localData);\r\n        },\r\n        async getConfigurations() {\r\n            console.log('Fetching configurations...');\r\n            this.localData.ports = await DatabaseConnector.fetchPorts();\r\n\r\n            Promise.all([DatabaseConnector.fetchShippers(), DatabaseConnector.fetchBuyers(), DatabaseConnector.fetchVessels(), DatabaseConnector.fetchCustomsEntryDeclarants(), DatabaseConnector.fetchCountries()]).then(([exporters, importers, vessels, declarants, countries]) => {\r\n                this.localData.exporters = exporters.map(exporter => {\r\n                    return {\r\n                        ...exporter,\r\n                        tooltipContent: `${exporter.name}\\n${exporter.address}\\n${exporter.country}`\r\n                    };\r\n                });\r\n                this.localData.importers = importers.map(importer => {\r\n                    return {\r\n                        ...importer,\r\n                        tooltipContent: `${importer.name}\\n${importer.address}\\n${importer.country}`\r\n                    };\r\n                });\r\n                console.log(\"Importers\", importers);\r\n                this.localData.vessels = vessels;\r\n                // this.localData.ports = ports;\r\n                this.localData.declarants = declarants;\r\n                this.countryList = countries;\r\n            });\r\n\r\n\r\n            \r\n        }\r\n    },\r\n    watch: {\r\n        customsEntryForm: {\r\n            deep: true,\r\n            handler(newVal) {\r\n                // console.log(\"Updating form\")\r\n                this.localData = newVal;\r\n                this.localData.portOfDischargeName = this.localData.ports.find(port => port.id === this.localData.portOfDischargeId)?.name;\r\n                this.localData.vesselName = this.localData.vessels.find(vessel => vessel.id === this.localData.vesselId)?.name;\r\n                this.localData.regimeTypeCode = this.localData.regimeTypeOptions.find(regime => regime.regimeTypeId === this.localData.regimeType)?.regimeTypeCode;\r\n                const importer = this.localData.importers.find(importer => importer.id === this.localData.importerId);\r\n                const exporter = this.localData.exporters.find(exporter => exporter.id === this.localData.exporterId);\r\n                this.localData.importerName = importer !== undefined ? importer.name : '';\r\n                this.localData.importerTaxIdentificationNumber = importer !== undefined ? importer.taxIdentificationNumber : '';\r\n                this.localData.exporterName = exporter !== undefined ? exporter.name : '';\r\n                this.localData.exporterTaxIdentificationNumber = exporter !== undefined ? exporter.taxIdentificationNumber : '';\r\n                this.localData.exporterCountry = exporter !== undefined ? exporter.country : '';\r\n\r\n                if(this.localData.countryOfOrigin !== null && (this.localData.countryLastProvinance == null || this.localData.countryLastProvinance == '' || this.localData.countryLastProvinance == undefined)){\r\n                    this.localData.countryLastProvinance = this.localData.countryOfOrigin;\r\n                }\r\n\r\n                if(this.localData.countryOfOrigin !== null && (this.localData.tradingCountry == null || this.localData.tradingCountry == '' || this.localData.tradingCountry == undefined)){\r\n                    this.localData.tradingCountry = this.localData.countryOfOrigin;\r\n                }\r\n\r\n                if(this.localData.grossWeight !== null && this.localData.grossWeight > 0){\r\n                    this.localData.netWeight = this.localData.grossWeight - (this.localData.grossWeight / 10);\r\n                }\r\n\r\n                // if(this.localData.waybillDate !== null && this.localData.waybillDate !== ''){\r\n                //     console.log(\"Fetching rates of exchange\");\r\n                //     DatabaseConnector.fetchRatesBasedOnShippedOnBoard(this.localData.waybillDate).then(rates => {\r\n                //         this.localData.ratesOfExchange = rates;\r\n                //     });\r\n                // }\r\n\r\n                if(this.localData.ratesOfExchange !== null && this.localData.ratesOfExchange.length > 0){\r\n                    this.localData.insuranceRateOfExchange = this.localData.insuranceCurrency ? this.localData.ratesOfExchange.find(rate => rate.base_currency === this.localData.insuranceCurrency).rate : 1;\r\n                    this.localData.freightRateOfExchange = this.localData.freightCurrency  ? this.localData.ratesOfExchange.find(rate => rate.base_currency === this.localData.freightCurrency).rate : 1;\r\n                    this.localData.otherChargesRateOfExchange = this.localData.otherChargesCurrency ? this.localData.ratesOfExchange.find(rate => rate.base_currency === this.localData.otherChargesCurrency).rate : 1;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n  }\r\n</script>\r\n  \r\n<style scoped>\r\n@import 'vue3-select/dist/vue3-select.css';\r\n.option-wrapper {\r\n  padding: 5px;\r\n  cursor: pointer;\r\n}\r\n.customs-entry-form {\r\n    text-align: left;\r\n    padding: 20px;\r\n}\r\n  .form-group {\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check label {\r\n  margin-right: 1rem;\r\n}\r\n\r\n.required::after {\r\n  content: ' *';\r\n  color: red;\r\n}\r\n.label-green-italic {\r\n  color: green;\r\n  font-style: italic;\r\n}\r\n/* Custom Tooltip Styling */\r\n.tooltip {\r\n    background-color: #333; /* Darker background */\r\n    border-radius: 8px; /* Rounded corners */\r\n    padding: 10px; /* Extra padding */\r\n    font-size: 14px; /* Adjust font size */\r\n    line-height: 1.5; /* Improved readability */\r\n}\r\n\r\n.tooltip .tooltip-arrow {\r\n    display: none; /* Hide the default arrow */\r\n}\r\n\r\n.tooltip-inner {\r\n    color: #fff; /* White text */\r\n    background-color: #333; /* Darker background */\r\n    padding: 8px 12px; /* Padding around the content */\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2); /* Add subtle shadow */\r\n    text-align: left; /* Left-align the text */\r\n}\r\n\r\n/* Custom Arrow using :before */\r\n.tooltip[data-popper-placement^=\"right\"] .tooltip-inner::before,\r\n.tooltip[data-popper-placement^=\"left\"] .tooltip-inner::before,\r\n.tooltip[data-popper-placement^=\"top\"] .tooltip-inner::before,\r\n.tooltip[data-popper-placement^=\"bottom\"] .tooltip-inner::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-style: solid;\r\n    display: block;\r\n    width: 0;\r\n    z-index: 1;\r\n}\r\n\r\n/* Right placement arrow */\r\n.tooltip[data-popper-placement^=\"right\"] .tooltip-inner::before {\r\n    border-color: transparent #333 transparent transparent;\r\n    border-width: 8px;\r\n    top: 50%;\r\n    left: -8px;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n/* Left placement arrow */\r\n.tooltip[data-popper-placement^=\"left\"] .tooltip-inner::before {\r\n    border-color: transparent transparent transparent #333;\r\n    border-width: 8px;\r\n    top: 50%;\r\n    right: -8px;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n/* Top placement arrow */\r\n.tooltip[data-popper-placement^=\"top\"] .tooltip-inner::before {\r\n    border-color: #333 transparent transparent transparent;\r\n    border-width: 8px;\r\n    bottom: -8px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n/* Bottom placement arrow */\r\n.tooltip[data-popper-placement^=\"bottom\"] .tooltip-inner::before {\r\n    border-color: transparent transparent #333 transparent;\r\n    border-width: 8px;\r\n    top: -8px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n</style>","import { ref } from 'vue'\r\n\r\nexport function getIncoTermsList() {\r\n    const incoTermsList = ref([\r\n        { code: \"EXW\", name: \"Ex Works\" },\r\n        { code: \"FCA\", name: \"Free Carrier\" },\r\n        { code: \"CPT\", name: \"Carriage Paid To\" },\r\n        { code: \"CIP\", name: \"Carriage and Insurance Paid To\" },\r\n        { code: \"DAP\", name: \"Delivered At Place\" },\r\n        { code: \"DAT\", name: \"Delivered At Terminal\" },\r\n        { code: \"DDP\", name: \"Delivered Duty Paid\" },\r\n        { code: \"FAS\", name: \"Free Alongside Ship\" },\r\n        { code: \"FOB\", name: \"Free On Board\" },\r\n        { code: \"CFR\", name: \"Cost and Freight\" },\r\n        { code: \"CIF\", name: \"Cost, Insurance and Freight\" }\r\n    ])\r\n    return incoTermsList\r\n}","import { render } from \"./CustomsEntryForm.vue?vue&type=template&id=1b7096b0&scoped=true\"\nimport script from \"./CustomsEntryForm.vue?vue&type=script&lang=js\"\nexport * from \"./CustomsEntryForm.vue?vue&type=script&lang=js\"\n\nimport \"./CustomsEntryForm.vue?vue&type=style&index=0&id=1b7096b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b7096b0\"]])\n\nexport default __exports__","// Example: Error messages\r\nexport const ENTRY_TYPES = {\r\n  STANDARD: 'STANDARD',\r\n  VEHICLES: 'VEHICLES',\r\n};\r\n\r\nexport const CLASSIFICATION_STATUS = {\r\n  NOT_CLASSIFIED: 'Not Classified',\r\n  NOT_STARTED: 'Classification Not Started',\r\n  IN_PROGRESS: 'Classification In Progress',\r\n  COMPLETED: 'Classification Completed',\r\n  APPROVED: 'Classififcation Approved',\r\n}\r\n\r\nexport const ENTRY_STATUS = {\r\n  STORED_AND_NOT_CLASSIFIED: 'STORED_AND_NOT_CLASSIFIED',\r\n  CLASSIFICATION_OKAY: 'CLASSIFICATION_OKAY',\r\n  PARTIAL_STORAGE: 'PARTIAL_STORAGE',\r\n  FULL_STORAGE: 'FULL_STORAGE',\r\n}\r\n\r\nexport const INVOICE_AI_MODELS = {\r\n  MICROSOFT_FORM_RECOGNIZER: 'MICROSOFT_FORM_RECOGNIZER',\r\n  CLAUDE_LLM: 'CLAUDE_LLM',\r\n}\r\n\r\nexport const LLM_PROMPTS = {\r\n  READ_WAYBILL: `Extract data from the provided document. Only extract and include fields that are present within the document. Exclude items, documents, or pages that are irrelevant, such as additional notes or detailed packing lists that do not directly pertain to shipment or cargo information.\r\n        Do not force the extraction of line items. If there are no logical line items within the document, assign an empty array to the key or omit the line item from the existing list.\r\n        For each item, retrieve all pieces of information within the document that can aid in accurately describing the shipment, including but not limited to item description, weight, volume, and any handling instructions. Ensure to concatenate these pieces of information and assign them to the corresponding key.\r\n        Please make sure to include all line items from the document, starting from the very first one. If there are no line items, assign an empty array to the key.\r\n        Include the response in the <output></output> tags. Use the following JSON schema:\r\n        [\r\n            {\r\n                \"waybill_number\": \"\",\r\n                \"shipment_date\": \"(yyyy-mm-dd)\",\r\n                \"mode_of_transport\": \"(Air / Ocean)\",\r\n                \"vessel_name\": \"\",\r\n                \"country_of_origin\": \"\",\r\n                \"carrier_name\": \"\",\r\n                \"shipper_name\": \"\",\r\n                \"shipper_address\": \"\",\r\n                \"shipper_contact\": \"\",\r\n                \"consignee_name\": \"\",\r\n                \"consignee_address\": \"\",\r\n                \"consignee_contact\": \"\",\r\n                \"notify_party_name\": \"\",\r\n                \"notify_party_address\": \"\",\r\n                \"notify_party_contact\": \"\",\r\n                \"place_of_receipt\": \"\",\r\n                \"port_of_loading\": \"\",\r\n                \"port_of_discharge\": \"\",\r\n                \"place_of_delivery\": \"\",\r\n                \"marks_and_numbers\": \"\",\r\n                \"container_number\": \"\",\r\n                \"seal_number\": \"\",\r\n                \"number_of_packages\": \"\",\r\n                \"package_type\": \"\",\r\n                \"gross_weight\": \"\",\r\n                \"net_weight\": \"\",\r\n                \"volume\": \"\",\r\n                \"freight_charges\": \"\",\r\n                \"shipment_instructions\": \"\",\r\n                \"description_of_goods\": \"\",\r\n                \"item_details\": [\r\n                    {\r\n                        \"item_description\": \"\",\r\n                        \"item_weight\": \"\",\r\n                        \"item_volume\": \"\",\r\n                        \"item_classification_description\": \"(Concatenate item description, weight, volume, and any other details)\",\r\n                        \"item_quantity\": \"\",\r\n                        \"country_of_origin\": \"\",\r\n                        \"package_type\": \"\"\r\n                    }\r\n                ],\r\n                \"total_weight\": \"(sum of item weights)\",\r\n                \"total_volume\": \"(sum of item volumes)\",\r\n                \"freight_charges_amount\": \"\",\r\n                \"additional_charges_amount\": \"\",\r\n                \"total_amount\": \"(freight charges + additional charges)\"\r\n            }\r\n        ]\r\n        If a field is not present, please provide an empty string value for the missing key.\r\n        Do not include anything in the output tag that isn't parsable as JSON, and do not include unnecessary words in the <output></output> tags.\r\n        Generate in batch with a maximum count of 40 line items. If there is more content to be generated after closing the <output> tag, insert <more-content>. If not, insert <end-of-content> after closing the <output> tag.`\r\n}\r\n","import { render } from \"./HelloWorld.vue?vue&type=template&id=0ff2492c\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=0ff2492c&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <h1>Entries</h1>\r\n      <!-- Search field -->\r\n      <input type=\"text\" v-model=\"searchTerm\" placeholder=\"Search entries\" />\r\n  \r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Entry #</th>\r\n            <th>Consignee</th>\r\n            <th>Invoice Number</th>\r\n            <th>Waybill Number</th>\r\n            <th>Classififcation Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"entry in filteredEntries\" :key=\"entry.entry_id\">\r\n            <td>{{ entry.entry_number }}</td>\r\n            <td>{{ entry.importerName }}</td>\r\n            <td>{{ entry.invoice_number ? entry.invoice_number.split('; ')[0] : '' }}</td>\r\n            <td>{{ entry.waybill_number }}</td>\r\n            <!-- <td><span class=\"badge bg-warning text-dark\">Warning</span></td> -->\r\n            <td><h5><span :class=\"{'badge bg-success': getStatusText(entry.classification_approved) === 'Classififcation Approved', 'badge bg-warning text-dark': getStatusText(entry.classification_approved) === 'Not Classified'}\">{{getStatusText(entry.classification_approved)}}</span></h5></td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-success\" @click=\"openEntry(entry.entry_id, entry.entry_type)\">Edit</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import { ENTRY_TYPES } from '../constants'\r\n  import { CLASSIFICATION_STATUS } from '../constants'\r\n  export default {\r\n    data() {\r\n      return {\r\n        entries: [],\r\n        error: null,\r\n        searchTerm: '', // To hold the search term\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchEntries();\r\n    },\r\n    methods: {\r\n        getStatusText(isApproved){\r\n          return isApproved ? CLASSIFICATION_STATUS.APPROVED : CLASSIFICATION_STATUS.NOT_CLASSIFIED;\r\n        },\r\n        openEntry(entryId, entryType) {\r\n            if(entryType && entryType === ENTRY_TYPES.VEHICLES){\r\n                this.$router.push({ name: 'VehicleEntryEditPage', params: { entryId } });\r\n                return;\r\n            }\r\n            this.$router.push({ name: 'EntryDetails', params: { entryId } });\r\n        },\r\n        async fetchEntries() {\r\n            try {\r\n                const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}entries/STORED_AND_NOT_CLASSIFIED`);\r\n                this.entries = response.data;\r\n            } catch (error) {\r\n                this.error = error.message;\r\n                console.error('There was an error!', error);\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n      filteredEntries() {\r\n        if (!this.searchTerm) {\r\n          return this.entries;\r\n        }\r\n        const term = this.searchTerm.toLowerCase();\r\n        return this.entries.filter(entry => {\r\n          // Convert the properties to strings and lowercase for case-insensitive comparison\r\n          return (\r\n            (entry.entry_number && entry.entry_number.toString().toLowerCase().includes(term)) ||\r\n            (entry.waybill_number && entry.waybill_number.toString().toLowerCase().includes(term)) ||\r\n            // Assuming entry.invoiceNumbers is an array or a string that needs splitting. Check if it is not null or undefined before using it.\r\n            (entry.invoice_number && entry.invoice_number.split('; ').some(invoice_number => invoice_number.toLowerCase().includes(term))) ||\r\n            (entry.consignee && entry.consignee.toString().toLowerCase().includes(term))\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  table, th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  \r\n  tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./viewEntries.vue?vue&type=template&id=38c6f3f8\"\nimport script from \"./viewEntries.vue?vue&type=script&lang=js\"\nexport * from \"./viewEntries.vue?vue&type=script&lang=js\"\n\nimport \"./viewEntries.vue?vue&type=style&index=0&id=38c6f3f8&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div v-if=\"dataRetrieved\">\r\n        <div class=\"page-header-info-container\">\r\n            <div>\r\n                <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"verifyInvoiceData\">\r\n                    Invoice Split Screen\r\n                </button>\r\n\r\n                <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"mergeAndOpenPDFs\">\r\n                    Open Invoices\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"openWaybill\">\r\n                    Open Waybill\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <div class=\"badge-container\">\r\n                    <h3>\r\n                        <span\r\n                            :class=\"[\r\n                                'badge',\r\n                                {\r\n                                    'bg-success': classificationStatus === 'Classification Completed',\r\n                                    'bg-warning text-dark': classificationStatus === 'Classification In Progress',\r\n                                    'bg-danger': classificationStatus === 'Not Classified',\r\n                                },\r\n                                'fixed-badge',\r\n                            ]\"\r\n                        >\r\n                            {{ this.classificationStatus }}\r\n                        </span>\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <VerifyDocumentData\r\n            :invoices=\"commercialInvoices\"\r\n            :customsEntryForm=\"customsEntryForm\"\r\n            v-if=\"displayDocumentVerificationView\"\r\n            :pdfFiles=\"invoiceDocumentSourceURLs\"\r\n        />\r\n\r\n        <div v-if=\"!displayDocumentVerificationView\">\r\n            <h1>Entry Details</h1>\r\n            <h2>Reference Number: {{ this.entryDetails?.entry_number }}</h2>\r\n\r\n            <CustomsEntryForm\r\n                ref=\"myCustomsForm\"\r\n                :customsEntryForm=\"customsEntryForm\"\r\n                @update-customs-entry-form=\"customsEntryForm = $event\"\r\n            />\r\n            <!-- Commercial Invoices Table -->\r\n            <div v-if=\"dataRetrieved\">\r\n                <DocumentTableView\r\n                    :invoiceDataArray=\"commercialInvoices\"\r\n                    :customsEntryForm=\"customsEntryForm\"\r\n                    :documentVerificationFormat=\"false\"\r\n                    :linesToBeDeleted=\"linesToBeDeleted\"\r\n                    :linesToBeAdded=\"linesToBeAdded\"\r\n                    :invoicesToBeAdded=\"invoicesToBeAdded\"\r\n                />\r\n                <div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Number of Lines Read</th>\r\n                                <th>Total Invoices Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{{ this.totalNumberOfLines }}</td>\r\n                                <td>{{ this.totalFOBValue }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-success\"\r\n                                    :disabled=\"isGenerateCsvDisabled\"\r\n                                    @click=\"generateAsycudaXML\"\r\n                                >\r\n                                    Generate Asycuda XML\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"saveData\">Save Entry</button>\r\n                            </td>\r\n                            <td>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-primary\"\r\n                                    @click=\"goToCustomsDeclarationPage(this.entryId)\"\r\n                                >\r\n                                    Generate Valuation Form\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-primary\"\r\n                                    :disabled=\"isGenerateCsvDisabled\"\r\n                                    @click=\"generateWorkSheet\"\r\n                                >\r\n                                    Generate Worksheet\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"generateDepositForm\">\r\n                                    Generate Deposit Form\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"generateCARICOM\">\r\n                                    Generate CARICOM Invoice\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-primary\"\r\n                                    :disabled=\"isGenerateCsvDisabled\"\r\n                                    @click=\"approveClassification\"\r\n                                    v-if=\"classificationStatus === 'Not Classified' || entryStatus === 'STORED_AND_NOT_CLASSIFIED'\"\r\n                                    >\r\n                                    Approve Classification\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-primary\"\r\n                                    :disabled=\"isGenerateCsvDisabled\"\r\n                                    @click=\"partialStorage\"\r\n                                    v-if=\"entryStatus === 'CLASSIFICATION_OKAY'\"\r\n                                    >\r\n                                    Partial Storage\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-primary\"\r\n                                    :disabled=\"isGenerateCsvDisabled\"\r\n                                    @click=\"fullStorage\"\r\n                                    v-if=\"entryStatus === 'PARTIAL_STORAGE'\"\r\n                                    >\r\n                                    Full Storage\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <!-- <button type=\"button\" class=\"btn btn-primary\" @click=\"displayRatesTable\">\r\n                                    View Rates of Exchange\r\n                                </button> -->\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"generateBreakdownSheet\">\r\n                                    Generate Breakdown Sheet\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"generateTTC84\">\r\n                                    Generate Special Exemption\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"generateOvertimeForm\">\r\n                                    Generate Overtime Form\r\n                                </button>\r\n                            </td>\r\n                            <td v-if=\"typeOfDeclaration === 'Export'\">\r\n                                <button type=\"button\" class=\"btn btn-primary\" @click=\"generateScoonerBL()\">\r\n                                    Generate Scooner BL\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as SweetAlertConnector from \"../composables/SweetAlertConnector\";\r\nimport * as PackageTypes from \"@/composables/PackageTypes\";\r\nimport * as DatabaseConnector from \"@/composables/DatabaseConnector\";\r\nimport * as Utilities from \"@/composables/Utilities\";\r\nimport CustomsEntryForm from \"./CustomsEntry/CustomsEntryForm.vue\";\r\nimport * as Currency from \"@/composables/Currency\";\r\nimport { CLASSIFICATION_STATUS, ENTRY_STATUS } from \"../constants\";\r\n\r\nimport moment from \"moment-timezone\";\r\nimport DocumentTableView from \"./DocumentTableView.vue\";\r\nimport VerifyDocumentData from \"./VerifyDocumentData.vue\";\r\n\r\nexport default {\r\n    name: \"EntryDetails\",\r\n    components: {\r\n        CustomsEntryForm,\r\n        DocumentTableView,\r\n        VerifyDocumentData,\r\n    },\r\n    props: {\r\n        entryId: {\r\n            type: [String, Number],\r\n            required: true,\r\n        },\r\n    },\r\n    watch: {\r\n        totalFOBValue(newVal) {\r\n            this.customsEntryForm.totalCargoValue = newVal;\r\n        },\r\n        \"customsEntryForm.waybillDate\"(newDate) {\r\n            this.updateRates(newDate);\r\n        },\r\n        \"customsEntryForm.countryOfOrigin\"(newCountry) {\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((item) => {\r\n                    if (!item.country_of_origin || item.country_of_origin.trim().length === 0) {\r\n                        item.country_of_origin = newCountry;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        \"customsEntryForm.regimeType\"(newRegime) {\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((item) => {\r\n                    const regimeData = this.customsEntryForm.regimeTypeOptions.find(\r\n                        (regime) => regime.regimeTypeId === newRegime\r\n                    );\r\n                    if(regimeData){\r\n                        item.cpcCode = regimeData.cpcCodes[0].cpcId;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        commercialInvoices: {\r\n            handler: function (invoices) {\r\n                // console.log(\"Invoice Changes\");\r\n                // console.log(\"Rates of Exchange: \", this.customsEntryForm.ratesOfExchange);\r\n                if (this.customsEntryForm.ratesOfExchange.length > 0) {\r\n                    // console.log(\"Rate of Exchange: \", this.customsEntryForm.ratesOfExchange);\r\n                    invoices.forEach((invoice) => {\r\n                        // console.log(\"Invoice Currency: \", invoice.currency);\r\n                        this.$watch(\r\n                            () => invoice.currency,\r\n                            (newVal) => {\r\n                                if (newVal) {\r\n                                    // console.log(\"New Currency: \", newVal);\r\n                                    invoice.rate_of_exchange = this.customsEntryForm.ratesOfExchange.find(\r\n                                        (rate) => rate.base_currency === newVal\r\n                                    ).rate;\r\n                                }\r\n                            },\r\n                            { deep: true, immediate: true }\r\n                        );\r\n                    });\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n    },\r\n    computed: {\r\n        typeOfDeclaration(){\r\n            const typeCode = this.customsEntryForm.regimeType == undefined ? \"\" : this.customsEntryForm.regimeTypeCode?.slice(0, 2);\r\n            return typeCode === \"EX\" ? \"Export\" : \"Import\";\r\n        },\r\n        totalFOBValue() {\r\n            return this.commercialInvoices\r\n                .reduce((acc, invoice) => acc + parseFloat(invoice.invoice_total), 0)\r\n                .toFixed(2);\r\n        },\r\n        toalInsuranceValue() {\r\n            return this.commercialInvoices.reduce((acc, invoice) => acc + parseFloat(invoice.insurance), 0).toFixed(2);\r\n        },\r\n        totalInlandValue() {\r\n            return this.commercialInvoices.reduce((acc, invoice) => acc + parseFloat(invoice.inland), 0).toFixed(2);\r\n        },\r\n        totalOtherChargesValue() {\r\n            return this.commercialInvoices\r\n                .reduce((acc, invoice) => acc + parseFloat(invoice.otherCharges), 0)\r\n                .toFixed(2);\r\n        },\r\n        netInvoicePrice() {\r\n            return (\r\n                parseFloat(this.totalFOBValue) +\r\n                parseFloat(this.toalInsuranceValue) +\r\n                parseFloat(this.totalInlandValue) +\r\n                parseFloat(this.totalOtherChargesValue)\r\n            );\r\n        },\r\n        formattedDate: {\r\n            get() {\r\n                const date = new Date(this.entryDetails.waybill_date);\r\n                return date.toISOString().split(\"T\")[0];\r\n            },\r\n            set(newValue) {\r\n                this.entryDetails.waybill_date = newValue;\r\n            },\r\n        },\r\n        isGenerateCsvDisabled() {\r\n            return this.commercialInvoices.some((invoice) => {\r\n                return invoice.lines.some((line) => !line.tariff_code || line.tariff_code.trim() === \"\");\r\n            });\r\n        },\r\n        classificationStatus() {\r\n            const classificationResult = Utilities.getClassificationStatus(this.commercialInvoices)\r\n                ? CLASSIFICATION_STATUS.NOT_CLASSIFIED\r\n                : CLASSIFICATION_STATUS.COMPLETED;\r\n            if (classificationResult === false) return CLASSIFICATION_STATUS.NOT_CLASSIFIED;\r\n            else {\r\n                if (this.classificationApproved === 1) return CLASSIFICATION_STATUS.APPROVED;\r\n                else return CLASSIFICATION_STATUS.NOT_CLASSIFIED;\r\n            }\r\n        },\r\n        availableCPCCodes() {\r\n            if (this.customsEntryForm.regimeTypeCode !== undefined && this.customsEntryForm.regimeTypeCode !== null) {\r\n                const regimeData = this.customsEntryForm.regimeTypeOptions.find(\r\n                    (regime) => regime.regimeTypeCode === this.customsEntryForm.regimeTypeCode\r\n                );\r\n                if (regimeData) {\r\n                    return regimeData.cpcCodes;\r\n                } else return [];\r\n            } else {\r\n                return this.customsEntryForm.regimeTypeOptions.flatMap((regime) => regime.cpcCodes);\r\n            }\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            invoiceDocumentSourceURLs: [],\r\n            displayDocumentVerificationView: false,\r\n            entryDetails: null,\r\n            waybill: {},\r\n            waybillSourceURL: \"\",\r\n            entry: {},\r\n            entryStatus: \"\",\r\n            commercialInvoices: [],\r\n            linesToBeDeleted: [],\r\n            linesToBeAdded: [],\r\n            invoicesToBeAdded: [],\r\n            dataRetrieved: false,\r\n            loading: false,\r\n            error: null,\r\n            countries: [],\r\n            totalNumberOfLines: 0,\r\n            modeOfTransportOOptions: [\"Air\", \"Ocean\"],\r\n            freightTypeOptions: [\"FCL\", \"LCL\", \"Bulk\", \"Break Bulk\"],\r\n            packageTypeOptions: [],\r\n            currencies: [],\r\n            tradeAgreements: [],\r\n            classificationApprovedBy: \"\",\r\n            dateClassified: \"\",\r\n            expandedIndex: null,\r\n            classificationApproved: 0,\r\n            customsEntryForm: {\r\n                exporters: [],\r\n                importers: [],\r\n                vessels: [],\r\n                ports: [],\r\n                declarants: [],\r\n                incotermsList: [],\r\n                ratesOfExchange: [],\r\n                importerId: \"\",\r\n                exporterId: \"\",\r\n                importerName: \"\",\r\n                exporterName: \"\",\r\n                importerTaxIdentificationNumber: \"\",\r\n                exporterTaxIdentificationNumber: \"\",\r\n                exporterCountry: \"\",\r\n                declarantId: \"\",\r\n                declarantTaxIdentificationNumber: \"\",\r\n                modeOfTransport: \"\",\r\n                freightType: \"\",\r\n                waybillNumber: \"\",\r\n                waybillDate: \"\",\r\n                estimatedArrivalDate: \"\",\r\n                vesselId: \"\",\r\n                vesselName: \"\",\r\n                incoTerms: \"\",\r\n                portOfDischargeId: \"\",\r\n                portOfDischargeName: \"\",\r\n                netWeight: 0.0,\r\n                grossWeight: 0.0,\r\n                numberOfPackages: 0,\r\n                packageType: \"\",\r\n                packageTypes: [],\r\n                marksAndNumbers: \"As Addressed\",\r\n                freightCurrency: \"USD\",\r\n                insuranceCurrency: \"USD\",\r\n                otherChargesCurrency: \"USD\",\r\n                totalCargoValue: 0.0,\r\n                freightAmount: 0.0,\r\n                insuranceAmount: 0.0,\r\n                otherCharges: 0.0,\r\n                insuranceRateOfExchange: 0.0,\r\n                otherChargesRateOfExchange: 0.0,\r\n                freightRateOfExchange: 0.0,\r\n                rateOfExchange: 0.0,\r\n                regimeType: \"\",\r\n                regimeTypeCode: \"\",\r\n                regimeTypeOptions: [],\r\n                depositAmount: 0.0,\r\n                containerCharges: 0.0,\r\n                additionalCharges: 0.0,\r\n                localFee: 0.0,\r\n                countryOfOrigin: \"\",\r\n                countryOfFinalDestination: \"TT\",\r\n                countryLastProvinance: \"\",\r\n                tradingCountry: \"\",\r\n            },\r\n            manualExemptionApplied: false,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.fetchAllDetails();\r\n        this.fetchCountries();\r\n        this.packageTypeOptions = PackageTypes.usePackageTypes();\r\n        this.currencies = Currency.getCurrencyList();\r\n        this.fetchTradeAgreements();\r\n    },\r\n    methods: {\r\n        verifyInvoiceData,\r\n        async generateBreakdownSheet(){\r\n            console.log(\"Generating Breakdown Sheet\");\r\n            console.log(\"Commercial Invoices: \", this.commercialInvoices);\r\n\r\n            const invoices = this.commercialInvoices.map(invoice => {\r\n                const inland = parseFloat(invoice.inland) || 0;\r\n                const insurance = parseFloat(invoice.insurance) || 0;\r\n                const otherCharges = parseFloat(invoice.otherCharges) || 0;\r\n                const baseAmount = parseFloat(invoice.invoice_total) || 0;\r\n\r\n                // Calculate total\r\n                const total = inland + insurance + otherCharges + baseAmount;\r\n\r\n                return {\r\n                    invoiceNumber: `${invoice.invoice_number} - ${invoice.vendor_name}`,\r\n                    otherCharges: otherCharges,\r\n                    insurance: insurance,\r\n                    inlandFreight: inland,\r\n                    baseAmount: baseAmount,\r\n                    total: total\r\n                };\r\n            });\r\n\r\n            const importerName = this.customsEntryForm.importerName;\r\n\r\n\r\n            const requestData = {\r\n                customerName: importerName, // Ensure this is defined in your component\r\n                referenceNumber: this.entryDetails.entry_number, // Ensure this is defined in your component\r\n                invoices: invoices\r\n            };\r\n\r\n            SweetAlertConnector.showLoadingAlert(\"Generating Breakdown Sheet...\");\r\n            DatabaseConnector.generateBreakdownSheet(requestData).then((response) => {\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert(\"Breakdown Sheet Generated Successfully!\");\r\n                const fileURL = window.URL.createObjectURL(new Blob([response], { type: \"application/pdf\" }));\r\n                const fileLink = document.createElement(\"a\");\r\n                const fileName = `Breakdown Sheet - ${this.entryDetails.entry_number}.xlsx`;\r\n                fileLink.href = fileURL;\r\n                fileLink.setAttribute(\"download\", fileName);\r\n                document.body.appendChild(fileLink);\r\n                fileLink.click();\r\n                fileLink.remove();\r\n            }).catch((error) => {\r\n                console.error(\"Failed to generate Breakdown Sheet:\", error);\r\n                SweetAlertConnector.showErrorAlert(\"Failed to generate Breakdown Sheet!\");\r\n            });\r\n        },\r\n        async saveCommodityCodeAccuracyPerformanceMetrics(){\r\n            console.log(\"Saving Classification Accuracy Performance Metrics\");\r\n            const metrics = [];\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((line) => {\r\n                    metrics.push({\r\n                        invoice_line_id: line.invoice_line_id,\r\n                        approved_classification_code: line.tariff_code,\r\n\r\n                    });\r\n                });\r\n            });\r\n            const requestData = { metrics };\r\n            console.log(\"Classification Accuracy Request Data: \", requestData);\r\n            return DatabaseConnector.updateClassificationAccuracyPerformanceMetrics(requestData);\r\n        },\r\n        generateScoonerBL(){\r\n            SweetAlertConnector.scoonerBLAlert().then((response) => {\r\n                console.log(\"Scooner BL Response: \", response);\r\n                const countryFinalDestinationName = this.countries.find((country) => country.code === this.customsEntryForm.countryOfFinalDestination)?.name;\r\n                const grossWeightString = `${this.customsEntryForm.grossWeight.toLocaleString('en-US')} KGS`;\r\n                const lines = this.commercialInvoices.flatMap(invoice => {\r\n                    return invoice.lines.map(line => ({\r\n                        quantity: line.quantity,\r\n                        description: line.description,\r\n                        packageType: \".\"\r\n                    }))\r\n                })\r\n                lines[0].packageType = \"px\";\r\n                const sconnerBLDetails = Utilities.formatScoonerBLDetails(this.customsEntryForm.exporterName, this.customsEntryForm.importerName, this.customsEntryForm.marksAndNumbers, this.customsEntryForm.vesselName, countryFinalDestinationName, lines, response.freightPayableAt.toUpperCase(), grossWeightString, response.portOfDischarge, this.entryDetails?.entry_number)\r\n                console.log(\"Scooner BL Details: \", sconnerBLDetails);\r\n                SweetAlertConnector.showLoadingAlert(\"Generating Scooner BL...\");\r\n                DatabaseConnector.generateScoonerBL(sconnerBLDetails).then((response) => {\r\n                    SweetAlertConnector.closeCurrentAlert();\r\n                    SweetAlertConnector.showSuccessAlert(\"Scooner BL Generated Successfully!\");\r\n                    const fileURL = window.URL.createObjectURL(new Blob([response], { type: \"application/pdf\" }));\r\n                    const fileLink = document.createElement(\"a\");\r\n                    const fileName = `Scooner BL - ${this.entryDetails?.entry_number}.pdf`;\r\n                    fileLink.href = fileURL;\r\n                    fileLink.setAttribute(\"download\", fileName);\r\n                    document.body.appendChild(fileLink);\r\n                    fileLink.click();\r\n                    fileLink.remove();\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to generate Scooner BL:\", error);\r\n                    SweetAlertConnector.showErrorAlert(\"Failed to generate Scooner BL!\");\r\n                });\r\n            })\r\n        },\r\n        checkMandatoryData(){\r\n            console.log(\"Checking Mandatory Data\");\r\n            if (this.customsEntryForm.importerId === \"\" || this.customsEntryForm.exporterId === \"\" ){\r\n                SweetAlertConnector.showErrorAlert(\"Please fill in all mandatory fields before proceeding!\");\r\n                return false;\r\n            }\r\n            if(this.checkAllCPCCodes() === false){\r\n                SweetAlertConnector.showErrorAlert(\"Please ensure all CPC Codes are filled in before proceeding!\");\r\n                return false;\r\n            }\r\n            if(this.checkAllNPCCodes() === false){\r\n                SweetAlertConnector.showErrorAlert(\"Please ensure all NPC Codes are filled in before proceeding!\");\r\n                return false;\r\n            }\r\n            const typeOfDeclaration =\r\n                this.customsEntryForm.regimeType == undefined ? \"\" : this.customsEntryForm.regimeTypeCode?.slice(0, 2);\r\n            console.log(\"Type of Declaration: \", typeOfDeclaration);\r\n            console.log(\"Arrival Date: \", this.customsEntryForm.estimatedArrivalDate);\r\n            if(typeOfDeclaration === \"IM\" && (this.customsEntryForm.estimatedArrivalDate === undefined || null || this.customsEntryForm.estimatedArrivalDate.trim().length === 0)){\r\n                SweetAlertConnector.showErrorAlert(\"Missing Arrival Date! Please Update Entry Details!\");\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        checkAllCPCCodes(){\r\n            let allCodesExist = true;\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((line) => {\r\n                    console.log(\"Line: \", line)\r\n                    if (line.cpcCode === \"\" || line.cpcCode === \"N/A\" || line.cpcCode === null || line.cpcCode === undefined){\r\n                        allCodesExist = false;\r\n                    }\r\n                });\r\n            });\r\n            return allCodesExist;\r\n        },\r\n        checkAllNPCCodes(){\r\n            let allCodesExist = true;\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((line) => {\r\n                    if (line.npcCode === \"\" || line.npcCode === \"N/A\" || line.npcCode === null || line.npcCode === undefined || line.npcCode.trim() === \"\"){\r\n                        allCodesExist = false;\r\n                    }\r\n                });\r\n            });\r\n            return allCodesExist;\r\n        },\r\n        setToPartialStorage(){\r\n            this.entryStatus = \"PARTIAL_STORAGE\";\r\n            this.saveData();\r\n        },\r\n        setToFullStorage(){\r\n            this.entryStatus = \"FULL_STORAGE\";\r\n            this.saveData();\r\n        },\r\n        mergeAndOpenPDFs,\r\n        openWaybill,\r\n        fetchTradeAgreements(){\r\n          DatabaseConnector.fetchTradeAgreements().then((response) => {\r\n            //   console.log(\"Trade Agreements: \", response);\r\n              this.tradeAgreements = response;\r\n          });\r\n        },\r\n        displayRatesTable() {\r\n            if (\r\n                this.customsEntryForm.waybillDate === undefined ||\r\n                this.customsEntryForm.waybillDate === null ||\r\n                this.customsEntryForm.waybillDate.trim().length === 0\r\n            ) {\r\n                SweetAlertConnector.showErrorAlert(\"Please Enter a valid Waybill Date to get rates of Exchange!\");\r\n                return;\r\n            }\r\n            if (this.customsEntryForm.ratesOfExchange.length === 0) this.updateRates(this.customsEntryForm.waybillDate);\r\n            const currencies = [\r\n                this.customsEntryForm.freightCurrency,\r\n                this.customsEntryForm.insuranceCurrency,\r\n                this.customsEntryForm.otherChargesCurrency,\r\n            ];\r\n            const ratesToDisplay = this.customsEntryForm.ratesOfExchange.filter((rate) =>\r\n                currencies.includes(rate.base_currency)\r\n            );\r\n            SweetAlertConnector.displayRateOfExchangeTable(ratesToDisplay);\r\n        },\r\n        updateRates(shippedOnBoardDate) {\r\n            console.log(\"Updating Rates\", shippedOnBoardDate);\r\n            DatabaseConnector.fetchRatesBasedOnShippedOnBoard(shippedOnBoardDate).then((rates) => {\r\n                console.log(\"Rates:\", rates);\r\n                this.customsEntryForm.ratesOfExchange = rates;\r\n                this.commercialInvoices.forEach((invoice) => {\r\n                    if (invoice.currency && rates.length > 0) {\r\n                        console.log(\"Invoice Currency: \", invoice.currency);\r\n                        invoice.rate_of_exchange = rates.find((rate) => rate.base_currency === invoice.currency).rate;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        verifyClassificationCodes() {\r\n            let hasInvalidCode = false;\r\n\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((line) => {\r\n                    console.log(\"Line: \", line.commodityCodeStatus);\r\n                    if (line.commodityCodeStatus === \"invalid\") {\r\n                        SweetAlertConnector.showErrorAlert(\r\n                            `The following commodity code does not exist on Asycuda - ${line.tariff_code}. Please update this and try again.`\r\n                        );\r\n                        hasInvalidCode = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            return !hasInvalidCode;\r\n        },\r\n        partialStorage(){\r\n            this.entryStatus = ENTRY_STATUS.PARTIAL_STORAGE;\r\n            this.saveData();\r\n        },\r\n        fullStorage(){\r\n            this.entryStatus = ENTRY_STATUS.FULL_STORAGE;\r\n            this.saveData();\r\n        },\r\n        approveClassification() {\r\n            if (!this.verifyClassificationCodes()) {\r\n                return;\r\n            }\r\n            // this.saveCommodityCodeAccuracyPerformanceMetrics();\r\n            console.log(\"Approving Classification\");\r\n            SweetAlertConnector.enterYourName().then((response) => {\r\n                if(response === \"CANCELED\"){\r\n                    console.log(\"Operation Cancelled\");\r\n                    return;\r\n                }\r\n                const currentDate = new Date();\r\n                const name = response;\r\n                console.log(\"Name: \", name);\r\n                this.classificationApprovedBy = name;\r\n                this.classificationApproved = 1;\r\n                this.entryStatus = ENTRY_STATUS.CLASSIFICATION_OKAY;\r\n                this.dateClassified = currentDate.toISOString();\r\n                this.saveCommodityCodeAccuracyPerformanceMetrics();\r\n                this.saveData();\r\n            });\r\n        },\r\n        inializeTaxes() {\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((line) => {\r\n                    if (\r\n                        line.tariff_code !== undefined &&\r\n                        line.tariff_code !== null &&\r\n                        line.tariff_code.trim().length > 0 &&\r\n                        line !== \"N/A\"\r\n                    ) {\r\n                        this.updateTariffCode(line, \"tariff_code\", line.tariff_code);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        updateTariffCode(data, field, value) {\r\n            this.updateInvoiceData(data, field, value);\r\n            if (value === undefined || value === null || value.trim().length === 0 || value === \"N/A\") {\r\n                data.icdCharge = 0;\r\n                data.vatCharge = 0;\r\n                return;\r\n            }\r\n            DatabaseConnector.getCommodityCharges(value.replace(/\\./g, \"\"))\r\n                .then((chargesResponse) => {\r\n                    let icdObject = chargesResponse.charges[\"import custom duty\"];\r\n                    const icdCharge = icdObject === undefined ? 0 : parseFloat(icdObject[0].charge_amount);\r\n                    let vatObject = chargesResponse.charges[\"value added tax\"];\r\n                    const vatCharge = vatObject === undefined ? 0 : parseFloat(vatObject[0].charge_amount);\r\n                    data.icdCharge = icdCharge;\r\n                    data.vatCharge = vatCharge;\r\n                    data.commodityCodeStatus = \"valid\";\r\n                    data.applicableTaxes = chargesResponse.charges;\r\n                    data.commodity_description = chargesResponse.description;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to get commodity charges:\", error);\r\n                    data.commodityCodeStatus = \"invalid\";\r\n                    data.icdCharge = 0;\r\n                    data.vatCharge = 0;\r\n                });\r\n        },\r\n        setInvoiceLineWorksheetData() {\r\n            let promises = [];\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((item) => {\r\n                    item.cpcCodeName = this.availableCPCCodes.find((cpc) => cpc.cpcId === item.cpcCode)?.code;\r\n                    item.tradeAgreementCode = this.tradeAgreements.find(\r\n                        (tradeAgreement) => tradeAgreement.id === item.tradeAgreement\r\n                    )?.code;\r\n                    // console.log(\"Item: \", item);\r\n                    // console.log(\"Trade Agreements: \", this.tradeAgreements);\r\n                    const promise = DatabaseConnector.getCommodityCharges(item.tariff_code.replace(/\\./g, \"\"))\r\n                        .then((chargesResponse) => {\r\n                            let formattedCharges = Utilities.formatCharges(chargesResponse.charges, item.vatApplicable);\r\n                            item.commodity = {\r\n                                code: item.tariff_code.replace(/\\./g, \"\"),\r\n                                id: chargesResponse.id,\r\n                                charges: formattedCharges,\r\n                            };\r\n                            if(item.manualExemption !== undefined && item.manualExemption !== null && item.manualExemption === true){\r\n                                this.manualExemptionApplied = true;\r\n                                item.manualExemptionApplied = true;\r\n                                item.commodity.charges.forEach((charge) => {\r\n                                    if(charge.name in item.Exemptions && parseFloat(item.Exemptions[charge.name].chargeAmount) !== parseFloat(charge.value)){\r\n                                        charge.relieved_rate = charge.value;\r\n                                        charge.value = item.Exemptions[charge.name].chargeAmount;\r\n                                    }\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            SweetAlertConnector.closeCurrentAlert();\r\n                            SweetAlertConnector.showErrorAlert(\r\n                                `The following commodity code does not exist on Asycuda - ${item.tariff_code}. Please update this and try again. `\r\n                            );\r\n                            console.error(\"Failed to get commodity charges:\", error);\r\n                            return Promise.reject(error);\r\n                        });\r\n                    promises.push(promise);\r\n                });\r\n            });\r\n\r\n            return Promise.all(promises);\r\n        },\r\n        generateCARICOM() {\r\n            console.log(\"Generating CARICOM\");\r\n            const countryOfOrigin = this.countries.find(\r\n                (country) => country.code === this.customsEntryForm.countryOfOrigin\r\n            )?.name;\r\n            const countryOfFinalDestination = this.countries.find(\r\n                (country) => country.code === this.customsEntryForm.countryOfFinalDestination\r\n            )?.name;\r\n            const selectedIncoTerms = this.customsEntryForm.incotermsList.find(\r\n                (incoTerm) => incoTerm.code === this.customsEntryForm.incoTerms\r\n            )?.name;\r\n            const selectedCurrency = this.currencies.find(\r\n                (currency) => currency.code === this.commercialInvoices[0].currency\r\n            )?.name;\r\n            const selectedImporter = this.customsEntryForm.importers.find(\r\n                (importer) => importer.id === this.customsEntryForm.importerId\r\n            );\r\n            const importerAddress = selectedImporter === undefined ? \"\" : selectedImporter.address;\r\n            const importerCountryName = this.countries.find(\r\n                (country) => country.code === selectedImporter.country\r\n            )?.name;\r\n            const importNameAddress =\r\n                `${this.customsEntryForm.importerName}\\n${importerAddress}\\n${importerCountryName}`.toUpperCase();\r\n            const selectedExporter = this.customsEntryForm.exporters.find(\r\n                (exporter) => exporter.id === this.customsEntryForm.exporterId\r\n            );\r\n            const exporterAddress = selectedExporter === undefined ? \"\" : selectedExporter.address;\r\n            const exporterCountryName = this.countries.find(\r\n                (country) => country.code === selectedExporter.country\r\n            )?.name;\r\n            const exporterNameAddress =\r\n                `${this.customsEntryForm.exporterName}\\n${exporterAddress}\\n${exporterCountryName}`.toUpperCase();\r\n\r\n            const packageType = this.packageTypeOptions.find(\r\n                (packageType) => packageType.value === this.customsEntryForm.packageType\r\n            )?.text;\r\n\r\n            SweetAlertConnector.caricomAlert()\r\n                .then((response) => {\r\n                    const caricomObject = Utilities.formatCaricomData(\r\n                        importNameAddress,\r\n                        exporterNameAddress,\r\n                        this.entryDetails.entry_number,\r\n                        countryOfOrigin,\r\n                        selectedIncoTerms,\r\n                        this.customsEntryForm.portOfDischargeName,\r\n                        countryOfFinalDestination,\r\n                        this.customsEntryForm.modeOfTransport,\r\n                        this.customsEntryForm.vesselName,\r\n                        selectedCurrency,\r\n                        response,\r\n                        this.customsEntryForm.grossWeight,\r\n                        this.commercialInvoices,\r\n                        this.customsEntryForm.numberOfPackages,\r\n                        this.customsEntryForm.totalCargoValue,\r\n                        this.customsEntryForm.freightAmount,\r\n                        this.customsEntryForm.insuranceAmount,\r\n                        this.customsEntryForm.otherCharges,\r\n                        packageType\r\n                    );\r\n                    SweetAlertConnector.showLoadingAlert(\"Generating CARICOM Invoice...\");\r\n                    console.log(\"CARICOM Object: \", caricomObject);\r\n\r\n                    DatabaseConnector.generateCaricomInvoice(caricomObject)\r\n                        .then((response) => {\r\n                            SweetAlertConnector.closeCurrentAlert();\r\n                            SweetAlertConnector.showSuccessAlert(\"CARICOM Invoice Generated Successfully!\");\r\n                            const fileURL = window.URL.createObjectURL(\r\n                                new Blob([response], {\r\n                                    type: \"application/pdf\",\r\n                                })\r\n                            );\r\n                            const fileLink = document.createElement(\"a\");\r\n                            const fileName = `CARICOM Invoice - ${this.entryDetails.entry_number}.pdf`;\r\n                            fileLink.href = fileURL;\r\n                            fileLink.setAttribute(\"download\", fileName);\r\n                            document.body.appendChild(fileLink);\r\n                            fileLink.click();\r\n                            fileLink.remove();\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(\"Failed to generate CARICOM Invoice:\", error);\r\n                            SweetAlertConnector.showErrorAlert(\"Failed to generate CARICOM Invoice!\");\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to generate CARICOM Invoice:\", error);\r\n                    SweetAlertConnector.showErrorAlert(\"Failed to generate CARICOM Invoice!\");\r\n                });\r\n        },\r\n        buildWorksheetObject() {\r\n            const worksheetObject = Utilities.formatWorkSheetData(\r\n                this.entryDetails?.entry_number,\r\n                \"TT\",\r\n                \"Ramnarine Rampersad\",\r\n                \"BR0285\",\r\n                this.customsEntryForm.regimeTypeCode,\r\n                this.customsEntryForm.importerName,\r\n                this.customsEntryForm.importerTaxIdentificationNumber,\r\n                this.customsEntryForm.exporterName,\r\n                this.customsEntryForm.exporterTaxIdentificationNumber,\r\n                this.customsEntryForm.vesselName,\r\n                this.customsEntryForm.portOfDischargeName,\r\n                this.customsEntryForm.depositAmount,\r\n                this.customsEntryForm.containerCharges,\r\n                this.customsEntryForm.additionalCharges,\r\n                this.customsEntryForm.localFee,\r\n                this.customsEntryForm.freightAmount,\r\n                this.customsEntryForm.insuranceAmount,\r\n                this.customsEntryForm.otherCharges\r\n            );\r\n            const invoiceSummary = Utilities.formatCommercialData(\r\n                this.commercialInvoices,\r\n                this.customsEntryForm.freightAmount,\r\n                this.totalFOBValue\r\n            );\r\n            worksheetObject.invoices = invoiceSummary;\r\n            return worksheetObject;\r\n        },\r\n        generateWorkSheet() {\r\n            if(!this.checkMandatoryData()){\r\n                return;\r\n            }\r\n            console.log(\"Generating WorkSheet\");\r\n            console.log(this.commercialInvoices);\r\n\r\n            this.setInvoiceLineWorksheetData()\r\n                .then(() => {\r\n                    const arrivalDateString = this.customsEntryForm.estimatedArrivalDate ? Utilities.getDateStringInputField(new Date(this.customsEntryForm.estimatedArrivalDate)) : '';\r\n                    console.log(\"Arrival Date: \", arrivalDateString);\r\n                    console.log(\"Setting Invoice Line Worksheet Data\");\r\n                    const worksheetObject = Utilities.formatWorkSheetData(\r\n                        this.entryDetails?.entry_number,\r\n                        \"TT\",\r\n                        \"Ramnarine Rampersad\",\r\n                        \"BR0285\",\r\n                        this.customsEntryForm.regimeTypeCode,\r\n                        this.customsEntryForm.importerName,\r\n                        this.customsEntryForm.importerTaxIdentificationNumber,\r\n                        this.customsEntryForm.exporterName,\r\n                        this.customsEntryForm.exporterTaxIdentificationNumber,\r\n                        this.customsEntryForm.vesselName,\r\n                        this.customsEntryForm.portOfDischargeName,\r\n                        this.customsEntryForm.depositAmount,\r\n                        this.customsEntryForm.containerCharges,\r\n                        this.customsEntryForm.additionalCharges,\r\n                        this.customsEntryForm.localFee,\r\n                        this.customsEntryForm.freightAmount,\r\n                        this.customsEntryForm.insuranceAmount,\r\n                        this.customsEntryForm.otherCharges,\r\n                        this.customsEntryForm.freightCurrency,\r\n                        this.customsEntryForm.freightRateOfExchange,\r\n                        this.customsEntryForm.insuranceCurrency,\r\n                        this.customsEntryForm.insuranceRateOfExchange,\r\n                        this.customsEntryForm.otherChargesCurrency,\r\n                        this.customsEntryForm.otherChargesRateOfExchange,\r\n                        this.manualExemptionApplied,\r\n                        arrivalDateString\r\n                    );\r\n                    const invoiceSummary = Utilities.formatCommercialData(\r\n                        this.commercialInvoices,\r\n                        this.customsEntryForm.freightAmount,\r\n                        this.totalFOBValue\r\n                    );\r\n                    worksheetObject.invoices = invoiceSummary;\r\n                    console.log(\"Worksheet Object: \", worksheetObject);\r\n\r\n                    SweetAlertConnector.worksheetFormatAlert().then((formatResponse) => {\r\n                        SweetAlertConnector.showLoadingAlert(\"Generating worksheet...\");\r\n                        DatabaseConnector.generateWorkSheet(worksheetObject, formatResponse)\r\n                            .then((worksheetResponse) => {\r\n                                SweetAlertConnector.closeCurrentAlert();\r\n                                SweetAlertConnector.showSuccessAlert(\"Worksheet Generated Successfully!\");\r\n                                const fileURL = window.URL.createObjectURL(\r\n                                    new Blob([worksheetResponse], {\r\n                                        type: \"application/pdf\",\r\n                                    })\r\n                                );\r\n                                const fileLink = document.createElement(\"a\");\r\n                                const fileName = `Worksheet - ${this.entryDetails?.entry_number} - ${formatResponse}.pdf`;\r\n                                fileLink.href = fileURL;\r\n                                fileLink.setAttribute(\"download\", fileName);\r\n                                document.body.appendChild(fileLink);\r\n                                fileLink.click();\r\n                                fileLink.remove();\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(\"Failed to generate worksheet:\", error);\r\n                                SweetAlertConnector.closeCurrentAlert();\r\n                                SweetAlertConnector.showErrorAlert(\"Failed to generate worksheet!\");\r\n                            });\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    // SweetAlertConnector.closeCurrentAlert();\r\n                    // SweetAlertConnector.showErrorAlert('Failed to generate worksheet!');\r\n                    console.error(\"Failed to set invoice line worksheet data:\", error);\r\n                });\r\n        },\r\n        async getPackageTypes() {\r\n            try {\r\n                const response = await fetch(\"./assets/packageTypes.json\");\r\n                const data = await response.json();\r\n                this.packageTypeOptions = data;\r\n            } catch (error) {\r\n                this.packageTypeOptions = [{ value: \"CT\", text: \"Carton\" }];\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        },\r\n        getInvoiceNumbers() {\r\n            return this.commercialInvoices\r\n                .map((invoice) => {\r\n                    return `${invoice.invoice_number} \\t ${invoice.invoice_date} \\t`;\r\n                })\r\n                .join(\"\\n\");\r\n        },\r\n        async generateOvertimeForm() {\r\n            let overtimeObject = {\r\n                date: Utilities.getCurrentDateString(),\r\n                request: \"TO OBTAIN SERVICES OF ONE CUSTOMS OFFICER TO EXAMINE AND RELEASE\",\r\n                details: \"\",\r\n                shipper: this.customsEntryForm.exporterName,\r\n                importer: this.customsEntryForm.importerName,\r\n                referenceNumber: this.entryDetails?.entry_number,\r\n                importerAddress: this.customsEntryForm.importerName,\r\n                declarantNumber: \"BR0285\",\r\n                declarantName: \"RAMNARINE RAMPERSAD\",\r\n                port: this.customsEntryForm.portOfDischargeName,\r\n                startTime: \"4:00PM\",\r\n            };\r\n\r\n            SweetAlertConnector.overtimeAlert().then((response) => {\r\n                console.log(\"Importers List: \", this.customsEntryForm.importers);\r\n                const selectedImporter = this.customsEntryForm.importers.find(\r\n                    (importer) => importer.id === this.customsEntryForm.importerId\r\n                );\r\n                const importerAddress = selectedImporter === undefined ? \"\" : selectedImporter.address;\r\n                overtimeObject.details = response.cargoDetails;\r\n                overtimeObject.startTime = response.startTime;\r\n                overtimeObject.importerAddress = `${this.customsEntryForm.importerName}\\n${importerAddress}`;\r\n\r\n                SweetAlertConnector.showLoadingAlert(\"Generating Overtime Form...\");\r\n                DatabaseConnector.generateOvertimeForm(overtimeObject)\r\n                    .then((response) => {\r\n                        SweetAlertConnector.closeCurrentAlert();\r\n                        SweetAlertConnector.showSuccessAlert(\"Overtime Form Generated Successfully!\");\r\n                        const fileURL = window.URL.createObjectURL(new Blob([response], { type: \"application/pdf\" }));\r\n                        const fileLink = document.createElement(\"a\");\r\n                        const fileName = `Overtime Form - ${this.entryDetails?.entry_number}.pdf`;\r\n                        fileLink.href = fileURL;\r\n                        fileLink.setAttribute(\"download\", fileName);\r\n                        document.body.appendChild(fileLink);\r\n                        fileLink.click();\r\n                        fileLink.remove();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Failed to generate Overtime Form:\", error);\r\n                        SweetAlertConnector.showErrorAlert(\"Failed to generate Overtime Form!\");\r\n                    });\r\n            });\r\n        },\r\n        async generateTTC84() {\r\n            console.log(\"Generating TTC84\");\r\n            let c84Obj = {\r\n                declarationNumber: this.entryDetails?.entry_number,\r\n                declarationDate: Utilities.getCurrentDateString(),\r\n                regimeCode: \"C4\",\r\n                declarantName: \"RAMNARINE RAMPERSAD\",\r\n                declarantNumber: \"BR0285\",\r\n                referenceNumber: this.entryDetails?.entry_number,\r\n                importer: this.customsEntryForm.importerName,\r\n                importNumber: \"\",\r\n                declarationContent: \"\",\r\n                CPCCode: \"4000\",\r\n                extensionCode: \"\",\r\n                signatoryName: \"\",\r\n                signatoryStatus: \"\",\r\n                presigned: false,\r\n            };\r\n            const selectedImporter = this.customsEntryForm.importers.find(\r\n                (importer) => importer.id === this.customsEntryForm.importerId\r\n            );\r\n            const importerTaxIdentificationNumber = selectedImporter?.taxIdentificationNumber;\r\n            c84Obj.importNumber = importerTaxIdentificationNumber;\r\n            let signatories = await DatabaseConnector.fetchDeclarants();\r\n            console.log(\"Signatories: \", signatories);\r\n            signatories = signatories.filter(\r\n                (signatory) => signatory.importerCode === this.customsEntryForm.importerId\r\n            );\r\n            DatabaseConnector.getSpecialExemptionDeclarations(this.customsEntryForm.importerId)\r\n                .then((response) => {\r\n                    const declarationNumbers = response.map((declaration) => declaration.declaration_number);\r\n                    SweetAlertConnector.form(declarationNumbers, signatories).then((selection) => {\r\n                        c84Obj.presigned = selection.generatePreSigned;\r\n                        const selectedDeclearationIndex = parseInt(selection.select1);\r\n                        const selectedDelcaration = response[selectedDeclearationIndex];\r\n                        const invoiceNumbers = this.commercialInvoices.reduce((acc, invoice) => {\r\n                            const newSegment = `Inv# ${invoice.invoice_number} DD ${invoice.invoice_date}, `;\r\n                            return `${acc}${newSegment}`;\r\n                        }, \"\").trimEnd();\r\n                        \r\n                        const formattedInvoiceNumbers = invoiceNumbers.split(', ').reduce((acc, segment) => {\r\n                            const newSegment = `${segment}, `;\r\n                            // Check if adding the new segment to the current line exceeds 84 characters\r\n                            if (acc.length - acc.lastIndexOf('\\n') - 1 + newSegment.length > 84) {\r\n                                // Start a new line if the condition is met\r\n                                return `${acc.trimEnd()}\\n${newSegment}`;\r\n                            }\r\n                            return `${acc}${newSegment}`;\r\n                        }, \"\").trimEnd();\r\n                        console.log(\"Invoice Numbers: \", formattedInvoiceNumbers);\r\n                        \r\n                        // c84Obj.declarationContent = `${selectedDelcaration.content.replace(/\\\\n/g, \"\\n\")}\\n\\n${formattedInvoiceNumbers}`;\r\n                        c84Obj.extensionCode = selectedDelcaration.extensionCode;\r\n\r\n                        const selectedSignatory = signatories.find(\r\n                            (signatory) => signatory.id === parseInt(selection.select2)\r\n                        );\r\n                        // c84Obj.signatoryName = selectedSignatory.name;\r\n                        // c84Obj.signatoryStatus = selectedSignatory.status;\r\n                        c84Obj.declarationContent = `${selectedDelcaration.content.replace(/\\\\n/g, \"\\n\")}\\n${formattedInvoiceNumbers}\\n${selectedSignatory.name}\\n${selectedSignatory.status}`;\r\n                        DatabaseConnector.generateC84Form(c84Obj)\r\n                            .then((response) => {\r\n                                SweetAlertConnector.closeCurrentAlert();\r\n                                SweetAlertConnector.showSuccessAlert(\"C84 Form Generated Successfully!\");\r\n                                const fileURL = window.URL.createObjectURL(\r\n                                    new Blob([response], {\r\n                                        type: \"application/pdf\",\r\n                                    })\r\n                                );\r\n                                const fileLink = document.createElement(\"a\");\r\n                                const fileName = `C84 Form - ${this.entryDetails?.entry_number}.pdf`;\r\n                                fileLink.href = fileURL;\r\n                                fileLink.setAttribute(\"download\", fileName);\r\n                                document.body.appendChild(fileLink);\r\n                                fileLink.click();\r\n                                fileLink.remove();\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(\"Failed to generate C84 Form:\", error);\r\n                                SweetAlertConnector.showErrorAlert(\"Failed to generate C84 Form!\");\r\n                            });\r\n                    });\r\n                    // c84Obj.specialExemptionDeclarations = response\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to get special exemption declarations:\", error);\r\n                });\r\n            console.log(\"C84 Object: \", c84Obj);\r\n        },\r\n        async generateDepositForm() {\r\n            console.log(\"Generating Deposit Form\");\r\n            console.log(this.availableCPCCodes);\r\n            console.log(this.customsEntryForm.regimeTypeOptions);\r\n            const portObject = this.customsEntryForm.ports.find(\r\n                (port) => port.id === this.customsEntryForm.portOfDischargeId\r\n            );\r\n            const portCode = portObject == undefined ? \"\" : portObject.portCode;\r\n            const exporterCountryName = this.countries.find(\r\n                (country) => country.code === this.customsEntryForm.countryOfOrigin\r\n            )?.name;\r\n            const selectedModeOfTransport = this.customsEntryForm.modeOfTransportOOptions.find(\r\n                (mode) => mode.modeOfTransport === this.customsEntryForm.modeOfTransport\r\n            );\r\n            const freightTypeCode = selectedModeOfTransport.freightTypes.find(\r\n                (freightType) => freightType.name === this.customsEntryForm.freightType\r\n            )?.code;\r\n            SweetAlertConnector.depositReasonAlert().then((reasonResponse) => {\r\n                const deposityData = Utilities.formatDepositData(\r\n                    this.customsEntryForm.regimeTypeCode,\r\n                    this.customsEntryForm.waybillNumber,\r\n                    this.customsEntryForm.waybillDate,\r\n                    this.customsEntryForm.incoTerms,\r\n                    this.customsEntryForm.importerName,\r\n                    this.customsEntryForm.importerTaxIdentificationNumber,\r\n                    \"Ramnarine Rampersad\",\r\n                    \"BR0285\",\r\n                    this.entryDetails?.entry_number,\r\n                    this.customsEntryForm.exporterName,\r\n                    exporterCountryName,\r\n                    this.customsEntryForm.exporterCountry,\r\n                    this.customsEntryForm.vesselName,\r\n                    freightTypeCode,\r\n                    this.customsEntryForm.portOfDischargeName,\r\n                    portCode,\r\n                    this.customsEntryForm.depositAmount,\r\n                    reasonResponse\r\n                );\r\n                try {\r\n                    SweetAlertConnector.showLoadingAlert(\"Generating Deposit Form...\");\r\n                    DatabaseConnector.generateDepositForm(deposityData)\r\n                        .then((response) => {\r\n                            SweetAlertConnector.closeCurrentAlert();\r\n                            SweetAlertConnector.showSuccessAlert(\"Deposit Form Generated Successfully!\");\r\n                            const fileURL = window.URL.createObjectURL(\r\n                                new Blob([response], {\r\n                                    type: \"application/pdf\",\r\n                                })\r\n                            );\r\n                            const fileLink = document.createElement(\"a\");\r\n                            const fileName = `Deposit Form - ${this.entryDetails?.entry_number}.pdf`;\r\n                            fileLink.href = fileURL;\r\n                            fileLink.setAttribute(\"download\", fileName);\r\n                            document.body.appendChild(fileLink);\r\n                            fileLink.click();\r\n                            fileLink.remove();\r\n                        })\r\n                        .catch((error) => {\r\n                            SweetAlertConnector.showErrorAlert(\"Failed to generate Deposit Form!\");\r\n                            console.error(\"Failed to generate Deposit Form:\", error);\r\n                        });\r\n                } catch (error) {\r\n                    console.error(\"Failed to generate Deposit Form:\", error);\r\n                }\r\n            });\r\n        },\r\n        goToCustomsDeclarationPage() {\r\n            const invoiceNumbers = this.getInvoiceNumbers();\r\n            let netPrice = this.netInvoicePrice + this.customsEntryForm.otherCharges\r\n            if (this.customsEntryForm.incoTerms === \"CIF\") {\r\n                netPrice = netPrice + this.customsEntryForm.freightAmount + this.customsEntryForm.insuranceAmount;\r\n            }\r\n            console.log(\"Invoice Numbers: \", invoiceNumbers);\r\n            console.log(\"Incoterms: \", this.customsEntryForm.incoTerms);\r\n            console.log(\"Invoice Total: \", this.netInvoicePrice);\r\n            this.$router.push({\r\n                name: \"CustomsDeclarationForm\",\r\n                params: {\r\n                    entryId: this.entryId,\r\n                },\r\n                query: {\r\n                    buyerId: this.customsEntryForm.importerId,\r\n                    sellerId: this.customsEntryForm.exporterId,\r\n                    invoiceNumber: invoiceNumbers,\r\n                    invoiceTotal: netPrice,\r\n                    currency: this.commercialInvoices[0].currency,\r\n                    rateOfExchange: this.commercialInvoices[0].rate_of_exchange,\r\n                    freight: this.customsEntryForm.freightAmount * this.customsEntryForm.freightRateOfExchange,\r\n                    insurance: this.customsEntryForm.insuranceAmount * this.customsEntryForm.insuranceRateOfExchange,\r\n                    incoTerms: this.customsEntryForm.incoTerms,\r\n                    referenceNumber: this.entryDetails.entry_number,\r\n                },\r\n            });\r\n        },\r\n        updateWaybillDate(event) {\r\n            // Update entryDetails.waybill_date when the input changes\r\n            this.entryDetails.waybill_date = event.target.value;\r\n        },\r\n        countryChange() {\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.lines.forEach((item) => {\r\n                    if (\r\n                        !item.country_of_origin ||\r\n                        item.country_of_origin.trim().length === 0 ||\r\n                        item.country_of_origin === \"N/A\" ||\r\n                        item.country_of_origin === undefined ||\r\n                        item.country_of_origin === null\r\n                    ) {\r\n                        item.country_of_origin = this.entryDetails.country_of_origin;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        async fetchCountries() {\r\n            try {\r\n                const response = await fetch(\"https://restcountries.com/v3/all\");\r\n                const data = await response.json();\r\n                this.countries = data.map((country) => ({\r\n                    name: country.name.common,\r\n                    code: country.cca2,\r\n                }));\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch countries:\", error);\r\n            }\r\n        },\r\n        formatInvoiceData(invoice) {\r\n            return {\r\n                invoice_id: invoice.invoice_id,\r\n                invoice_number: invoice.invoice_number,\r\n                invoice_date: invoice.invoice_date,\r\n                invoice_total: invoice.invoice_total,\r\n                sub_total: invoice.sub_total,\r\n                supplier_name: invoice.vendor_name,\r\n                taxed_amount: invoice.taxed_amount,\r\n                supplier_address: invoice.supplier_address,\r\n                purchase_order_number: invoice.purchase_order_number,\r\n                inland: invoice.inland === \"\" ? \"0.00\" : parseFloat(invoice.inland),\r\n                insurance: invoice.insurance === \"\" ? \"0.00\" : parseFloat(invoice.insurance),\r\n                other_charges: invoice.otherCharges === \"\" ? \"0.00\" : parseFloat(invoice.otherCharges),\r\n                entry_id: invoice.entry_id,\r\n                currency: invoice.currency,\r\n                rate_of_exchange: invoice.rate_of_exchange,\r\n            };\r\n        },\r\n        getTotalNumberOfLines() {\r\n            console.log(\"Calculating total number of lines\");\r\n            console.log(this.commercialInvoices);\r\n            let total = 0;\r\n            for (let invoice of this.commercialInvoices) {\r\n                total += invoice.lines ? invoice.lines.length : 0;\r\n            }\r\n            console.log(\"Total Number of Lines: \", total);\r\n            this.totalNumberOfLines = total;\r\n        },\r\n        formatInvoiceLinesData(invoiceLines) {\r\n            return invoiceLines.map((line) => {\r\n                return {\r\n                    invoice_line_id: line.invoice_line_id,\r\n                    description: line.description,\r\n                    quantity: parseFloat(line.quantity),\r\n                    unit_price: parseFloat(line.unit_price),\r\n                    extension_price: parseFloat(line.extension_price),\r\n                    tariff_code: line.tariff_code,\r\n                    product_code: line.product_code,\r\n                    country_of_origin: line.country_of_origin,\r\n                    cpc_code: line.cpcCode,\r\n                    npc_code: line.npcCode,\r\n                    vat_applicable: line.vatApplicable,\r\n                };\r\n            });\r\n        },\r\n        async addInvoiceLines(){\r\n            return DatabaseConnector.insertInvoiceLines(this.linesToBeAdded)\r\n                .then((response) => {\r\n                    console.log(\"Invoice Lines Added:\", response);\r\n                    this.linesToBeAdded = [];\r\n                    return response;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to add invoice lines:\", error);\r\n                    return Promise.reject(error);\r\n                });\r\n        },\r\n        async addInvoices(){\r\n            console.log(\"Adding Invoices...\", this.invoicesToBeAdded);\r\n            const invoicesRequest = {\r\n                entry_id : this.entryId,\r\n                invoices: this.invoicesToBeAdded\r\n            }\r\n            return DatabaseConnector.insertNewInvoice(invoicesRequest)\r\n                .then((response) => {\r\n                    console.log(\"Invoices Added:\", response);\r\n                    this.invoicesToBeAdded = [];\r\n                    return response;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to add invoices:\", error);\r\n                    return Promise.reject(error);\r\n                });\r\n        },\r\n        saveData() {\r\n            console.log(\"Saving data...\");\r\n            this.loading = true;\r\n\r\n            let promises = [this.updateEntryData(), this.updateWaybillData(), this.saveInvoiceDataOptimized()];\r\n            if(this.linesToBeAdded.length > 0){\r\n                promises.push(this.addInvoiceLines());\r\n            }\r\n            if(this.invoicesToBeAdded.length > 0){\r\n                promises.push(this.addInvoices());\r\n            }\r\n            if (this.linesToBeDeleted.length > 0) {\r\n                SweetAlertConnector.displayConfirmationDialog().then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        promises.push(this.deleteInvoiceLines());\r\n                    }\r\n\r\n                    SweetAlertConnector.showLoadingAlert(\"Saving Data...\");\r\n                    console.log(result);\r\n                    console.time('saveInvoiceData Execution Time');\r\n                    Promise.all(promises)\r\n                        .then(([entryResponse, waybillResponse]) => {\r\n                            console.log(\"Entry details updated:\", entryResponse.data);\r\n                            console.log(\"Waybill details updated:\", waybillResponse.data);\r\n                            SweetAlertConnector.closeCurrentAlert();\r\n                            console.timeEnd('saveInvoiceData Execution Time');\r\n                            SweetAlertConnector.showSuccessAlert(\"All Data Saved successfully!\");\r\n                        })\r\n                        .catch((error) => {\r\n                            console.timeEnd('saveInvoiceData Execution Time');\r\n                            console.error(\"There was an error saving the data!\", error);\r\n                            SweetAlertConnector.showErrorAlert(\"Failed to save Entry Data!\");\r\n                        })\r\n                        .finally(() => {\r\n                            this.loading = false;\r\n                        });\r\n                });\r\n            } else {\r\n                SweetAlertConnector.showLoadingAlert(\"Saving Data...\");\r\n                Promise.all(promises)\r\n                    .then(([entryResponse, waybillResponse]) => {\r\n                        console.log(\"Entry details updated:\", entryResponse.data);\r\n                        console.log(\"Waybill details updated:\", waybillResponse.data);\r\n                        SweetAlertConnector.closeCurrentAlert();\r\n                        SweetAlertConnector.showSuccessAlert(\"All Data Saved successfully!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"There was an error saving the data!\", error);\r\n                        SweetAlertConnector.showErrorAlert(\"Failed to save Entry Data!\");\r\n                    })\r\n                    .finally(() => {\r\n                        this.loading = false;\r\n                    });\r\n            }\r\n        },\r\n        toggleOptions() {\r\n            console.log(this.freightType);\r\n        },\r\n        updateEntryFields(fieldName, value) {\r\n            this.entryDetails[fieldName] = value;\r\n        },\r\n\r\n        // updateInvoiceFields(invoiceId, fieldName, value) {\r\n        //   const invoice = this.commercialInvoices.find(invoice => invoice.invoice_id === invoiceId);\r\n        //   invoice[fieldName] = value;\r\n        // },\r\n        updateInvoiceData(data, field, value) {\r\n            data[field] = value;\r\n            console.log(data);\r\n        },\r\n        convertTinyIntoBoolean(tiny) {\r\n            return tiny === 1 ? true : false;\r\n        },\r\n        async fetchAllDetails() {\r\n            const api_url = process.env.VUE_APP_API_BASE_URL;\r\n            console.log(\"Fetching details\");\r\n            this.loading = true;\r\n            this.dataRetrieved = false;\r\n            try {\r\n                const entryDetailsPromise = axios.get(`${api_url}entry-details/${this.entryId}`);\r\n                const commercialInvoicesPromise = axios.get(`${api_url}commercial-invoices-with-lines/${this.entryId}`);\r\n\r\n                const [entryDetailsResponse, commercialInvoicesResponse] = await Promise.all([\r\n                    entryDetailsPromise,\r\n                    commercialInvoicesPromise,\r\n                ]);\r\n                this.dataRetrieved = true;\r\n\r\n                let waybillDate = entryDetailsResponse.data.waybill_date;\r\n                let estimatedArrivalDate = entryDetailsResponse.data.estimated_arrival_date;\r\n\r\n                const dateString = waybillDate ? Utilities.formatDateReadFromDB(waybillDate) : \"\";\r\n\r\n                const estimateArrivalDateString = estimatedArrivalDate ? Utilities.formatDateReadFromDB(estimatedArrivalDate): \"\";\r\n\r\n                this.entryDetails = entryDetailsResponse.data;\r\n                this.customsEntryForm.importerId = this.entryDetails.importer;\r\n                this.customsEntryForm.exporterId = this.entryDetails.shipper;\r\n                this.customsEntryForm.waybillNumber = this.entryDetails.waybill_number;\r\n                this.customsEntryForm.waybillDate = dateString;\r\n                this.waybillSourceURL = this.entryDetails.file_url;\r\n                this.customsEntryForm.estimatedArrivalDate = estimateArrivalDateString;\r\n                this.customsEntryForm.modeOfTransport = this.entryDetails.mode_of_transport;\r\n                this.customsEntryForm.freightType = this.entryDetails.freight_type;\r\n                this.customsEntryForm.vesselId = this.entryDetails.vessel;\r\n                this.customsEntryForm.portOfDischargeId = this.entryDetails.port_of_discharge;\r\n                this.customsEntryForm.netWeight = this.entryDetails.net_weight;\r\n                this.customsEntryForm.grossWeight = this.entryDetails.gross_weight;\r\n                this.customsEntryForm.numberOfPackages = this.entryDetails.package_quantity;\r\n                this.customsEntryForm.packageType = this.entryDetails.package_type;\r\n                this.customsEntryForm.marksAndNumbers = this.entryDetails.marks_and_numbers;\r\n                this.customsEntryForm.totalCargoValue = this.entryDetails.invoice_total;\r\n                this.customsEntryForm.freightAmount = this.entryDetails.freight_charge;\r\n                this.customsEntryForm.insuranceAmount = this.entryDetails.insurance_amount ?? 0.0;\r\n                this.customsEntryForm.otherCharges = this.entryDetails.other_charges ?? 0.0;\r\n                this.customsEntryForm.freightCurrency = this.entryDetails.freight_currency || 'USD';\r\n                this.customsEntryForm.insuranceCurrency = this.entryDetails.insurance_currency || 'USD';\r\n                this.customsEntryForm.otherChargesCurrency = this.entryDetails.other_charges_currency || 'USD';\r\n                this.customsEntryForm.rateOfExchange = this.entryDetails.rate_of_exchange;\r\n                this.customsEntryForm.countryOfOrigin = this.entryDetails.country_of_origin;\r\n                this.customsEntryForm.countryOfFinalDestination = this.entryDetails.country_of_final_destination;\r\n                this.customsEntryForm.regimeType = this.entryDetails.regimeType;\r\n\r\n                this.customsEntryForm.regimeTypeCode = this.entryDetails.regimeTypeCode;\r\n                this.customsEntryForm.depositAmount = this.entryDetails.deposit;\r\n                this.customsEntryForm.containerCharges = this.entryDetails.container_charges;\r\n                this.customsEntryForm.additionalCharges = this.entryDetails.additional_charges;\r\n                this.customsEntryForm.localFee = this.entryDetails.local_fee;\r\n                this.customsEntryForm.declarantId = this.entryDetails.declarant;\r\n                this.customsEntryForm.incoTerms = this.entryDetails.incoterms;\r\n                this.customsEntryForm.countryLastProvinance = this.entryDetails.country_last_provenance;\r\n                this.customsEntryForm.tradingCountry = this.entryDetails.trading_country;\r\n\r\n                this.classificationApproved = this.entryDetails.classification_approved;\r\n                this.classificationApprovedBy = this.entryDetails.classification_approved_by;\r\n                this.entryStatus = this.entryDetails.entry_status || \"\";\r\n                console.log(\"Commercial Invoice Raw Data: \", commercialInvoicesResponse.data);\r\n                this.commercialInvoices = commercialInvoicesResponse.data;\r\n                this.retrieveInvoiceDocumentSourceURL();\r\n                this.inializeTaxes();\r\n                this.parseInvoiceData();\r\n                this.getTotalNumberOfLines();\r\n                this.getRegimeTypes();\r\n\r\n                console.log(\"Entry details:\", this.entryDetails);\r\n                console.log(\"Customs Entry:\", this.customsEntryForm);\r\n                console.log(\"Commercial invoices:\", this.commercialInvoices);\r\n            } catch (error) {\r\n                this.error = \"Failed to load entry details: \" + (error.response?.data || error.message);\r\n                console.error(\"Failed to load entry details:\", error);\r\n                SweetAlertConnector.showErrorAlert(\"Failed to load Entry Details! Please Reach out to Administrator\");\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n        retrieveInvoiceDocumentSourceURL() {\r\n            for (let invoice of this.commercialInvoices) {\r\n                const entry = {};\r\n                entry.name = invoice.invoice_number;\r\n                entry.url = invoice.file_url;\r\n                this.invoiceDocumentSourceURLs.push(entry);\r\n            }\r\n        },\r\n        formatDate(myDate) {\r\n            const date = new Date(myDate);\r\n            const year = date.getFullYear();\r\n            const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n            const day = String(date.getDate()).padStart(2, \"0\");\r\n            return `${year}-${month}-${day}`;\r\n        },\r\n        formatDateForInput(dateString) {\r\n            return moment(dateString).tz(\"UTC\").format(\"YYYY-MM-DD\");\r\n        },\r\n        parseInvoiceData() {\r\n            console.log(\"Parsing Invoice Data\");\r\n            this.commercialInvoices.forEach((invoice) => {\r\n                invoice.vendor_name = invoice.supplier_name;\r\n                invoice.otherCharges = parseFloat(invoice.other_charges);\r\n                // invoice.invoice_date = this.formatDateForInput(invoice.invoice_date);\r\n                invoice.lines.forEach((line) => {\r\n                    line.quantity = parseFloat(line.quantity).toFixed(2);\r\n                    line.unit_price = parseFloat(line.unit_price);\r\n                    line.extension_price = parseFloat(line.extension_price).toFixed(2);\r\n                    line.vatApplicable = this.convertTinyIntoBoolean(line.vat_applicable);\r\n                    line.cpcCode = line.cpc_code;\r\n                    line.npcCode = line.npc_code;\r\n                });\r\n            });\r\n        },\r\n        async getRegimeTypes() {\r\n            DatabaseConnector.fetchCpcCodes(\"TT\").then((data) => {\r\n                this.customsEntryForm.regimeTypeOptions = data;\r\n            });\r\n        },\r\n        async updateWaybillData() {\r\n            this.waybill = {\r\n                waybill_number: this.customsEntryForm.waybillNumber,\r\n                waybill_date: this.customsEntryForm.waybillDate,\r\n                estimated_arrival_date: this.customsEntryForm.estimatedArrivalDate,\r\n                mode_of_transport: this.customsEntryForm.modeOfTransport,\r\n\r\n                freight_type: this.customsEntryForm.freightType,\r\n                marks_and_numbers: this.customsEntryForm.marksAndNumbers,\r\n                package_type: this.customsEntryForm.packageType,\r\n                cpc_code: this.entryDetails.cpc_code,\r\n                npc_code: this.entryDetails.npc_code,\r\n                package_quantity: this.customsEntryForm.numberOfPackages,\r\n                country_of_origin: this.customsEntryForm.countryOfOrigin,\r\n                country_of_final_destination: this.customsEntryForm.countryOfFinalDestination,\r\n                importer: this.customsEntryForm.importerId,\r\n                shipper: this.customsEntryForm.exporterId,\r\n                vessel: this.customsEntryForm.vesselId,\r\n                port_of_discharge: this.customsEntryForm.portOfDischargeId,\r\n                entry_id: this.entryDetails.entry_id,\r\n                waybill_id: this.entryDetails.waybill_id,\r\n            };\r\n\r\n            console.log(\"Saving Waybill Data: \", this.waybill);\r\n            console.log(`${process.env.VUE_APP_API_BASE_URL}waybill/${this.waybill.waybill_id}`);\r\n            return axios.put(`${process.env.VUE_APP_API_BASE_URL}waybill/${this.waybill.waybill_id}`, this.waybill);\r\n        },\r\n\r\n        async deleteInvoiceLines() {\r\n            console.log(\"Deleting Invoice Lines\");\r\n            console.log(this.linesToBeDeleted);\r\n            return DatabaseConnector.deleteInvoiceLines(this.linesToBeDeleted);\r\n        },\r\n\r\n        async updateEntryData() {\r\n            this.entry = {\r\n                mawi_invoice: this.entryDetails.mawi_invoice,\r\n                entry_date: this.entryDetails.entry_date,\r\n                invoice_total: this.entryDetails.invoice_total,\r\n                supplier_name: this.entryDetails.supplier_name,\r\n                net_weight: this.customsEntryForm.netWeight,\r\n                gross_weight: this.customsEntryForm.grossWeight,\r\n                entry_number: this.entryDetails.entry_number,\r\n                freight_charge: this.customsEntryForm.freightAmount,\r\n                insurance_amount: this.customsEntryForm.insuranceAmount ?? 0.0,\r\n                other_charges: this.customsEntryForm.otherCharges ?? 0.0,\r\n                freight_currency: this.customsEntryForm.freightCurrency,\r\n                insurance_currency: this.customsEntryForm.insuranceCurrency,\r\n                other_charges_currency: this.customsEntryForm.otherChargesCurrency,\r\n                rate_of_exchange: this.entryDetails.rate_of_exchange,\r\n                consignee: this.entryDetails.consignee,\r\n                declarant: this.customsEntryForm.declarantId,\r\n                incoterms: this.customsEntryForm.incoTerms,\r\n                regime_type: this.customsEntryForm.regimeType,\r\n                deposit: this.customsEntryForm.depositAmount,\r\n                container_charges: this.customsEntryForm.containerCharges,\r\n                additional_charges: this.customsEntryForm.additionalCharges,\r\n                local_fee: this.customsEntryForm.localFee,\r\n                country_last_provenance: this.customsEntryForm.countryLastProvinance,\r\n                trading_country: this.customsEntryForm.tradingCountry,\r\n                classification_status: this.classificationStatus,\r\n                classification_approved: this.classificationApproved,\r\n                classification_approved_by: this.classificationApprovedBy,\r\n                date_classified: this.dateClassified,\r\n                entry_status: this.entryStatus,\r\n            };\r\n\r\n            console.log(\"Saving Entry\", this.entry);\r\n            return axios.put(\r\n                `${process.env.VUE_APP_API_BASE_URL}customs-entry/${this.entryDetails.entry_id}`,\r\n                this.entry\r\n            );\r\n        },\r\n\r\n        async saveInvoiceData() {\r\n            \r\n            const updatePromises = this.commercialInvoices.map((invoice) => {\r\n                const formattedInvoiceData = this.formatInvoiceData(invoice);\r\n                const formattedInvoiceLinesData = this.formatInvoiceLinesData(invoice.lines);\r\n\r\n                const requestData = {\r\n                    invoiceData: formattedInvoiceData,\r\n                    invoiceLines: formattedInvoiceLinesData,\r\n                };\r\n\r\n                console.log(\"Updating invoice and invoice lines:\", requestData);\r\n\r\n                // Store the promise without calling then() or catch() on it yet\r\n                return axios.put(\r\n                    `${process.env.VUE_APP_API_BASE_URL}update-invoice-and-lines/${formattedInvoiceData.invoice_id}`,\r\n                    requestData\r\n                );\r\n            });\r\n\r\n            return Promise.all(updatePromises);\r\n        },\r\n        async saveInvoiceDataOptimized() {\r\n            try {\r\n                // Format all invoices\r\n                console.time('saveInvoiceData Execution Time');\r\n                const formattedInvoices = this.commercialInvoices.map(invoice => this.formatInvoiceData(invoice));\r\n\r\n                // Format all invoice lines\r\n                const formattedInvoiceLines = this.commercialInvoices.flatMap(invoice => this.formatInvoiceLinesData(invoice.lines));\r\n\r\n                // Create request payloads\r\n                const invoicesRequestData = { invoices: formattedInvoices };\r\n                const invoiceLinesRequestData = { invoiceLines: formattedInvoiceLines };\r\n\r\n                console.log(\"Updating multiple invoices:\", invoicesRequestData);\r\n                console.log(\"Updating multiple invoice lines:\", invoiceLinesRequestData);\r\n\r\n                // Send the update requests concurrently\r\n                const [invoicesResponse, invoiceLinesResponse] = await Promise.all([\r\n                    axios.put(`${process.env.VUE_APP_API_BASE_URL}update-multiple-invoices`, invoicesRequestData),\r\n                    axios.put(`${process.env.VUE_APP_API_BASE_URL}update-multiple-invoice-lines`, invoiceLinesRequestData)\r\n                ]);\r\n\r\n                console.log('Invoices update response:', invoicesResponse.data);\r\n                console.log('Invoice lines update response:', invoiceLinesResponse.data);\r\n\r\n                console.timeEnd('saveInvoiceData Execution Time');\r\n\r\n                return { invoicesResponse, invoiceLinesResponse };\r\n            } catch (error) {\r\n                console.error('Error updating invoices and invoice lines:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n\r\n        checkTHNCodes() {\r\n            // Iterate through the array\r\n            let invoiceData = this.commercialInvoices;\r\n            invoiceData.forEach((invoice) => {\r\n                invoice.lines.forEach((line) => {\r\n                    // Check if the THN code is missing\r\n                    if (\r\n                        !line.tariff_code ||\r\n                        line.tariff_code.trim() === \"\" ||\r\n                        line.tariff_code === \"N/A\" ||\r\n                        line.tariff_code === undefined ||\r\n                        line.tariff_code === null\r\n                    ) {\r\n                        // Display an error message\r\n\r\n                        return false; // Return false if any item is missing a THN code\r\n                    }\r\n                });\r\n            });\r\n            return true; // Return true if all items have a THN code\r\n        },\r\n\r\n        async sendRPARequest(){\r\n            const flowUrl = 'https://prod-127.westus.logic.azure.com:443/workflows/b219026190bf4867b84dd8498580e0b9/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=P31ddYGAbtAtr7nEcJEc3TbOkgT75Ekk-viC_QcwcAg';\r\n            console.log(\"Sending RPA Request\");\r\n            console.log(\"Entry Details: \", this.entryDetails);\r\n            console.log(\"URL \", flowUrl);\r\n  \r\n            const payload = {\r\n                key: this.entryDetails?.entry_number,\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(flowUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(payload)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    console.log('Flow triggered successfully');\r\n                } else {\r\n                    console.error('Failed to trigger flow:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to trigger flow:', error);\r\n            }\r\n        },\r\n\r\n        generateAsycudaXML() {\r\n            console.log(\"Generating Asycuda XML\");\r\n            if(!this.checkMandatoryData()){\r\n                return;\r\n            }\r\n            const selectedPort = this.customsEntryForm.ports.find(\r\n                (port) => port.id === this.customsEntryForm.portOfDischargeId\r\n            );\r\n            const selectedImporter = this.customsEntryForm.importers.find(\r\n                (importer) => importer.id === this.customsEntryForm.importerId\r\n            );\r\n            const selectedExporter = this.customsEntryForm.exporters.find(\r\n                (exporter) => exporter.id === this.customsEntryForm.exporterId\r\n            );\r\n            const general_procedural_code =\r\n                this.customsEntryForm.regimeType == undefined ? \"\" : this.customsEntryForm.regimeTypeCode?.slice(2);\r\n            const typeOfDeclaration =\r\n                this.customsEntryForm.regimeType == undefined ? \"\" : this.customsEntryForm.regimeTypeCode?.slice(0, 2);\r\n            console.log(\"Tye Of Declaration: \", typeOfDeclaration);\r\n            \r\n            if (\r\n                typeOfDeclaration === \"IM\" &&\r\n                (selectedImporter.taxIdentificationNumber === undefined ||\r\n                    null ||\r\n                    selectedImporter.taxIdentificationNumber.trim().length === 0)\r\n            ) {\r\n                SweetAlertConnector.showErrorAlert(\r\n                    \"Missing Importer Tax Identification Number! Please Update Importer Details!\"\r\n                );\r\n                return;\r\n            }\r\n            console.log(\"Exporter: \", selectedExporter);\r\n            if (\r\n                typeOfDeclaration === \"EX\" &&\r\n                (selectedExporter.taxIdentificationNumber === undefined ||\r\n                    null ||\r\n                    selectedExporter.taxIdentificationNumber.trim().length === 0)\r\n            ) {\r\n                SweetAlertConnector.showErrorAlert(\r\n                    \"Missing Exporter Tax Identification Number! Please Update Exporter Details!\"\r\n                );\r\n                return;\r\n            }\r\n\r\n            const selectedDeclarant = this.customsEntryForm.declarants.find(\r\n                (declarant) => declarant.id === this.customsEntryForm.declarantId\r\n            );\r\n            const selectedCountry = this.countries.find(\r\n                (country) => country.code === this.customsEntryForm.countryOfOrigin\r\n            );\r\n            const xmlData = Utilities.generateXMLData(\r\n                this.commercialInvoices,\r\n                this.entryDetails?.entry_number,\r\n                this.customsEntryForm.waybillNumber,\r\n                this.customsEntryForm.grossWeight,\r\n                this.customsEntryForm.netWeight,\r\n                this.customsEntryForm.numberOfPackages,\r\n                this.customsEntryForm.packageType,\r\n                this.customsEntryForm.marksAndNumbers,\r\n                this.customsEntryForm.freightAmount,\r\n                this.availableCPCCodes,\r\n                this.totalFOBValue,\r\n                this.tradeAgreements\r\n            );\r\n\r\n            const requestData = {\r\n                reference_number: this.entryDetails?.entry_number,\r\n                group_items: true,\r\n                waybill: {\r\n                    number: this.customsEntryForm.waybillNumber,\r\n                    external_freight: this.customsEntryForm.freightAmount,\r\n                    insurance:\r\n                        this.customsEntryForm.insuranceAmount == undefined\r\n                            ? 0.0\r\n                            : this.customsEntryForm.insuranceAmount,\r\n                    other_charges:\r\n                        this.customsEntryForm.otherCharges == undefined ? 0.0 : this.customsEntryForm.otherCharges,\r\n                    importer: {\r\n                        name: `${selectedImporter?.name}\\n${selectedImporter?.address}`,\r\n                        tax_identification_number:\r\n                            selectedImporter.taxIdentificationNumber == undefined || null\r\n                                ? \"\"\r\n                                : selectedImporter.taxIdentificationNumber,\r\n                    },\r\n                    exporter: {\r\n                        name: `${selectedExporter?.name}\\n${selectedExporter?.address}`,\r\n                        tax_identification_number:\r\n                            selectedExporter.taxIdentificationNumber == undefined || null\r\n                                ? \"\"\r\n                                : selectedExporter.taxIdentificationNumber,\r\n                    },\r\n                    declarant: {\r\n                        name: selectedDeclarant?.name,\r\n                        tax_identification_number:\r\n                            selectedDeclarant.taxIdentificationNumber == undefined || null\r\n                                ? \"\"\r\n                                : selectedDeclarant.taxIdentificationNumber,\r\n                    },\r\n                    charges: {\r\n                        external_freight: {\r\n                            amount: this.customsEntryForm.freightAmount,\r\n                            currency: this.customsEntryForm.freightCurrency,\r\n                            rate_of_exchange: this.customsEntryForm.freightRateOfExchange,\r\n                        },\r\n                        insurance: {\r\n                            amount: this.customsEntryForm.insuranceAmount,\r\n                            currency: this.customsEntryForm.insuranceCurrency,\r\n                            rate_of_exchange: this.customsEntryForm.insuranceRateOfExchange,\r\n                        },\r\n                        other_charges: {\r\n                            amount: this.customsEntryForm.otherCharges,\r\n                            currency: this.customsEntryForm.otherChargesCurrency,\r\n                            rate_of_exchange: this.customsEntryForm.otherChargesRateOfExchange,\r\n                        },\r\n                    },\r\n                    mode_of_transport:\r\n                        this.customsEntryForm.modeOfTransport === \"Ocean\"\r\n                            ? \"1\"\r\n                            : this.customsEntryForm.modeOfTransport === \"Air\"\r\n                            ? \"4\"\r\n                            : \"\",\r\n                    container_flag: false,\r\n                    vessel: this.customsEntryForm.vesselName,\r\n                    country_of_origin: this.customsEntryForm.countryOfOrigin,\r\n                    country_of_destination:\r\n                        this.customsEntryForm.countryOfFinalDestination == undefined\r\n                            ? \"\"\r\n                            : this.customsEntryForm.countryOfFinalDestination,\r\n                    number_of_packages: this.customsEntryForm.numberOfPackages + \"\",\r\n                    type_of_declaration: typeOfDeclaration,\r\n                    general_procedural_code: general_procedural_code,\r\n                    office_of_destination: selectedPort.asycudaCode,\r\n                    country_last_provinance: this.customsEntryForm.countryLastProvinance,\r\n                    trading_country: this.customsEntryForm.tradingCountry,\r\n                    country_export: this.customsEntryForm.countryOfOrigin,\r\n                    delivery_terms: this.customsEntryForm.incoTerms,\r\n                    delivery_terms_place: this.customsEntryForm.countryOfOrigin,\r\n                    place_of_terms: selectedCountry?.name,\r\n                    local_currency: \"TTD\",\r\n                    office_of_entry: selectedPort.asycudaCode,\r\n                    location_of_goods: \"\",\r\n                },\r\n                invoices: xmlData,\r\n            };\r\n            console.log(\"XML Data: \", requestData);\r\n            SweetAlertConnector.showLoadingAlert(\"Generating Asycuda XML...\");\r\n            DatabaseConnector.generateAsycudaXML(requestData)\r\n                .then((response) => {\r\n                    this.sendRPARequest();\r\n                    SweetAlertConnector.closeCurrentAlert();\r\n                    SweetAlertConnector.showSuccessAlert(\"Asycuda XML Generated Successfully!\");\r\n                    if(this.entryStatus !== null && this.entryStatus === \"CLASSIFICATION_OKAY\"){\r\n                        console.log(\"Setting to partial storage\");\r\n                        this.setToPartialStorage();\r\n                    }\r\n                    const fileURL = window.URL.createObjectURL(new Blob([response], { type: \"application/xml\" }));\r\n                    const fileLink = document.createElement(\"a\");\r\n                    const fileName = `Asycuda XML - ${this.entryDetails?.entry_number}.xml`;\r\n                    fileLink.href = fileURL;\r\n                    fileLink.setAttribute(\"download\", fileName);\r\n                    document.body.appendChild(fileLink);\r\n                    fileLink.click();\r\n                    fileLink.remove();\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Failed to generate Asycuda XML:\", error);\r\n                    SweetAlertConnector.showErrorAlert(\"Failed to generate Asycuda XML!\");\r\n                });\r\n        },\r\n    },\r\n};\r\n\r\nfunction verifyInvoiceData() {\r\n    this.displayDocumentVerificationView = !this.displayDocumentVerificationView;\r\n}\r\n\r\nasync function openWaybill(){\r\n    const waybillURL = this.waybillSourceURL;\r\n    if(!waybillURL || waybillURL.trim().length === 0){\r\n        SweetAlertConnector.showErrorAlert(\"No Waybill Found!\");\r\n        return;\r\n    }\r\n    console.log(\"Opening PDF\");\r\n    SweetAlertConnector.showLoadingAlert(\"Opening PDF...\");\r\n\r\n    try {\r\n        SweetAlertConnector.closeCurrentAlert();\r\n        SweetAlertConnector.showSuccessAlert(\"PDF Opened Successfully!\");\r\n\r\n        const newWindow = window.open('', '_blank', 'width=800,height=600');\r\n\r\n        if (newWindow) {\r\n            newWindow.document.write(`<iframe src=\"${waybillURL}\" style=\"width:100%; height:100%;\" frameborder=\"0\"></iframe>`);\r\n            newWindow.document.title = \"PDF Document\";\r\n        } else {\r\n            console.error('Failed to open new window.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        SweetAlertConnector.closeCurrentAlert();\r\n        SweetAlertConnector.showErrorAlert('Failed to open PDF!');\r\n    }\r\n}\r\n\r\nasync function mergeAndOpenPDFs(){\r\n    console.log(\"Merging and Opening PDFs\");\r\n    SweetAlertConnector.showLoadingAlert(\"Merging and Opening Invoices...\");\r\n    const pdfs = this.invoiceDocumentSourceURLs.map((invoice) => invoice.url);\r\n    console.log(pdfs);\r\n    try {\r\n        const api_url = process.env.VUE_APP_API_BASE_URL;\r\n        const response = await fetch(`${api_url}merge-pdfs`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ pdfUrls: pdfs }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to merge PDFs');\r\n        }\r\n        SweetAlertConnector.closeCurrentAlert();\r\n        SweetAlertConnector.showSuccessAlert(\"PDFs Merged Successfully!\");\r\n\r\n        const blob = await response.blob();\r\n        const url = URL.createObjectURL(blob);\r\n        const newWindow = window.open('', '_blank', 'width=800,height=600');\r\n\r\n        if (newWindow) {\r\n          newWindow.document.write(`<iframe src=\"${url}\" style=\"width:100%; height:100%;\" frameborder=\"0\"></iframe>`);\r\n          newWindow.document.title = \"Merged PDF\";\r\n        } else {\r\n          console.error('Failed to open new window.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        SweetAlertConnector.closeCurrentAlert();\r\n        SweetAlertConnector.showErrorAlert('Failed to merge and open PDFs!');\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.badge-container {\r\n    margin: 10px;\r\n}\r\n.error {\r\n    color: red;\r\n}\r\n/* Add your styles here */\r\nbutton {\r\n    margin: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n#app {\r\n    font-family: \"Avenir\", Helvetica, Arial, sans-serif;\r\n    /* text-align: center; */\r\n}\r\n\r\n.dropzone {\r\n    border: 2px dashed #ccc;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    background: #fafafa;\r\n    color: #bdbdbd;\r\n    margin: 10px;\r\n}\r\n\r\n.dropzone.dragover {\r\n    border-color: #3f51b5;\r\n    background-color: #eeeeee;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    border: 1px solid #ccc;\r\n    padding: 8px;\r\n    text-align: left;\r\n}\r\n.dropdown {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n}\r\n\r\n.dropdown ul {\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.dropdown ul li {\r\n    padding: 8px 12px;\r\n    cursor: pointer;\r\n}\r\n\r\n.dropdown ul li:hover {\r\n    background-color: #f0f0f0;\r\n}\r\n.fas.fa-file-pdf {\r\n    color: #ff0000; /* Red color for PDF icon */\r\n    margin-left: 10px;\r\n}\r\n.valid-commodity-code {\r\n    color: #09ba09;\r\n    font-weight: bold;\r\n}\r\n\r\n.invalid-commodity-code {\r\n    color: red;\r\n    font-weight: bold;\r\n}\r\n.green-icon {\r\n  color: green;\r\n  font-size: 20px; /* Make the icon bigger */\r\n}\r\n\r\n.icon-button {\r\n  background: none;\r\n  border: 1px solid green; /* Add a green border */\r\n  padding: 5px; /* Add some padding */\r\n  margin-left: 5px; /* Adds some space between the text and the button */\r\n  cursor: pointer;\r\n  border-radius: 5px; /* Round the edges of the button */\r\n  transition: background-color 0.3s, color 0.3s; /* Smooth transition for hover effect */\r\n}\r\n\r\n.icon-button:hover {\r\n  background-color: green; /* Change background to green on hover */\r\n}\r\n\r\n.icon-button:hover .green-icon {\r\n  color: white; /* Change icon color to white on hover */\r\n}\r\n\r\n.icon-button:focus {\r\n  outline: none; /* Remove the default outline */\r\n}\r\n.custom-switch .form-check-input {\r\n    transform: scale(1.5); /* Increase the size of the switch */\r\n}\r\n\r\n.d-flex {\r\n    display: flex;\r\n}\r\n\r\n.align-items-center {\r\n    align-items: center; /* Center the checkbox vertically */\r\n}\r\n</style>\r\n","import { render } from \"./EntryDetails.vue?vue&type=template&id=06c6483b\"\nimport script from \"./EntryDetails.vue?vue&type=script&lang=js\"\nexport * from \"./EntryDetails.vue?vue&type=script&lang=js\"\n\nimport \"./EntryDetails.vue?vue&type=style&index=0&id=06c6483b&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"container mt-4\">\r\n    <h1 class=\"text-center mb-4\">Trinidad & Tobago</h1>\r\n    <h1 class=\"text-center mb-4\">Customs Declaration Form E-C75</h1>\r\n    <form @submit.prevent=\"generateC75Declaration\" class=\"my-form-container\">\r\n      <CustomsDeclarationSectionOne\r\n        :buyerIdProp=\"this.$route.query.buyerId\"\r\n        :customsDeclarationSectionOne=\"form.customsDeclarationSectionOne\"\r\n        @update-section-one=\"form.customsDeclarationSectionOne = $event\"\r\n      />\r\n      <CustomsDeclarationSectionTwo\r\n        :customsDeclarationSectionTwo=\"form.customsDeclarationSectionTwo\"\r\n        :customsDeclarationSectionOne=\"form.customsDeclarationSectionOne\"\r\n        @update-section-two=\"form.customsDeclarationSectionTwo = $event\"\r\n      />\r\n      <CustomsDeclarationSectionThree\r\n        :customsDeclarationSectionThree=\"form.customsDeclarationSectionThree\"\r\n        @update-section-three=\"form.customsDeclarationSectionThree = $event\"\r\n      />\r\n      <CustomsDeclarationSectionFour\r\n        :customsDeclarationSectionFour=\"form.customsDeclarationSectionFour\"\r\n        :customsDeclarationSectionThree=\"form.customsDeclarationSectionThree\"\r\n        @update-section-four=\"form.customsDeclarationSectionFour = $event\"\r\n      />\r\n      \r\n    </form>\r\n    <table>\r\n      <tr>\r\n        <td>\r\n            <button class=\"btn btn-primary\" @click=\"save75Declaration\">Save Valuation Form</button>\r\n        </td>\r\n        <td>\r\n          <button class=\"btn btn-primary\" @click=\"generateC75Declaration\">Generate Valuation Form</button>\r\n        </td>\r\n        <!-- <td>\r\n          <button class=\"btn btn-primary\" @click=\"generatePreSignedValuation\">Generate Pre-Signed Valuation</button>\r\n        </td> -->\r\n        <td>\r\n          <button class=\"btn btn-primary\" @click=\"generatePreSignedValuationVersionTwo\">Generate Pre-Signed Valuation Form</button>\r\n        </td>\r\n        <td>\r\n          <button class=\"btn btn-primary\" @click=\"generateBlanlValuationForPreSigning\">Generate Blank Valuation for Pre-Signing</button>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CustomsDeclarationSectionOne from './CustomsDeclarationSections/CustomsDeclarationSectionOne.vue';\r\nimport CustomsDeclarationSectionTwo from './CustomsDeclarationSections/CustomsDeclarationSectionTwo.vue';\r\nimport CustomsDeclarationSectionThree from './CustomsDeclarationSections/CustomsDeclarationSectionThree.vue';\r\nimport CustomsDeclarationSectionFour from './CustomsDeclarationSections/CustomsDeclarationSectionFour.vue';\r\n\r\nimport * as DatabaseConnector from '@/composables/DatabaseConnector';\r\nimport * as SweetAlertConnector from '../composables/SweetAlertConnector';\r\nimport * as Currency from '@/composables/Currency';\r\n\r\nexport default {\r\n    name: 'CustomsDeclarationForm',\r\n    components: {\r\n        CustomsDeclarationSectionOne,\r\n        CustomsDeclarationSectionTwo,\r\n        CustomsDeclarationSectionThree,\r\n        CustomsDeclarationSectionFour\r\n    },\r\n    props: {\r\n        entryId: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        buyerId: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        sellerId: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        invoiceNumber: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        invoiceTotal: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        currency: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        rateOfExchange: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        freight: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n        insurance: {\r\n            type: [String, Number],\r\n            required: true\r\n        },\r\n    },\r\n    mounted() {\r\n        this.fetchCustomsDeclarations();\r\n        this.syncData();\r\n        this.currencies = Currency.getCurrencyList();\r\n        this.getCountries();\r\n    },\r\n    data() {\r\n        return {\r\n            newC75: true,\r\n            entryNumber: '',\r\n            currencies: [],\r\n            countries: [],\r\n            form: {\r\n                customsDeclarationSectionOne: {\r\n                  sellers: [],\r\n                  buyers: [],\r\n                  declarants: [],\r\n                  sellerNameAddress: '',\r\n                  buyerNameAddress: '',\r\n                  declarantNameAddress: '',\r\n                },\r\n                customsDeclarationSectionTwo: {\r\n                  date_signed: this.getCurrentDate(),\r\n                  relatedParties: 'no',\r\n                  influencePrice: 'no',\r\n                  transactionValueApproximate: 'no',\r\n                  restrictions: 'no',\r\n                  conditions: 'no',\r\n                  royalties: 'no',\r\n                  resale_disposal_boolean: 'no',\r\n                },\r\n                customsDeclarationSectionThree: {\r\n                    totalNationalCurrency : 0.0,\r\n                    netPrice: 0.0,\r\n                    indirectPayments: 0.0,\r\n                    exchangeRate: 1.0,\r\n                    transport: 0.0,\r\n                    loadingHandling: 0.0,\r\n                    insurance: 0.0,\r\n                    totalB: 0.0,\r\n                    transportIncluded: false,\r\n                    insuranceIncluded: false,\r\n                    invoiceCurrency: 'USD',\r\n                },\r\n                customsDeclarationSectionFour: {\r\n                    costAfterArrival: 0.0,\r\n                    chargesAfterImportation: 0.0,\r\n                    otherCharges: 0.0,\r\n                    customsDutiesTaxes: 0.0,\r\n                    totalC: 0.0,\r\n                    valueDeclared: 0.0\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        save75Declaration(){\r\n            if(this.newC75){\r\n                this.create75Declaration();\r\n            } else {\r\n                this.updateC75Declaration();\r\n            }\r\n        },\r\n        getCountries(){\r\n          DatabaseConnector.fetchCountries().then(response => {\r\n            this.countries = response;\r\n          }).catch(error => {\r\n            console.error('Failed to get countries:', error);\r\n          });\r\n        },\r\n        getCurrentDate() {\r\n          const date = new Date();\r\n          const day = String(date.getDate()).padStart(2, '0');\r\n          const month = String(date.getMonth() + 1).padStart(2, '0');\r\n          const year = date.getFullYear();\r\n\r\n          return `${year}-${month}-${day}`;\r\n        },\r\n        async create75Declaration() {\r\n            console.log('Saving C75 Declaration...');\r\n\r\n            const selectedSeller = this.form.customsDeclarationSectionOne.sellers.find(seller => seller.id === this.form.customsDeclarationSectionOne.sellerId);\r\n            const selectedBuyer = this.form.customsDeclarationSectionOne.buyers.find(buyer => buyer.id === this.form.customsDeclarationSectionOne.buyerId);\r\n            const selectedDeclarant = this.form.customsDeclarationSectionOne.declarants.find(declarant => declarant.id === this.form.customsDeclarationSectionOne.declarantId);\r\n\r\n            const sellerNameAddress = selectedSeller ? `${selectedSeller.name} \\n ${selectedSeller.address}` : '';\r\n            const buyerNameAddress = selectedBuyer ? `${selectedBuyer.name} \\n ${selectedBuyer.address}` : '';\r\n            const declarantNameAddress = selectedDeclarant ? `${selectedDeclarant.name} \\n ${selectedDeclarant.address}` : '';\r\n\r\n            const declarantStatus = selectedDeclarant ? selectedDeclarant.status : '';\r\n            const declarantPhone = selectedDeclarant?.phone ? selectedDeclarant.phone : '';\r\n            const declarantName = selectedDeclarant ? selectedDeclarant.name : '';\r\n            SweetAlertConnector.showLoadingAlert('Saving Data...');\r\n            const declarationData = {\r\n                \"sellerNameAddress\": sellerNameAddress,\r\n                \"buyerNameAddress\": buyerNameAddress,\r\n                \"declarantNameAddress\": declarantNameAddress,\r\n                \"incoTerms\": this.form.customsDeclarationSectionOne.termsOfDelivery !== undefined ? this.form.customsDeclarationSectionOne.termsOfDelivery : \"\",\r\n                \"invoiceNumbersDates\": this.form.customsDeclarationSectionOne.invoiceNumber !== undefined ? this.form.customsDeclarationSectionOne.invoiceNumber : \"\",\r\n                \"numberAndDateofContract\": this.form.customsDeclarationSectionOne.contractNumber !== undefined ? this.form.customsDeclarationSectionOne.contractNumber : \"\",\r\n                \"sellerId\": this.form.customsDeclarationSectionOne.sellerId !== undefined ? this.form.customsDeclarationSectionOne.sellerId : \"\",\r\n                \"buyerId\": this.form.customsDeclarationSectionOne.buyerId !== undefined ? this.form.customsDeclarationSectionOne.buyerId : \"\",\r\n                \"declarantId\": this.form.customsDeclarationSectionOne.declarantId !== undefined ? this.form.customsDeclarationSectionOne.declarantId : \"\",\r\n                \"relatedParties\": this.form.customsDeclarationSectionTwo.relatedParties !== undefined ? this.form.customsDeclarationSectionTwo.relatedParties : \"\",\r\n                \"influencePrice\": this.form.customsDeclarationSectionTwo.influencePrice !== undefined ? this.form.customsDeclarationSectionTwo.influencePrice : \"\",\r\n                \"transactionValueApproximate\": this.form.customsDeclarationSectionTwo.transactionValueApproximate !== undefined ? this.form.customsDeclarationSectionTwo.transactionValueApproximate : \"\",\r\n                \"restrictions\": this.form.customsDeclarationSectionTwo.restrictions !== undefined ? this.form.customsDeclarationSectionTwo.restrictions : \"\",\r\n                \"conditions\": this.form.customsDeclarationSectionTwo.conditions !== undefined ? this.form.customsDeclarationSectionTwo.conditions : \"\",\r\n                \"royalties_boolean\": this.form.customsDeclarationSectionTwo.royalties !== undefined ? this.form.customsDeclarationSectionTwo.royalties : \"\",\r\n                \"resale_disposal_boolean\": this.form.customsDeclarationSectionTwo.resale_disposal_boolean !== undefined ? this.form.customsDeclarationSectionTwo.resale_disposal_boolean : \"\",\r\n                \"date_signed\": this.form.customsDeclarationSectionTwo.date_signed !== undefined ? this.form.customsDeclarationSectionTwo.date_signed : \"\",\r\n                \"status_of_signatory\": declarantStatus,\r\n                \"signatory_phone_number\": declarantPhone,\r\n                \"signatory_name\": declarantName,\r\n                \"net_invoice_price\": this.form.customsDeclarationSectionThree.netPrice !== undefined ? this.form.customsDeclarationSectionThree.netPrice : \"\",\r\n                \"indirect_payment\": this.form.customsDeclarationSectionThree.indirectPayment !== undefined ? this.form.customsDeclarationSectionThree.indirectPayment : \"\",\r\n                \"exchange_rate\": this.form.customsDeclarationSectionThree.exchangeRate !== undefined ? this.form.customsDeclarationSectionThree.exchangeRate : \"\",\r\n                \"costs_commissions\": this.form.customsDeclarationSectionThree.commissions !== undefined ? this.form.customsDeclarationSectionThree.commissions : \"\",\r\n                \"costs_brokerage\": this.form.customsDeclarationSectionThree.brokerage !== undefined ? this.form.customsDeclarationSectionThree.brokerage : \"\",\r\n                \"costs_containers_packing\": this.form.customsDeclarationSectionThree.containersPacking !== undefined ? this.form.customsDeclarationSectionThree.containersPacking : \"\",\r\n                \"goods_free_of_charge_materials\": this.form.customsDeclarationSectionThree.materials !== undefined ? this.form.customsDeclarationSectionThree.materials : \"\",\r\n                \"goods_free_of_charge_tools\": this.form.customsDeclarationSectionThree.tools !== undefined ? this.form.customsDeclarationSectionThree.tools : \"\",\r\n                \"goods_free_of_charge_materials_consumed\": this.form.customsDeclarationSectionThree.materialsConsumed !== undefined ? this.form.customsDeclarationSectionThree.materialsConsumed : \"\",\r\n                \"goods_engineering_development\": this.form.customsDeclarationSectionThree.engineering !== undefined ? this.form.customsDeclarationSectionThree.engineering : \"\",\r\n                \"royalties_license_fee\": this.form.customsDeclarationSectionThree.royalties !== undefined ? this.form.customsDeclarationSectionThree.royalties : \"\",\r\n                \"procees_resale_disposal\": this.form.customsDeclarationSectionThree.proceedsResale !== undefined ? this.form.customsDeclarationSectionThree.proceedsResale : \"\",\r\n                \"cost_delivery_transport\": this.form.customsDeclarationSectionThree.transport !== undefined ? this.form.customsDeclarationSectionThree.transport : \"\",\r\n                \"cost_delivery_loading\": this.form.customsDeclarationSectionThree.loadingHandling !== undefined ? this.form.customsDeclarationSectionThree.loadingHandling : \"\",\r\n                \"cost_delivery_insurance\": this.form.customsDeclarationSectionThree.insurance !== undefined ? this.form.customsDeclarationSectionThree.insurance : \"\",\r\n                \"cost_transport_after_arrival\": this.form.customsDeclarationSectionFour.costAfterArrival !== undefined ? this.form.customsDeclarationSectionFour.costAfterArrival : \"\",\r\n                \"charges_construction\": this.form.customsDeclarationSectionFour.chargesAfterImportation !== undefined ? this.form.customsDeclarationSectionFour.chargesAfterImportation : \"\",\r\n                \"other_charges\": this.form.customsDeclarationSectionFour.otherCharges !== undefined ? this.form.customsDeclarationSectionFour.otherCharges : \"\",\r\n                \"customs_duties_taxes\": this.form.customsDeclarationSectionFour.customsDutiesTaxes !== undefined ? this.form.customsDeclarationSectionFour.customsDutiesTaxes : \"\",\r\n                \"entryId\": this.entryId\r\n            }\r\n            try {\r\n                console.log('Saving customs declaration...');\r\n                console.log(declarationData);\r\n                await DatabaseConnector.saveCustomsDeclaration(declarationData);\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert('All Data Saved successfully!');\r\n                console.log('Customs declaration saved successfully.');\r\n                this.newC75 = false;\r\n            } catch (error) {\r\n                SweetAlertConnector.showErrorAlert('Failed to save Entry Data!');\r\n                console.error('Failed to save the declaration:', error);\r\n            }\r\n        },\r\n        prepareDeclarationObject(){\r\n          console.log(\"Prearing Declaration Object...\")\r\n          const selectedSeller = this.form.customsDeclarationSectionOne.sellers.find(seller => seller.id === this.form.customsDeclarationSectionOne.sellerId);\r\n          const selectedBuyer = this.form.customsDeclarationSectionOne.buyers.find(buyer => buyer.id === this.form.customsDeclarationSectionOne.buyerId);\r\n          const selectedDeclarant = this.form.customsDeclarationSectionOne.declarants.find(declarant => declarant.id === this.form.customsDeclarationSectionOne.declarantId);\r\n          \r\n\r\n          // console.log(this.countries)\r\n          const sellerCountry = selectedSeller.country ? this.countries.find(country => country.code === selectedSeller.country)?.name : ''; \r\n          const buyerCountry = selectedBuyer.country ? this.countries.find(country => country.code === selectedBuyer.country)?.name : '';\r\n\r\n          const sellerNameAddress = selectedSeller ? `${selectedSeller.name}\\n${selectedSeller.address}, ${sellerCountry}` : '';\r\n          const buyerNameAddress = selectedBuyer ? `${selectedBuyer.name}\\n${selectedBuyer.address}, ${buyerCountry}` : '';\r\n          const declarantNameAddress = selectedDeclarant ? `${selectedDeclarant.name}\\n${selectedDeclarant.address}\\n${selectedDeclarant.country}` : '';\r\n\r\n          const declarantStatus = selectedDeclarant ? selectedDeclarant.status : '';\r\n          const declarantPhone = selectedDeclarant?.phoneContact ? selectedDeclarant.phoneContact : '';\r\n          const declarantName = selectedDeclarant ? selectedDeclarant.name : '';\r\n\r\n          const selectedCurrency = this.currencies.find(currency => currency.code === this.form.customsDeclarationSectionThree.invoiceCurrency);\r\n          const currencyFullName = selectedCurrency ? selectedCurrency.name : '';\r\n\r\n          const transport = this.form.customsDeclarationSectionThree.transport !== undefined ? this.form.customsDeclarationSectionThree.transport : 0.0;\r\n\r\n          const exchangeRate = this.form.customsDeclarationSectionThree.exchangeRate !== undefined ? this.form.customsDeclarationSectionThree.exchangeRate : 1.0;\r\n\r\n          const transportConverted = parseFloat(transport);\r\n          console.log(\"Transport Converted:\", transportConverted, transport, exchangeRate);\r\n\r\n          console.log(\"Selected Seller:\", selectedSeller);\r\n          console.log(\"Selected Buyer:\", selectedBuyer);\r\n          console.log(\"Selected Declarant:\", selectedDeclarant);\r\n          \r\n          let declarationData = {\r\n                \"sellerNameAddress\": sellerNameAddress,\r\n                \"buyerNameAddress\": buyerNameAddress,\r\n                \"declarantNameAddress\": declarantNameAddress,\r\n                \"incoTerms\": this.form.customsDeclarationSectionOne.termsOfDelivery !== undefined ? this.form.customsDeclarationSectionOne.termsOfDelivery : \"\",\r\n                \"invoiceNumbersDates\": this.form.customsDeclarationSectionOne.invoiceNumber !== undefined ? this.form.customsDeclarationSectionOne.invoiceNumber : \"\",\r\n                \"numberAndDateofContract\": this.form.customsDeclarationSectionOne.contractNumber !== undefined ? this.form.customsDeclarationSectionOne.contractNumber : \"\",\r\n                \"sellerId\": this.form.customsDeclarationSectionOne.sellerId !== undefined ? this.form.customsDeclarationSectionOne.sellerId : \"\",\r\n                \"buyerId\": this.form.customsDeclarationSectionOne.buyerId !== undefined ? this.form.customsDeclarationSectionOne.buyerId : \"\",\r\n                \"declarantId\": this.form.customsDeclarationSectionOne.declarantId !== undefined ? this.form.customsDeclarationSectionOne.declarantId : \"\",\r\n                \"relatedParties\": this.form.customsDeclarationSectionTwo.relatedParties !== undefined ? this.form.customsDeclarationSectionTwo.relatedParties : \"\",\r\n                \"influencePrice\": this.form.customsDeclarationSectionTwo.influencePrice !== undefined ? this.form.customsDeclarationSectionTwo.influencePrice : \"\",\r\n                \"transactionValueApproximate\": this.form.customsDeclarationSectionTwo.transactionValueApproximate !== undefined ? this.form.customsDeclarationSectionTwo.transactionValueApproximate : \"\",\r\n                \"restrictions\": this.form.customsDeclarationSectionTwo.restrictions !== undefined ? this.form.customsDeclarationSectionTwo.restrictions : \"\",\r\n                \"conditions\": this.form.customsDeclarationSectionTwo.conditions !== undefined ? this.form.customsDeclarationSectionTwo.conditions : \"\",\r\n                \"royalties_boolean\": this.form.customsDeclarationSectionTwo.royalties !== undefined ? this.form.customsDeclarationSectionTwo.royalties : \"\",\r\n                \"resale_disposal_boolean\": this.form.customsDeclarationSectionTwo.resale_disposal_boolean !== undefined ? this.form.customsDeclarationSectionTwo.resale_disposal_boolean : \"\",\r\n                \"date_signed\": this.form.customsDeclarationSectionTwo.date_signed !== undefined ? this.form.customsDeclarationSectionTwo.date_signed : \"\",\r\n                \"status_of_signatory\": declarantStatus,\r\n                \"signatory_phone_number\": declarantPhone !== undefined ? declarantPhone : \"\",\r\n                \"signatory_name\": declarantName,\r\n                \"net_invoice_price\": this.form.customsDeclarationSectionThree.netPrice !== undefined ? this.form.customsDeclarationSectionThree.netPrice : \"\",\r\n                \"indirect_payment\": this.form.customsDeclarationSectionThree.indirectPayment !== undefined ? this.form.customsDeclarationSectionThree.indirectPayment : \"\",\r\n                \"exchange_rate\": this.form.customsDeclarationSectionThree.exchangeRate !== undefined ? this.form.customsDeclarationSectionThree.exchangeRate : \"\",\r\n                \"costs_commissions\": this.form.customsDeclarationSectionThree.commissions !== undefined ? this.form.customsDeclarationSectionThree.commissions : \"\",\r\n                \"costs_brokerage\": this.form.customsDeclarationSectionThree.brokerage !== undefined ? this.form.customsDeclarationSectionThree.brokerage : \"\",\r\n                \"costs_containers_packing\": this.form.customsDeclarationSectionThree.containersPacking !== undefined ? this.form.customsDeclarationSectionThree.containersPacking : \"\",\r\n                \"goods_free_of_charge_materials\": this.form.customsDeclarationSectionThree.materials !== undefined ? this.form.customsDeclarationSectionThree.materials : \"\",\r\n                \"goods_free_of_charge_tools\": this.form.customsDeclarationSectionThree.tools !== undefined ? this.form.customsDeclarationSectionThree.tools : \"\",\r\n                \"goods_free_of_charge_materials_consumed\": this.form.customsDeclarationSectionThree.materialsConsumed !== undefined ? this.form.customsDeclarationSectionThree.materialsConsumed : \"\",\r\n                \"goods_engineering_development\": this.form.customsDeclarationSectionThree.engineering !== undefined ? this.form.customsDeclarationSectionThree.engineering : \"\",\r\n                \"royalties_license_fee\": this.form.customsDeclarationSectionThree.royalties !== undefined ? this.form.customsDeclarationSectionThree.royalties : \"\",\r\n                \"procees_resale_disposal\": this.form.customsDeclarationSectionThree.proceedsResale !== undefined ? this.form.customsDeclarationSectionThree.proceedsResale : \"\",\r\n                \"cost_delivery_transport\": transportConverted.toFixed(2),\r\n                \"cost_delivery_loading\": this.form.customsDeclarationSectionThree.loadingHandling !== undefined ? this.form.customsDeclarationSectionThree.loadingHandling : \"\",\r\n                \"cost_delivery_insurance\": this.form.customsDeclarationSectionThree.insurance !== undefined ? this.form.customsDeclarationSectionThree.insurance : \"\",\r\n                \"cost_transport_after_arrival\": this.form.customsDeclarationSectionFour.costAfterArrival !== undefined ? this.form.customsDeclarationSectionFour.costAfterArrival : \"\",\r\n                \"charges_construction\": this.form.customsDeclarationSectionFour.chargesAfterImportation !== undefined ? this.form.customsDeclarationSectionFour.chargesAfterImportation : \"\",\r\n                \"other_charges\": this.form.customsDeclarationSectionFour.otherCharges !== undefined ? this.form.customsDeclarationSectionFour.otherCharges : \"\",\r\n                \"customs_duties_taxes\": this.form.customsDeclarationSectionFour.customsDutiesTaxes !== undefined ? this.form.customsDeclarationSectionFour.customsDutiesTaxes : \"\",\r\n                \"transportIncluded\": this.form.customsDeclarationSectionThree.transportIncluded !== undefined ? this.form.customsDeclarationSectionThree.transportIncluded : \"\",\r\n                \"insuranceIncluded\": this.form.customsDeclarationSectionThree.insuranceIncluded !== undefined ? this.form.customsDeclarationSectionThree.insuranceIncluded : \"\",\r\n                \"invoice_currency\": currencyFullName !== undefined ? currencyFullName : \"\",\r\n                \"referenceNumber\": this.$route.query.referenceNumber !== undefined ? this.$route.query.referenceNumber : \"\",\r\n            }\r\n            console.log(declarationData)\r\n            return declarationData;\r\n        },\r\n        async generateBlanlValuationForPreSigning(){\r\n            console.log('Generating C75 Declaration...');\r\n            try {\r\n                console.log('Generating customs declaration...');\r\n                SweetAlertConnector.showLoadingAlert('Generating customs declaration...');\r\n                const response = await DatabaseConnector.generateBlankValuationForm();\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert('Valuation Form Generated Successfully!');\r\n                const fileURL = window.URL.createObjectURL(new Blob([response], { type: 'application/pdf' }));\r\n                const fileLink = document.createElement('a');\r\n                fileLink.href = fileURL;\r\n                const fileName = `Blank Valuation Form.pdf`;\r\n                fileLink.setAttribute('download', fileName);\r\n                document.body.appendChild(fileLink);\r\n\r\n                fileLink.click();\r\n                fileLink.remove();\r\n            } catch (error) {\r\n                SweetAlertConnector.showErrorAlert('Failed to generate document!');\r\n                console.error('Failed to generate the declaration:', error);\r\n            }\r\n        },\r\n        async generateC75Declaration() {\r\n            const declarationData = this.prepareDeclarationObject();\r\n            if(declarationData.declarantNameAddress === \"\" || declarationData.declarantNameAddress === undefined){\r\n                SweetAlertConnector.showErrorAlert('Please select a declarant!');\r\n                return;\r\n            }\r\n            console.log('Generating C75 Declaration...');\r\n            try {\r\n                console.log('Generating customs declaration...');\r\n                SweetAlertConnector.showLoadingAlert('Generating customs declaration...');\r\n                const response = await DatabaseConnector.generateCustomsDeclaration(declarationData);\r\n                const referenceNumber = this.$route.query.referenceNumber;\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert('C75 Generated Successfully!');\r\n                const fileURL = window.URL.createObjectURL(new Blob([response], { type: 'application/pdf' }));\r\n                const fileLink = document.createElement('a');\r\n                fileLink.href = fileURL;\r\n                const fileName = `Customs Declaration - ${referenceNumber}.pdf`;\r\n                fileLink.setAttribute('download', fileName);\r\n                document.body.appendChild(fileLink);\r\n\r\n                fileLink.click();\r\n                fileLink.remove();\r\n            } catch (error) {\r\n                SweetAlertConnector.showErrorAlert('Failed to save Entry Data!');\r\n                console.error('Failed to generate the declaration:', error);\r\n            }\r\n        },\r\n        async generatePreSignedValuation() {\r\n            const declarationData = this.prepareDeclarationObject();\r\n            console.log('Generating C75 Declaration...');\r\n            try {\r\n                console.log('Generating customs declaration...');\r\n                SweetAlertConnector.showLoadingAlert('Generating customs declaration...');\r\n                const response = await DatabaseConnector.generatePreSignedValuationForm(declarationData);\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert('C75 Generated Successfully!');\r\n                const fileURL = window.URL.createObjectURL(new Blob([response], { type: 'application/pdf' }));\r\n                const fileLink = document.createElement('a');\r\n                fileLink.href = fileURL;\r\n                const fileName = `Customs Declaration - ${this.entryNumber}.pdf`;\r\n                fileLink.setAttribute('download', fileName);\r\n                document.body.appendChild(fileLink);\r\n\r\n                fileLink.click();\r\n                fileLink.remove();\r\n            } catch (error) {\r\n                SweetAlertConnector.showErrorAlert('Failed to save Entry Data!');\r\n                console.error('Failed to generate the declaration:', error);\r\n            }\r\n        },\r\n        async generatePreSignedValuationVersionTwo(){\r\n            const declarationData = this.prepareDeclarationObject();\r\n            console.log('Generating C75 Declaration...');\r\n            try {\r\n                console.log('Generating customs declaration...');\r\n                SweetAlertConnector.showLoadingAlert('Generating customs declaration...');\r\n                const response = await DatabaseConnector.generatePreSignedValuationFormVersion2(declarationData);\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert('C75 Generated Successfully!');\r\n                const fileURL = window.URL.createObjectURL(new Blob([response], { type: 'application/pdf' }));\r\n                const fileLink = document.createElement('a');\r\n                fileLink.href = fileURL;\r\n                const fileName = `Customs Declaration - ${this.entryNumber}.pdf`;\r\n                fileLink.setAttribute('download', fileName);\r\n                document.body.appendChild(fileLink);\r\n\r\n                fileLink.click();\r\n                fileLink.remove();\r\n            } catch (error) {\r\n                SweetAlertConnector.showErrorAlert('Failed to save Entry Data!');\r\n                console.error('Failed to generate the declaration:', error);\r\n            }\r\n\r\n        },\r\n        async updateC75Declaration(){\r\n            console.log('Updating C75 Declaration...');\r\n            const declarationData = this.prepareDeclarationObject();\r\n            try {\r\n                SweetAlertConnector.showLoadingAlert('Saving Data...');\r\n                console.log('Updating customs declaration...');\r\n                await DatabaseConnector.updateCustomsDeclaration(this.entryId, declarationData);\r\n                SweetAlertConnector.closeCurrentAlert();\r\n                SweetAlertConnector.showSuccessAlert('All Data Saved successfully!');\r\n                console.log('Customs declaration updated successfully.');\r\n            } catch (error) {\r\n              SweetAlertConnector.showErrorAlert('Failed to save Entry Data!');\r\n                console.error('Failed to update the declaration:', error);\r\n            }\r\n        },\r\n        async fetchCustomsDeclarations(){\r\n            try {\r\n                console.log('Getting C75 Entry...');\r\n                const response = await DatabaseConnector.fetchCustomsDeclarations(this.entryId);\r\n                if(response.status === 206){\r\n                    console.log('No C75 Entry found.');\r\n                    this.newC75 = true;\r\n                    // this.form.customsDeclarationSectionThree.netPrice = response.data.invoiceTotal;\r\n                    // this.form.customsDeclarationSectionOne.invoiceNumber = response.data.invoiceNumbers;\r\n                    // this.form.customsDeclarationSectionThree.exchangeRate = response.data.rate_of_exchange;\r\n                    this.entryNumber = response.data.entry_number? response.data.entry_number : '';\r\n                    console.log('Entry Number:', this.entryNumber);\r\n                    return;\r\n                }\r\n                this.newC75 = false;\r\n                console.log('C75 Entry found.');\r\n                this.updateFields(response.data);\r\n            } catch (error) {\r\n                console.error('Failed to get the C75 Entry:', error);\r\n            }\r\n        },\r\n        syncData(){\r\n          this.form.customsDeclarationSectionOne.buyerId = parseInt(this.$route.query.buyerId);\r\n          this.form.customsDeclarationSectionOne.sellerId = parseInt(this.$route.query.sellerId);\r\n          this.form.customsDeclarationSectionOne.invoiceNumber = this.$route.query.invoiceNumber;\r\n          this.form.customsDeclarationSectionThree.netPrice = this.$route.query.invoiceTotal;\r\n          this.form.customsDeclarationSectionThree.invoiceCurrency = this.$route.query.currency;\r\n          this.form.customsDeclarationSectionThree.exchangeRate = this.$route.query.rateOfExchange;\r\n          this.form.customsDeclarationSectionThree.transport = this.$route.query.freight;\r\n          this.form.customsDeclarationSectionThree.insurance = this.$route.query.insurance;\r\n          this.form.customsDeclarationSectionOne.termsOfDelivery = this.$route.query.incoTerms ? this.$route.query.incoTerms : '';\r\n\r\n          Promise.all([DatabaseConnector.fetchShippers(), DatabaseConnector.fetchBuyers(), DatabaseConnector.fetchVessels(), DatabaseConnector.fetchDeclarants(), DatabaseConnector.fetchCountries()]).then(([exporters, importers, vessels, declarants, countries]) => { \r\n            this.form.customsDeclarationSectionOne.sellers = exporters;\r\n            this.form.customsDeclarationSectionOne.buyers = importers;\r\n            this.form.customsDeclarationSectionOne.vessels = vessels;\r\n            this.form.customsDeclarationSectionOne.declarants = declarants;\r\n            this.form.customsDeclarationSectionOne.countryList = countries;\r\n           });\r\n        },\r\n        convertTinyIntoString(tiny){\r\n            return tiny === 1 ? 'yes' : 'no';\r\n        },\r\n        updateFields(responseData){\r\n            console.log('Updating fields...');\r\n            this.form.customsDeclarationSectionOne.sellerNameAddress = responseData.seller_name_and_address;\r\n            this.form.customsDeclarationSectionOne.buyerNameAddress = responseData.buyer_name_address;\r\n            this.form.customsDeclarationSectionOne.declarantNameAddress = responseData.declarant_name_address;\r\n            this.form.customsDeclarationSectionOne.termsOfDelivery = responseData.terms_of_delivery;\r\n            this.form.customsDeclarationSectionOne.contractNumber = responseData.name_date_contract;\r\n            this.form.customsDeclarationSectionOne.invoiceNumber = responseData.number_date_invoice || this.$route.query.invoiceNumber || \"\";\r\n            this.form.customsDeclarationSectionOne.sellerId = responseData.seller_id;\r\n            this.form.customsDeclarationSectionOne.buyerId = responseData.buyer_id;\r\n            this.form.customsDeclarationSectionOne.declarantId = responseData.declarant_id;\r\n            this.form.customsDeclarationSectionTwo.relatedParties = this.convertTinyIntoString(responseData.related_parties_boolean);\r\n            this.form.customsDeclarationSectionTwo.influencePrice = this.convertTinyIntoString(responseData.influence_price_boolean);\r\n            this.form.customsDeclarationSectionTwo.transactionValueApproximate = this.convertTinyIntoString(responseData.transaction_value_approximate_boolean);\r\n            this.form.customsDeclarationSectionTwo.restrictions = this.convertTinyIntoString(responseData.restrictions_disposal_boolean);\r\n            this.form.customsDeclarationSectionTwo.conditions = this.convertTinyIntoString(responseData.sale_price_condition_boolean);\r\n            this.form.customsDeclarationSectionTwo.royalties = this.convertTinyIntoString(responseData.royalties_boolean);\r\n            this.form.customsDeclarationSectionTwo.resale_disposal_boolean = this.convertTinyIntoString(responseData.resale_disposal_boolean);\r\n            this.form.customsDeclarationSectionTwo.date_signed = responseData.date_signed;\r\n            this.form.customsDeclarationSectionTwo.status_of_signatory = responseData.status_of_signatory;\r\n            this.form.customsDeclarationSectionTwo.signatory_phone_number = responseData.signatory_phone_number;\r\n            this.form.customsDeclarationSectionTwo.signatory_name = responseData.signatory_name;\r\n            this.form.customsDeclarationSectionThree.netPrice = responseData.invoiceTotal || this.$route.query.invoiceTotal || 0.0;\r\n            this.form.customsDeclarationSectionThree.indirectPayment = responseData.indirect_payment; // To Include\r\n            this.form.customsDeclarationSectionThree.exchangeRate = responseData.rate_of_exchange || this.$route.query.rateOfExchange || 1.0;\r\n            this.form.customsDeclarationSectionThree.commissions = responseData.costs_commissions;\r\n            this.form.customsDeclarationSectionThree.brokerage = responseData.costs_brokerage;\r\n            this.form.customsDeclarationSectionThree.containersPacking = responseData.costs_containers_packing;\r\n            this.form.customsDeclarationSectionThree.materials = responseData.goods_free_of_charge_materials;\r\n            this.form.customsDeclarationSectionThree.tools = responseData.goods_free_of_charge_tools;\r\n            this.form.customsDeclarationSectionThree.materialsConsumed = responseData.goods_free_of_charge_materials_consumed;\r\n            this.form.customsDeclarationSectionThree.engineering = responseData.goods_engineering_development;\r\n            this.form.customsDeclarationSectionThree.royalties = responseData.royalties_license_fee;\r\n\r\n            this.form.customsDeclarationSectionThree.proceedsResale = responseData.procees_resale_disposal;\r\n            this.form.customsDeclarationSectionThree.transport = responseData.cost_delivery_transport;\r\n            this.form.customsDeclarationSectionThree.loadingHandling = responseData.cost_delivery_loading;\r\n            this.form.customsDeclarationSectionThree.insurance = responseData.cost_delivery_insurance;\r\n            this.form.customsDeclarationSectionFour.costAfterArrival = responseData.cost_transport_after_arrival;\r\n            this.form.customsDeclarationSectionFour.chargesAfterImportation = responseData.charges_construction;\r\n            this.form.customsDeclarationSectionFour.otherCharges = responseData.other_charges;\r\n\r\n            this.form.customsDeclarationSectionFour.customsDutiesTaxes = responseData.customs_duties_taxes;\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.my-form-container {\r\n  text-align: left;\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"sellerNameAddress\"><strong>1. Name and Address of Seller (Block Letters)</strong></label>\r\n          <select class=\"form-select\" v-model=\"localData.sellerId\" @change=\"updateField('sellerNameAddress', $event.target.value)\">\r\n            <option value=\"\" disabled>Select a Seller</option>\r\n            <option v-for=\"(seller, index) in localData.sellers\" :key=\"index\" :value=\"seller.id\">{{ seller.name }}</option>\r\n          </select>\r\n          <!-- <v-select\r\n            v-model=\"localData.sellerId\"\r\n            :options=\"localData.sellers\"\r\n            label=\"name\"\r\n            :searchable=\"true\"\r\n            :reduce=\"seller => seller.id\"\r\n            :filterable=\"true\"\r\n            placeholder=\"Select a Seller\"\r\n          ></v-select> -->\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            id=\"sellerNameAddress\"\r\n            rows=\"4\"\r\n            @input=\"updateField('sellerNameAddress', $event.target.value)\"\r\n            required\r\n            readonly\r\n            :value=\"selectedSeller\"\r\n          ></textarea>\r\n        </div>\"\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\"> \r\n          <label for=\"buyerNameAddress\"><strong>2(a) Name and Address of Buyer (Block Letters)</strong></label>\r\n          <select class=\"form-select\" v-model=\"localData.buyerId\" @change=\"updateField('buyerNameAddress', $event.target.value)\">\r\n            <option value=\"\" disabled>Select a Buyer</option>\r\n            <option v-for=\"(buyer, index) in localData.buyers\" :key=\"index\" :value=\"buyer.id\">{{ buyer.name }}</option>\r\n          </select>\r\n          <!-- <v-select\r\n            v-model=\"localData.buyerId\"\r\n            :options=\"localData.buyers\"\r\n            label=\"name\"\r\n            :searchable=\"true\"\r\n            :reduce=\"buyer => buyer.id\"\r\n            :filterable=\"true\"\r\n            placeholder=\"Select a Buyer\"\r\n          ></v-select> -->\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            id=\"buyerNameAddress\"\r\n            rows=\"4\"\r\n            @input=\"updateField('buyerNameAddress', $event.target.value)\"\r\n            required\r\n            readonly\r\n            :value=\"selectedBuyer\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"declarantNameAddress\"><strong>2(b) Name and Address of Declarant (Block Letters)</strong></label>\r\n          <select class=\"form-select\" v-model=\"localData.declarantId\" @change=\"updateField('declarantNameAddress', $event.target.value)\">\r\n            <option value=\"\" disabled>Select a Declarant</option>\r\n            <option v-for=\"(declarant, index) in localData.declarants\" :key=\"index\" :value=\"declarant.id\">{{ declarant.name }}</option>\r\n          </select>\r\n          <!-- <v-select\r\n            v-model=\"localData.declarantId\"\r\n            :options=\"localData.declarants\"\r\n            label=\"name\"\r\n            :searchable=\"true\"\r\n            :reduce=\"declarant => declarant.id\"\r\n            :filterable=\"true\"\r\n            placeholder=\"Select a Declarant\"\r\n            @input=\"updateField('declarantNameAddress', $event.target.value)\"\r\n          ></v-select> -->\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            id=\"declarantNameAddress\"\r\n            rows=\"4\"\r\n            @input=\"updateField('declarantNameAddress', $event.target.value)\"\r\n            required\r\n            readonly\r\n            :value=\"selectedDeclarant\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"invoiceNumber\" class=\"form-label\"><strong>4. Number and Date of Invoice</strong></label>\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"invoiceNumber\"\r\n            rows=\"6\"\r\n            placeholder=\"e.g., 202313 2024/10/20\"\r\n            v-model=\"localData.invoiceNumber\"\r\n            @input=\"updateField('invoiceNumber', $event.target.value)\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <!-- Section 3: Terms of Delivery (INCOTERM) -->\r\n        <div class=\"form-group\">\r\n          <label for=\"termsOfDelivery\" class=\"form-label\"><strong>3. Terms of Delivery (INCOTERM)</strong></label>\r\n          <select class=\"form-select\" v-model=\"localData.termsOfDelivery\" @change=\"updateField('termsOfDelivery', $event.target.value)\">\r\n            <option value=\"\" disabled>Select an Incoterm</option>\r\n            <option v-for=\"(incoterm, index) in incoterms\" :key=\"index\" :value=\"incoterm.code\">{{ incoterm.code }} - {{ incoterm.name }}</option>\r\n          </select>\r\n          <!-- <v-select\r\n            v-model=\"localData.termsOfDelivery\"\r\n            :options=\"incoterms\"\r\n            label=\"name\"\r\n            :searchable=\"true\"\r\n            :reduce=\"incoterm => incoterm.code\"\r\n            :filterable=\"true\"\r\n            placeholder=\"Select an Incoterm\"\r\n          ></v-select> -->\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"invoiceNumber\" class=\"form-label\"><strong>4. Number and Date of Invoice</strong></label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"invoiceNumber\"\r\n            placeholder=\"e.g., 202313 2024/10/20\"\r\n            v-model=\"localData.invoiceNumber\"\r\n            @input=\"updateField('invoiceNumber', $event.target.value)\"\r\n            required\r\n          >\r\n        </div>\r\n      </div> -->\r\n      <div class=\"col-md-6\">\r\n        <!-- Section 5: Number and Date of Contract -->\r\n        <div class=\"form-group\">\r\n          <label for=\"contractNumber\" class=\"form-label\"><strong>5. Number and Date of Contract</strong></label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"contractNumber\"\r\n            placeholder=\"e.g., 123456 2024/10/22\"\r\n            v-model=\"localData.contractNumber\"\r\n            @input=\"updateField('contractNumber', $event.target.value)\"\r\n            required\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport * as DatabaseConnector from '@/composables/DatabaseConnector';\r\nimport * as IncoTerms from '@/composables/IncoTerms';\r\nexport default {\r\n  props: ['customsDeclarationSectionOne', 'buyerIdProp'],\r\n  name: 'CustomsDeclarationSectionOne',\r\n  mounted() {\r\n    // this.getConfigurations();\r\n    this.incoterms = IncoTerms.getIncoTermsList();\r\n  },\r\n  data() {\r\n    return {\r\n      localData: this.customsDeclarationSectionOne,\r\n      myBuyerId: this.buyerIdProp,\r\n      incoterms: [],\r\n    };\r\n  },\r\n  computed: {\r\n    selectedSeller() {\r\n      const selectedSeller = this.localData.sellers.find(seller => seller.id === this.localData.sellerId);\r\n      const sellerNameAddress = selectedSeller ? `${selectedSeller.name} \\n ${selectedSeller.address}` : '';\r\n      return sellerNameAddress;\r\n    },\r\n    selectedBuyer() {\r\n      const selectedBuyer = this.localData.buyers.find(buyer => buyer.id === this.localData.buyerId);\r\n      return selectedBuyer ? `${selectedBuyer.name} \\n ${selectedBuyer.address}` : '';\r\n    },\r\n    selectedDeclarant() {\r\n      const selectedDeclarant = this.localData.declarants.find(declarant => declarant.id === this.localData.declarantId);\r\n      return selectedDeclarant ? `${selectedDeclarant.name} \\n ${selectedDeclarant.address}` : '';\r\n    },\r\n    declarantStatus() {\r\n      const selectedDeclarant = this.declarants.find(declarant => declarant.id === this.localData.declarantId);\r\n      return selectedDeclarant ? selectedDeclarant.status : '';\r\n    }\r\n  },\r\n  methods: {\r\n    updateField(field, value) {\r\n      this.localData[field] = value;\r\n      this.$emit('update-section-one', this.localData);\r\n    },\r\n\r\n    async getConfigurations() {\r\n      console.log('Fetching sellers, buyers, and declarants');\r\n        Promise.all([DatabaseConnector.fetchShippers(), DatabaseConnector.fetchBuyers(), DatabaseConnector.fetchVessels(), DatabaseConnector.fetchDeclarants(), DatabaseConnector.fetchCountries()]).then(([exporters, importers, vessels, declarants, countries]) => { \r\n          this.localData.sellers = exporters;\r\n            this.localData.buyers = importers;\r\n            console.log('Buyers:', importers);\r\n            this.localData.vessels = vessels;\r\n            this.localData.declarants = declarants;\r\n            this.countryList = countries;\r\n        });\r\n    }\r\n  },\r\n  watch: {\r\n    customsDeclarationSectionOne: {\r\n      deep: true,\r\n      handler(newVal) {\r\n        this.localData = {...newVal};\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check label {\r\n  margin-right: 1rem;\r\n}\r\n</style>\r\n","import { render } from \"./CustomsDeclarationSectionOne.vue?vue&type=template&id=1fb06b50&scoped=true\"\nimport script from \"./CustomsDeclarationSectionOne.vue?vue&type=script&lang=js\"\nexport * from \"./CustomsDeclarationSectionOne.vue?vue&type=script&lang=js\"\n\nimport \"./CustomsDeclarationSectionOne.vue?vue&type=style&index=0&id=1fb06b50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1fb06b50\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <!-- Section 7 -->\r\n          <label><strong>7 (a) Are the buyer and seller RELATED?</strong></label>\r\n          <div class=\"form-check\">\r\n            <input type=\"radio\" id=\"related-yes\" value=\"yes\" v-model=\"localData.relatedParties\" @change=\"updateSection\" />\r\n            <label for=\"related-yes\">YES</label>\r\n            <input type=\"radio\" id=\"related-no\" value=\"no\" v-model=\"localData.relatedParties\" @change=\"updateSection\" />\r\n            <label for=\"related-no\">NO</label>\r\n          </div>\r\n          <div v-if=\"localData.relatedParties === 'yes'\">\r\n            <textarea class=\"form-control\" id=\"related-notes\" placeholder=\"If 'YES', give details.\" v-model=\"localData.relatedDetails\" rows=\"3\" @input=\"updateSection\"></textarea>\r\n          </div>\r\n          <label for=\"influencePrice\"><strong>7 (b) Did the relationship INFLUENCE the price of the imported goods?</strong></label>\r\n          <div class=\"form-check\">\r\n            <input type=\"radio\" id=\"influence-price-yes\" value=\"yes\" v-model=\"localData.influencePrice\" @change=\"updateSection\" />\r\n            <label for=\"influence-price-yes\">YES</label>\r\n            <input type=\"radio\" id=\"influence-price-no\" value=\"no\" v-model=\"localData.influencePrice\" @change=\"updateSection\" />\r\n            <label for=\"influence-price-no\">NO</label>\r\n          </div>\r\n          <div v-if=\"localData.influencePrice === 'yes'\">\r\n            <textarea class=\"form-control\" id=\"influence-price-details\" placeholder=\"If 'YES', give details.\" v-model=\"localData.influencePriceDetails\" rows=\"3\" @input=\"updateSection\"></textarea>\r\n          </div>\r\n          <label for=\"transactionValueApproximate\"><strong>7 (c) Does the transaction value of the imported goods closely approximate to a value mentioned in Paragraph 3(2)(b)?</strong></label>\r\n          <div class=\"form-check\">\r\n            <input type=\"radio\" id=\"transaction-value-yes\" value=\"yes\" v-model=\"localData.transactionValueApproximate\" @change=\"updateSection\" />\r\n            <label for=\"transaction-value-yes\">YES</label>\r\n            <input type=\"radio\" id=\"transaction-value-no\" value=\"no\" v-model=\"localData.transactionValueApproximate\" @change=\"updateSection\" />\r\n            <label for=\"transaction-value-no\">NO</label>\r\n          </div>\r\n          <div v-if=\"localData.transactionValueApproximate === 'yes'\">\r\n            <textarea class=\"form-control\" id=\"transaction-value-details\" placeholder=\"If 'YES', give details.\" v-model=\"localData.transactionValueDetails\" rows=\"3\" @input=\"updateSection\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <!-- Section 8 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"restrictions\"><strong>8 (a) Are there any RESTRICTIONS to the disposition or use of the goods?</strong></label>\r\n          <div class=\"form-check\">\r\n            <input type=\"radio\" id=\"restrictions-yes\" value=\"yes\" v-model=\"localData.restrictions\" @change=\"updateSection\" />\r\n            <label for=\"restrictions-yes\">YES</label>\r\n            <input type=\"radio\" id=\"restrictions-no\" value=\"no\" v-model=\"localData.restrictions\" @change=\"updateSection\" />\r\n            <label for=\"restrictions-no\">NO</label>\r\n          </div>\r\n          <div v-if=\"localData.restrictions === 'yes'\">\r\n            <textarea class=\"form-control\" id=\"restrictions-details\" placeholder=\"Specify the nature of the restrictions.\" v-model=\"localData.restrictionsDetails\" rows=\"3\" @input=\"updateSection\"></textarea>\r\n          </div>\r\n          <label for=\"conditions\"><strong>8 (b) Is the sale or price subject to some CONDITION or CONSIDERATION?</strong></label>\r\n          <div class=\"form-check\">\r\n            <input type=\"radio\" id=\"conditions-yes\" value=\"yes\" v-model=\"localData.conditions\" @change=\"updateSection\" />\r\n            <label for=\"conditions-yes\">YES</label>\r\n            <input type=\"radio\" id=\"conditions-no\" value=\"no\" v-model=\"localData.conditions\" @change=\"updateSection\" />\r\n            <label for=\"conditions-no\">NO</label>\r\n          </div>\r\n          <div v-if=\"localData.conditions === 'yes'\">\r\n            <textarea class=\"form-control\" id=\"conditions-details\" placeholder=\"Specify the nature of the conditions or considerations.\" v-model=\"localData.conditionsDetails\" rows=\"3\" @input=\"updateSection\"></textarea>\r\n          </div>\r\n          <!-- Section 9 -->\r\n          <label for=\"royalties\"><strong>9 (a) Are any ROYALTIES AND LICENCE FEES related to the imported goods payable?</strong></label>\r\n          <div class=\"form-check\">\r\n            <input type=\"radio\" id=\"royalties-yes\" value=\"yes\" v-model=\"localData.royalties\" @change=\"updateSection\" />\r\n            <label for=\"royalties-yes\">YES</label>\r\n            <input type=\"radio\" id=\"royalties-no\" value=\"no\" v-model=\"localData.royalties\" @change=\"updateSection\" />\r\n            <label for=\"royalties-no\">NO</label>\r\n          </div>\r\n          <div v-if=\"localData.royalties === 'yes'\">\r\n            <textarea class=\"form-control\" id=\"royalties-details\" placeholder=\"Specify conditions and, if possible, amounts.\" v-model=\"localData.royaltiesDetails\" rows=\"3\" @input=\"updateSection\"></textarea>\r\n          </div>\r\n          <label for=\"royalties\"><strong>9 (b) Is the sale subject to an arrangement under which part of the proceeds of any subsequent RESALE, DISPOSAL or USE accures directy or indirectly to the seller?</strong></label>\r\n          <div class=\"form-check\">\r\n            <input type=\"radio\" id=\"resale-yes\" value=\"yes\" v-model=\"localData.resale_disposal_boolean\" @change=\"updateSection\" />\r\n            <label for=\"resale-yes\">YES</label>\r\n            <input type=\"radio\" id=\"resale-no\" value=\"no\" v-model=\"localData.resale_disposal_boolean\" @change=\"updateSection\" />\r\n            <label for=\"resale-no\">NO</label>\r\n          </div>\r\n          <div v-if=\"localData.resale_disposal_boolean === 'yes'\">\r\n            <textarea class=\"form-control\" id=\"resale-details\" placeholder=\"Please Specify conditions\" v-model=\"localData.resaleDetails\" rows=\"3\" @input=\"updateSection\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"signatory_name\"><strong>Name of Signatory</strong></label>\r\n          <input type=\"text\" class=\"form-control\" id=\"signatory_name\" v-model=\"localData.signatory_name\" @input=\"updateSection\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"date_signed\"><strong>Date Signed</strong></label>\r\n          <input type=\"date\" class=\"form-control\" id=\"date_signed\" v-model=\"localData.date_signed\" @input=\"updateSection\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"status_of_signatory\"><strong>Status of Signatory</strong></label>\r\n          <input type=\"text\" class=\"form-control\" id=\"status_of_signatory\" v-model=\"localData.status_of_signatory\" @input=\"updateSection\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"signatory_phone_number\"><strong>Signatory Phone Number</strong></label>\r\n          <input type=\"text\" class=\"form-control\" id=\"signatory_phone_number\" v-model=\"localData.signatory_phone_number\" @input=\"updateSection\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['customsDeclarationSectionTwo', 'customsDeclarationSectionOne'],\r\n  name: 'CustomsDeclarationSectionTwo',\r\n  data() {\r\n    return {\r\n      localData: this.customsDeclarationSectionTwo\r\n    };\r\n  },\r\n  methods: {\r\n    updateSection() {\r\n      this.$emit('update-section-two', this.localData);\r\n      console.log(this.localData);\r\n    }\r\n  },\r\n  watch: {\r\n    customsDeclarationSectionOne: {\r\n      deep: true,\r\n      handler(newVal) {\r\n        const declarantId = newVal.declarantId;\r\n        const declarant = newVal.declarants?.find(declarant => declarant.id === declarantId);\r\n        console.log(declarant);\r\n        this.localData.status_of_signatory = declarant?.status;\r\n        this.localData.signatory_name = declarant?.name;\r\n        this.localData.signatory_phone_number = declarant?.phoneContact;\r\n      }\r\n      \r\n    },\r\n    customsDeclarationSectionTwo: {\r\n      deep: true,\r\n      handler(newVal) {\r\n        this.localData = { ...newVal };\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.customs-declaration-section-two {\r\n  /* Your styles here */\r\n}\r\n.form-group {\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check label {\r\n  margin-right: 1rem;\r\n}\r\n</style>\r\n","import { render } from \"./CustomsDeclarationSectionTwo.vue?vue&type=template&id=54aa40c3&scoped=true\"\nimport script from \"./CustomsDeclarationSectionTwo.vue?vue&type=script&lang=js\"\nexport * from \"./CustomsDeclarationSectionTwo.vue?vue&type=script&lang=js\"\n\nimport \"./CustomsDeclarationSectionTwo.vue?vue&type=style&index=0&id=54aa40c3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-54aa40c3\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"netPrice\"><strong>11(a) Net price in CURRENCY OF INVOICE</strong></label>\r\n          <input type=\"number\" class=\"form-control\" id=\"netPrice\" v-model=\"localData.netPrice\" @input=\"updateSection\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"invoiceCurrency\" class=\"form-label\"><strong>Invoice Currency</strong></label>\r\n          <select class=\"form-select\" v-model=\"localData.invoiceCurrency\" @change=\"updateField('invoiceCurrency', $event.target.value)\">\r\n            <option value=\"\" disabled>Select a Currency</option>\r\n            <option v-for=\"currency in currencies\" :key=\"currency.code\" :value=\"currency.code\">{{ currency.code }} - {{ currency.name }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"exchangeRate\"><strong>Rate of exchange</strong></label>\r\n          <input type=\"number\" class=\"form-control\" id=\"exchangeRate\" v-model=\"localData.exchangeRate\" @input=\"updateSection\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <!-- A: Basics of calculation -->\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"indirectPayments\"><strong>11(b) Indirect payments - see box 8 (b)</strong></label>\r\n          <input type=\"number\" class=\"form-control\" id=\"indirectPayments\" v-model=\"localData.indirectPayments\" @input=\"updateSection\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"totalNationalCurrency\"><strong>12. TOTAL A in National Currency (TTS)</strong></label>\r\n          <input type=\"number\" class=\"form-control\" readonly id=\"totalNationalCurrency\" v-model=\"localData.totalNationalCurrency\" @input=\"updateSection\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n\r\n    <!-- B: Additions -->\r\n    <div class=\"row form-group\">\r\n      \r\n        <label for=\"costsIncurred\"><strong>13. Costs incurred by the buyer</strong></label>\r\n        <div class=\"col-md-4\">\r\n          <input type=\"number\" class=\"form-control mb-2\" id=\"commissions\" v-model=\"localData.commissions\" placeholder=\"commissions, except buying commissions\" @input=\"updateSection\" />\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <input type=\"number\" class=\"form-control mb-2\" id=\"brokerage\" v-model=\"localData.brokerage\" placeholder=\"brokerage\" @input=\"updateSection\" />\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <input type=\"number\" class=\"form-control\" id=\"containersPacking\" v-model=\"localData.containersPacking\" placeholder=\"containers and packing\" @input=\"updateSection\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row \">\r\n      <label for=\"goodsServices\"><strong>14. Goods and services supplied by the buyer</strong></label>\r\n      <div class=\"col-md-6 \">\r\n        <input type=\"number\" class=\"form-control mb-2\" id=\"materials\" v-model=\"localData.materials\" placeholder=\"materials, component, parts incorporated in the good\" @input=\"updateSection\" />\r\n        <input type=\"number\" class=\"form-control mb-2\" id=\"tools\" v-model=\"localData.tools\" placeholder=\"tools, dies, moulds used in the production\" @input=\"updateSection\" />\r\n      </div>\r\n      <div class=\"col-md-6 form-group\">\r\n        <input type=\"number\" class=\"form-control mb-2\" id=\"materialsConsumed\" v-model=\"localData.materialsConsumed\" placeholder=\"materials consumed in the production\" @input=\"updateSection\" />\r\n        <input type=\"number\" class=\"form-control\" id=\"engineering\" v-model=\"localData.engineering\" placeholder=\"engineering, development, artwork, design work\" @input=\"updateSection\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row form-group\">\r\n      <div class=\"col-md-6\">\r\n        <label for=\"royalties\"><strong>15. Royalties and licence fees</strong></label>\r\n        <input type=\"number\" class=\"form-control\" id=\"royalties\" v-model=\"localData.royalties\" @input=\"updateSection\" />\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"proceedsResale\"><strong>16. Proceeds of any subsequent resale, disposal or use accruing to the seller</strong></label>\r\n        <input type=\"number\" class=\"form-control\" id=\"proceedsResale\" v-model=\"localData.proceedsResale\" @input=\"updateSection\" />\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"row\">\r\n      <label for=\"costOfDelivery\"><strong>17. Cost of delivery to Trinidad and Tobago</strong></label>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"transport\"><strong>Transport</strong></label>\r\n          <input type=\"number\" class=\"form-control mb-2\" id=\"transport\" :disabled=\"localData.transportIncluded\" v-model=\"localData.transport\" placeholder=\"transport\" @input=\"updateSection\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"includeTransportInTotal\" @change=\"handleTransportCheckboxChange\">\r\n            <label class=\"form-check-label\" for=\"includeTransportInTotal\">Transportation cost included in the invoice total</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"loadingHandling\"><strong>Loading and handling charges</strong></label>\r\n          <input type=\"number\" class=\"form-control mb-2\" id=\"loadingHandling\" v-model=\"localData.loadingHandling\" placeholder=\"loading and handling charges\" @input=\"updateSection\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label for=\"insurance\"><strong>Insurance</strong></label>\r\n          <input type=\"number\" class=\"form-control\" id=\"insurance\" :disabled=\"localData.insuranceIncluded\" v-model=\"localData.insurance\" placeholder=\"insurance\" @input=\"updateSection\" />\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"includeInsuranceInTotal\" @change=\"handleInsuranceCheckboxChange\">\r\n            <label class=\"form-check-label\" for=\"includeInsuranceInTotal\">Insurance cost included in the invoice total</label>\r\n          </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"totalB\"><strong>18. TOTAL B</strong></label>\r\n          <input type=\"number\" class=\"form-control\" readonly id=\"totalB\" v-model=\"localData.totalB\" @input=\"updateSection\" />\r\n        </div>\r\n      </div> \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['customsDeclarationSectionThree'],\r\n  name: 'CustomsDeclarationSectionThree',\r\n  data() {\r\n    return {\r\n      localData: this.customsDeclarationSectionThree,\r\n      currencies : [\r\n        { code: \"USD\", name: \"United States Dollar\" },\r\n        { code: \"EUR\", name: \"Euro\" },\r\n        { code: \"JPY\", name: \"Japanese Yen\" },\r\n        { code: \"GBP\", name: \"British Pound Sterling\" },\r\n        { code: \"AUD\", name: \"Australian Dollar\" },\r\n        { code: \"CAD\", name: \"Canadian Dollar\" },\r\n        { code: \"CHF\", name: \"Swiss Franc\" },\r\n        { code: \"CNY\", name: \"Chinese Yuan\" },\r\n        { code: \"SEK\", name: \"Swedish Krona\" },\r\n        { code: \"NZD\", name: \"New Zealand Dollar\" },\r\n        { code: \"MXN\", name: \"Mexican Peso\" },\r\n        { code: \"SGD\", name: \"Singapore Dollar\" },\r\n        { code: \"HKD\", name: \"Hong Kong Dollar\" },\r\n        { code: \"NOK\", name: \"Norwegian Krone\" },\r\n        { code: \"KRW\", name: \"South Korean Won\" },\r\n        { code: \"TRY\", name: \"Turkish Lira\" },\r\n        { code: \"INR\", name: \"Indian Rupee\" },\r\n        { code: \"RUB\", name: \"Russian Ruble\" },\r\n        { code: \"BRL\", name: \"Brazilian Real\" },\r\n        { code: \"ZAR\", name: \"South African Rand\" },\r\n        { code: \"TTD\", name: \"Trinidad and Tobago Dollar\" }\r\n    ]\r\n    };\r\n  },\r\n  methods: {\r\n    handleTransportCheckboxChange(event) {\r\n      this.localData.transportIncluded = event.target.checked;\r\n      if(this.localData.transportIncluded)\r\n        this.localData.transport = 0;\r\n      this.updateSection();  // Call your update method if necessary\r\n    },\r\n    handleInsuranceCheckboxChange(event) {\r\n      this.localData.insuranceIncluded = event.target.checked;\r\n      if(this.localData.insuranceIncluded)\r\n        this.localData.insurance = 0;\r\n      this.updateSection();  // Call your update method if necessary\r\n    },\r\n    updateField(field, value) {\r\n      this.localData[field] = value;\r\n      this.updateSection();  // Call your update method if necessary\r\n    },\r\n    updateSection() {\r\n      this.$emit('update-section-three', this.localData);\r\n      console.log(this.localData);\r\n    }\r\n  },\r\n  watch: {\r\n    customsDeclarationSectionThree: {\r\n      deep: true,\r\n      handler(newVal) {\r\n        console.log(this.localData.transportIncluded, newVal.transportIncluded)\r\n        \r\n        this.localData = {...newVal};\r\n        let totalA = (parseFloat(this.localData.netPrice) + parseFloat(this.localData.indirectPayments)) * parseFloat(this.localData.exchangeRate);\r\n        let totalB = parseFloat(this.localData.transport) + parseFloat(this.localData.loadingHandling) + parseFloat(this.localData.insurance);\r\n        console.log(totalA, totalB);\r\n        this.localData.totalNationalCurrency = parseFloat(totalA).toFixed(2);\r\n        this.localData.totalB = parseFloat(totalB).toFixed(2);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.customs-declaration-section-two {\r\n  /* Your styles here */\r\n}\r\n.form-group {\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check label {\r\n  margin-right: 1rem;\r\n}\r\n</style>\r\n","import { render } from \"./CustomsDeclarationSectionThree.vue?vue&type=template&id=ba557e10&scoped=true\"\nimport script from \"./CustomsDeclarationSectionThree.vue?vue&type=script&lang=js\"\nexport * from \"./CustomsDeclarationSectionThree.vue?vue&type=script&lang=js\"\n\nimport \"./CustomsDeclarationSectionThree.vue?vue&type=style&index=0&id=ba557e10&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ba557e10\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <!-- C. Deductions -->\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"costAfterArrival\"\r\n                        ><strong\r\n                            >19. Cost of transport after arrival at place of introduction on importation</strong\r\n                        ></label\r\n                    >\r\n                    <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"costAfterArrival\"\r\n                        v-model=\"localData.costAfterArrival\"\r\n                        @input=\"updateSection\"\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"chargesAfterImportation\"\r\n                        ><strong\r\n                            >20. Charges for construction, erection, assembly, maintenance or technical assistance\r\n                            undertaken after importation</strong\r\n                        ></label\r\n                    >\r\n                    <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"chargesAfterImportation\"\r\n                        v-model=\"localData.chargesAfterImportation\"\r\n                        @input=\"updateSection\"\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"otherCharges\"><strong>21. Other charges (specify)</strong></label>\r\n                    <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"otherCharges\"\r\n                        v-model=\"localData.otherCharges\"\r\n                        @input=\"updateSection\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"customsDutiesTaxes\"\r\n                        ><strong\r\n                            >22. Customs duties and taxes payable in Trinidad and Tobago by reason of the importation or\r\n                            sale of the goods</strong\r\n                        ></label\r\n                    >\r\n                    <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"customsDutiesTaxes\"\r\n                        v-model=\"localData.customsDutiesTaxes\"\r\n                        @input=\"updateSection\"\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"totalC\"><strong>23. TOTAL C</strong></label>\r\n                    <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"totalC\"\r\n                        v-model=\"localData.totalC\"\r\n                        @input=\"updateSection\"\r\n                    />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"valueDeclared\"><strong>24. VALUE DECLARED (A + B - C)</strong></label>\r\n                    <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"valueDeclared\"\r\n                        v-model=\"localData.valueDeclared\"\r\n                        @input=\"updateSection\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- NOTES to Box 10 -->\r\n        <div class=\"mb-3\">\r\n            <p><strong>NOTES to Box 10</strong></p>\r\n            <p>Declaration may be made by:</p>\r\n            <ul>\r\n                <li>(a) the actual importer if an individual;</li>\r\n                <li>(b) a partner in the case of partnership;</li>\r\n                <li>(c) a director or the secretary in the case of an incorporated Company</li>\r\n                <li>(d) any employee duly authorised in writing by one of the aforementioned persons.</li>\r\n            </ul>\r\n            <p>\r\n                (*): Where amounts are payable in FOREIGN CURRENCY, indicate in this section the amount in foreign\r\n                currency and the rate of exchange by reference to each relevant element and item.\r\n            </p>\r\n\r\n            <label for=\"foreignCurrency\" class=\"form-label\">Reference</label>\r\n            <input\r\n                type=\"text\"\r\n                class=\"form-control mb-2\"\r\n                id=\"foreignCurrency\"\r\n                placeholder=\"11(a)\"\r\n                v-model=\"localData.foreignCurrency\"\r\n                @input=\"updateSection\"\r\n            />\r\n\r\n            <!-- <label for=\"amountForeignCurrency\" class=\"form-label\">Amount</label>\r\n      <input type=\"number\" class=\"form-control mb-2\" id=\"amountForeignCurrency\" placeholder=\"Enter amount in foreign currency\" v-model=\"localData.amountForeignCurrency\" @input=\"updateSection\"> -->\r\n\r\n            <!-- <label for=\"rateOfExchange\" class=\"form-label\">Rate of Exchange</label>\r\n      <input type=\"number\" class=\"form-control\" id=\"rateOfExchange\" placeholder=\"Enter rate of exchange\" v-model=\"localData.rateOfExchange\" @input=\"updateSection\"> -->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: [\"customsDeclarationSectionFour\", \"customsDeclarationSectionThree\"],\r\n    name: \"CustomsDeclarationSectionFour\",\r\n    data() {\r\n        return {\r\n            localData: this.customsDeclarationSectionFour,\r\n        };\r\n    },\r\n    methods: {\r\n        updateSection() {\r\n            this.$emit(\"update-section-four\", this.localData);\r\n        },\r\n    },\r\n    watch: {\r\n        customsDeclarationSectionThree: {\r\n            deep: true,\r\n            handler(newVal) {\r\n                let totalA =\r\n                    (parseFloat(newVal.netPrice) + parseFloat(newVal.indirectPayments)) *\r\n                    parseFloat(newVal.exchangeRate);\r\n                let totalB =\r\n                    parseFloat(newVal.transport) + parseFloat(newVal.loadingHandling) + parseFloat(newVal.insurance);\r\n                let valueDeclared = totalA + parseFloat(totalB) - parseFloat(this.localData.totalC);\r\n                this.localData.valueDeclared = parseFloat(valueDeclared).toFixed(2);\r\n            },\r\n        },\r\n        customsDeclarationSectionFour: {\r\n            deep: true,\r\n            handler(newVal) {\r\n                this.localData = { ...newVal };\r\n                let totalA =\r\n                    (parseFloat(this.customsDeclarationSectionThree.netPrice) +\r\n                        parseFloat(this.customsDeclarationSectionThree.indirectPayments)) *\r\n                    parseFloat(this.customsDeclarationSectionThree.exchangeRate);\r\n                let totalB =\r\n                    parseFloat(this.customsDeclarationSectionThree.transport) +\r\n                    parseFloat(this.customsDeclarationSectionThree.loadingHandling) +\r\n                    parseFloat(this.customsDeclarationSectionThree.insurance);\r\n                let totalC =\r\n                    parseFloat(this.localData.costAfterArrival) +\r\n                    parseFloat(this.localData.chargesAfterImportation) +\r\n                    parseFloat(this.localData.otherCharges) +\r\n                    parseFloat(this.localData.customsDutiesTaxes);\r\n                this.localData.totalC = parseFloat(totalC).toFixed(2);\r\n                let totalValueDeclared = totalA + totalB - parseFloat(totalC).toFixed(2);\r\n                this.localData.valueDeclared = totalValueDeclared.toFixed(2);\r\n            },\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n    margin-bottom: 1rem;\r\n}\r\n.form-check {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n.form-check label {\r\n    margin-right: 1rem;\r\n}\r\n</style>\r\n","import { render } from \"./CustomsDeclarationSectionFour.vue?vue&type=template&id=2e2fd940&scoped=true\"\nimport script from \"./CustomsDeclarationSectionFour.vue?vue&type=script&lang=js\"\nexport * from \"./CustomsDeclarationSectionFour.vue?vue&type=script&lang=js\"\n\nimport \"./CustomsDeclarationSectionFour.vue?vue&type=style&index=0&id=2e2fd940&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2e2fd940\"]])\n\nexport default __exports__","import { render } from \"./CustomsDeclarationForm.vue?vue&type=template&id=5e1fdf86&scoped=true\"\nimport script from \"./CustomsDeclarationForm.vue?vue&type=script&lang=js\"\nexport * from \"./CustomsDeclarationForm.vue?vue&type=script&lang=js\"\n\nimport \"./CustomsDeclarationForm.vue?vue&type=style&index=0&id=5e1fdf86&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5e1fdf86\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"buyers-page\">\r\n    <h1>Importers List</h1>\r\n    <form class=\"my-form-container\" @submit.prevent=\"addBuyer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"buyerName\"><strong>Name</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"buyerName\" placeholder=\"Please Enter Buyer Name\" v-model=\"buyerName\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"buyerAddressLine1\"><strong>Address Line 1</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"buyerAddressLine1\" placeholder=\"Please Enter Address Line 1\" v-model=\"buyerAddressLine1\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"buyerAddressLine2\"><strong>Address Line 2</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"buyerAddressLine2\" placeholder=\"Please Enter Address Line 2\" v-model=\"buyerAddressLine2\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"buyerCity\"><strong>City</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"buyerCity\" placeholder=\"Please Enter City\" v-model=\"buyerCity\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"buyerCountry\"><strong>Country</strong></label>\r\n            <!-- <input type=\"text\" class=\"form-control\" id=\"buyerCountry\" v-model=\"buyerCountry\" /> -->\r\n            <select class=\"form-select\" v-model=\"buyerCountry\" id=\"buyerCountry\">\r\n              <option disabled value=\"\">Please select one</option>\r\n              <option v-for=\"country in this.countries\" :key=\"country.code\" :value=\"country.code\">\r\n                {{ country.code }} - {{ country.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n          <div class=\"form-group\">\r\n            <label for=\"tinNumber\"><strong>TIN Number</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"tinNumber\" placeholder=\"TIN Number\" v-model=\"tinNumber\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n          <div class=\"form-group\">\r\n            <p><strong></strong></p>\r\n            <button class=\"btn btn-primary\" type=\"submit\">Add Importer</button>\r\n           </div>\r\n        </div>\r\n      </div> \r\n    </form>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Address </th>\r\n          <th scope=\"col\">Country</th>\r\n          <th scope=\"col\">TIN Number</th>\r\n          <th scope=\"col\">Expand</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <template v-for=\"(buyer, index) in buyers\" :key=\"index\">\r\n          <tr >\r\n            <th scope=\"row\">{{ index + 1 }}</th>\r\n            <td>{{ buyer.name }}</td>\r\n            <td>{{ buyer.address }}</td>\r\n            <td>{{ buyer.country }}</td>\r\n            <td>{{ buyer.taxIdentificationNumber }}</td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"toggleDetails(index)\">\r\n                  <span v-if=\"expandedIndex === index\">\r\n                      <i class=\"fas fa-chevron-up\" style=\"color: white\"></i>\r\n                  </span>\r\n                  <span v-else>\r\n                      <i class=\"fas fa-chevron-down\" style=\"color: white\"></i>\r\n                  </span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"expandedIndex === index\">\r\n            <td colspan=\"6\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"buyerName\"><strong>Name</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"buyerName\" placeholder=\"Please Enter Buyer Name\" v-model=\"buyer.name\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"tinNumber\"><strong>Tax Identification Number</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"tinNumber\" placeholder=\"Please Enter TIN Number\" v-model=\"buyer.taxIdentificationNumber\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"buyerAddress\"><strong>Address</strong></label>\r\n                    <textarea  type=\"text\" class=\"form-control\" id=\"buyerAddressLine1\" placeholder=\"Please Enter Address\" v-model=\"buyer.address\" rows=\"4\"></textarea>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"buyerCountry\"><strong>Country</strong></label>\r\n                    <v-select :options=\"countries\"\r\n                    v-model=\"buyer.country\"\r\n                    label=\"name\"\r\n                    :searchable=\"true\"\r\n                    :filterable=\"true\"\r\n                    :reduce=\"option => option.code\"\r\n                    ></v-select>\r\n                  </div>\r\n                </div>\r\n              </div>  \r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary edit-form-button\" @click=\"updateBuyer(buyer)\">Update Buyer</button>\r\n                    <button class=\"btn btn-danger edit-form-button\" @click=\"deleteBuyer(buyer)\">Delete Buyer</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </template>\r\n        \r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport * as DatabaseConnector from '@/composables/DatabaseConnector';\r\nimport * as SweetAlertConnector from '@/composables/SweetAlertConnector';\r\n\r\nexport default {\r\n  name: 'BuyersPage',\r\n  data() {\r\n    return {\r\n      buyers : [],\r\n      countries: [],\r\n      buyerName: '',\r\n      buyerAddressLine1: '',\r\n      buyerAddressLine2: '',\r\n      buyerCity: '',\r\n      buyerCountry: '',\r\n      tinNumber: '',\r\n      expandedIndex: null,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDetails(index) {\r\n      this.expandedIndex = this.expandedIndex === index ? null : index;\r\n    },\r\n    async getBuyers() {\r\n      this.buyers = await DatabaseConnector.fetchBuyers();\r\n      console.log(this.buyers);\r\n    },\r\n    async updateBuyer(buyer){\r\n      SweetAlertConnector.showLoadingAlert('Updating Buyer');\r\n      DatabaseConnector.updateBuyer(buyer).then(() => {\r\n        SweetAlertConnector.showSuccessAlert('Buyer Updated Successfully');\r\n        this.getBuyers();\r\n      }).catch((error) => {\r\n        SweetAlertConnector.showErrorAlert('Failed to Update Buyer', error);\r\n      });\r\n    },\r\n    async deleteBuyer(buyer){\r\n      buyer.active = 0;\r\n      SweetAlertConnector.showLoadingAlert('Deleting Buyer');\r\n      DatabaseConnector.updateBuyer(buyer).then(() => {\r\n        SweetAlertConnector.showSuccessAlert('Buyer Deleted Successfully');\r\n        this.getBuyers();\r\n      }).catch((error) => {\r\n        SweetAlertConnector.showErrorAlert('Failed to Delete Buyer', error);\r\n      });\r\n    },\r\n    async addBuyer() {\r\n      const newBuyer = {\r\n        name: this.buyerName,\r\n        address: `${this.buyerAddressLine1}\\n${this.buyerAddressLine2}\\n${this.buyerCity}`,\r\n        country: this.buyerCountry,\r\n        taxIdentificationNumber: this.tinNumber,\r\n      };\r\n      SweetAlertConnector.showLoadingAlert('Adding Buyer');\r\n      DatabaseConnector.addBuyer(newBuyer).then(() => {\r\n        this.buyerName = '';\r\n        this.buyerAddressLine1 = '';\r\n        this.buyerAddressLine2 = '';\r\n        this.buyerCity = '';\r\n        this.buyerCountry = '';\r\n        SweetAlertConnector.showSuccessAlert('Buyer Added Successfully');\r\n        this.getBuyers();\r\n      }).catch((error) => {\r\n        SweetAlertConnector.showErrorAlert('Failed to Add Buyer', error);\r\n      });\r\n    },\r\n    async getCountries() {\r\n      this.countries = await DatabaseConnector.fetchCountries();\r\n      console.log(\"Countries\", this.contries);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getBuyers();\r\n    this.getCountries();\r\n    // Any code you want to run after the component is mounted\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.buyers-page {\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.customs-declaration-section-two {\r\n    /* Your styles here */\r\n  }\r\n  .form-group {\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check label {\r\n    margin-right: 1rem;\r\n  }\r\n  .my-form-container {\r\n    text-align: left;\r\n  }\r\n  .edit-form-button {\r\n    margin-right: 10px;\r\n  }\r\n</style>\r\n","import { render } from \"./BuyersPage.vue?vue&type=template&id=45afafc3&scoped=true\"\nimport script from \"./BuyersPage.vue?vue&type=script&lang=js\"\nexport * from \"./BuyersPage.vue?vue&type=script&lang=js\"\n\nimport \"./BuyersPage.vue?vue&type=style&index=0&id=45afafc3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-45afafc3\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"sellers-page\">\r\n      <h1>Shippers List</h1>\r\n      <form class=\"my-form-container\" @submit.prevent=\"addSeller\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"sellerName\"><strong>Name</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"sellerName\" placeholder=\"Please Enter Seller Name\" v-model=\"sellerName\" />\r\n           </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"sellerAddressLine1\"><strong>Address Line 1</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"sellerAddressLine1\" placeholder=\"Please Enter Address Line 1\" v-model=\"sellerAddressLine1\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"sellerAddressLine2\"><strong>Address Line 2</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"sellerAddressLine2\" placeholder=\"Please Enter Address Line 2\" v-model=\"sellerAddressLine2\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"sellerCity\"><strong>City</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"sellerCity\" placeholder=\"Please Enter City\" v-model=\"sellerCity\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"sellerCountry\"><strong>Country</strong></label>\r\n              <!-- <input type=\"text\" class=\"form-control\" id=\"sellerCountry\" v-model=\"sellerCountry\" /> -->\r\n              <select class=\"form-select\" v-model=\"sellerCountry\" id=\"sellerCountry\">\r\n                <option disabled value=\"\">Please select one</option>\r\n                <option v-for=\"country in this.countries\" :key=\"country.code\" :value=\"country.code\">\r\n                  {{ country.code }} - {{ country.name }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-1\">\r\n          <div class=\"form-group\">\r\n            <label for=\"tinNumber\"><strong>TIN Number</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"tinNumber\" placeholder=\"TIN Number\" v-model=\"tinNumber\" />\r\n          </div>\r\n        </div>\r\n          <div class=\"col-md-1\">\r\n            <div class=\"form-group\">\r\n              <p><strong></strong></p>\r\n              <button class=\"btn btn-primary\" type=\"submit\">Add Shipper</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n     \r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Address </th>\r\n            <th scope=\"col\">Country</th>\r\n            <th scope=\"col\">TIN Number</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <template v-for=\"(seller, index) in sellers\" :key=\"index\">\r\n            <tr>\r\n              <th scope=\"row\">{{ index + 1 }}</th>\r\n              <td>{{ seller.name }}</td>\r\n              <td>{{ seller.address }}</td>\r\n              <td>{{ seller.country }}</td>\r\n              <td>{{ seller.taxIdentificationNumber }}</td>\r\n              <td>\r\n                <button class=\"btn btn-primary\" @click=\"toggleDetails(index)\">\r\n                  <span v-if=\"expandedIndex === index\">\r\n                    <i class=\"fas fa-chevron-up\" style=\"color: white\"></i>\r\n                  </span>\r\n                  <span v-else>\r\n                    <i class=\"fas fa-chevron-down\" style=\"color: white\"></i>\r\n                  </span>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr v-if=\"expandedIndex === index\">\r\n              <td colspan=\"6\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"shipperName\"><strong>Name</strong></label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"shipperName\" v-model=\"seller.name\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"tinNumber\"><strong>TIN Number</strong></label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"tinNumber\" v-model=\"seller.taxIdentificationNumber\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"shipperAddressLine1\"><strong>Address Line 1</strong></label>\r\n                      <textarea type=\"text\" class=\"form-control\" id=\"shipperAddressLine1\" v-model=\"seller.address\" rows=\"4\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"shipperCountry\"><strong>Country</strong></label>\r\n                      <v-select \r\n                      v-model=\"seller.country\" \r\n                      :options=\"countries\" \r\n                      label=\"name\"\r\n                      :searchable=\"true\"\r\n                      :filterable=\"true\"\r\n                      :reduce=\"option => option.code\"\r\n                      ></v-select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <button class=\"btn btn-primary edit-form-button\" @click=\"updateShipper(seller)\">Update Shipper</button>\r\n                      <button class=\"btn btn-danger edit-form-button\" @click=\"deleteShipper(seller)\">Delete Shipper</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </template>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n\r\nimport * as DatabaseConnector from '@/composables/DatabaseConnector';\r\nimport * as SweetAlertConnector from '@/composables/SweetAlertConnector';\r\n\r\n  export default {\r\n    name: 'SellersPage',\r\n    data() {\r\n      return {\r\n        sellers : [],\r\n        countries: [],\r\n        sellerName: \"\",\r\n        sellerAddressLine1: \"\",\r\n        sellerAddressLine2: \"\",\r\n        sellerCity: \"\",\r\n        sellerCountry: \"\",\r\n        tinNumber: \"\",\r\n        expandedIndex: null,\r\n      };\r\n    },\r\n    methods: {\r\n      toggleDetails(index) {\r\n        this.expandedIndex = this.expandedIndex === index ? null : index;\r\n      },\r\n      async getSellers() {\r\n        this.sellers = await DatabaseConnector.fetchShippers();\r\n      },\r\n      async updateShipper(seller){\r\n        SweetAlertConnector.showLoadingAlert('Updating Data...');\r\n        DatabaseConnector.updateShipper(seller).then(() => {\r\n          this.getSellers();\r\n          SweetAlertConnector.showSuccessAlert('Shipper updated successfully');\r\n        }).catch((error) => {\r\n          SweetAlertConnector.showErrorAlert('Error updating shipper', error);\r\n        });\r\n      },\r\n      async deleteShipper(seller){\r\n        seller.active = 0;\r\n        SweetAlertConnector.showLoadingAlert('Deleting Data...');\r\n        DatabaseConnector.updateShipper(seller).then(() => {\r\n          this.getSellers();\r\n          SweetAlertConnector.showSuccessAlert('Shipper deleted successfully');\r\n        }).catch((error) => {\r\n          SweetAlertConnector.showErrorAlert('Error deleting shipper', error);\r\n        });\r\n      },\r\n      async getContries() {\r\n        this.countries = await DatabaseConnector.fetchCountries();\r\n      },\r\n      async addSeller() {\r\n        const newSeller = {\r\n          name: this.sellerName,\r\n          address: `${this.sellerAddressLine1}\\n${this.sellerAddressLine2}\\n${this.sellerCity}`,\r\n          country: this.sellerCountry,\r\n          phoneContact: \"\",\r\n          emailContact: \"\",\r\n          taxIdentificationNumber: this.tinNumber\r\n        };\r\n        console.log(\"Seller\", newSeller)\r\n        SweetAlertConnector.showLoadingAlert('Saving Data...');\r\n        DatabaseConnector.addShipper(newSeller).then(() => {\r\n          this.sellerName = \"\";\r\n          this.sellerAddressLine1 = \"\";\r\n          this.sellerAddressLine2 = \"\";\r\n          this.sellerCity = \"\";\r\n          this.sellerCountry = \"\";\r\n          this.tinNumber = \"\";\r\n          this.getSellers();\r\n          SweetAlertConnector.showSuccessAlert('Shipper added successfully');\r\n        }).catch((error) => {\r\n          SweetAlertConnector.showErrorAlert('Error adding shipper', error);\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      this.getSellers();\r\n      this.getContries();\r\n      // Code to execute after the component mounts\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n    .sellers-page {\r\n      padding: 20px;\r\n      text-align: center;\r\n    }\r\n    \r\n    .customs-declaration-section-two {\r\n    /* Your styles here */\r\n  }\r\n  .form-group {\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check label {\r\n    margin-right: 1rem;\r\n  }\r\n  .my-form-container {\r\n    text-align: left;\r\n  }\r\n  .edit-form-button {\r\n    margin-right: 10px;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./SellersPage.vue?vue&type=template&id=4b55fb10&scoped=true\"\nimport script from \"./SellersPage.vue?vue&type=script&lang=js\"\nexport * from \"./SellersPage.vue?vue&type=script&lang=js\"\n\nimport \"./SellersPage.vue?vue&type=style&index=0&id=4b55fb10&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4b55fb10\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"declarants-page\">\r\n      <h1>Declarants List</h1>\r\n      <form class=\"my-form-container\" @submit.prevent=\"addDeclarant\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"declarantName\"><strong>Name</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"declarantName\" placeholder=\"Please Enter Declarant Name\" v-model=\"declarantName\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"declarantAddressLine1\"><strong>Address Line</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"declarantAddressLine1\" placeholder=\"Please Enter Address Line\" v-model=\"declarantAddressLine1\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"declarantAddressLine2\"><strong>Address Line 2</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"declarantAddressLine2\" placeholder=\"Please Enter Address Line 2\" v-model=\"declarantAddressLine2\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"declarantCity\"><strong>City</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"declarantCity\" placeholder=\"Please Enter City\" v-model=\"declarantCity\" />\r\n            </div>\r\n          </div>\r\n          \r\n         \r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"declarantCountry\"><strong>Country</strong></label>\r\n              <v-select\r\n                v-model=\"declarantCountry\"\r\n                :options=\"countries\"\r\n                label=\"name\"\r\n                placeholder=\"Select Country\"\r\n                :searchable=\"true\"\r\n                :reduce=\"country => country.name\"\r\n                :filterable=\"true\"\r\n                ></v-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"declarantStatus\"><strong>Status</strong></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"declarantStatus\" placeholder=\"Please Enter Status\" v-model=\"declarantStatus\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"declarantImporter\"><strong>Importer</strong></label>\r\n              <v-select\r\n                v-model=\"declarantImporter\"\r\n                :options=\"importers\"\r\n                label=\"name\"\r\n                placeholder=\"Select Importer\"\r\n                :searchable=\"true\"\r\n                :reduce=\"importer => importer.id\"\r\n                :filterable=\"true\"\r\n                ></v-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <p><strong></strong></p>\r\n              <button class=\"btn btn-primary\" type=\"submit\">Add New Declarant</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Address </th>\r\n            <th scope=\"col\">Country</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\">Expand</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <template v-for=\"(declarant, index) in declarants\" :key=\"index\">\r\n            <tr>\r\n              <th scope=\"row\">{{ index + 1 }}</th>\r\n              <td>{{ declarant.name }}</td>\r\n              <td>{{ declarant.address }}</td>\r\n              <td>{{ declarant.country }}</td>\r\n              <td>{{ declarant.status }}</td>\r\n              <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"toggleDetails(index)\">\r\n                  <span v-if=\"expandedIndex === index\">\r\n                      <i class=\"fas fa-chevron-up\" style=\"color: white\"></i>\r\n                  </span>\r\n                  <span v-else>\r\n                      <i class=\"fas fa-chevron-down\" style=\"color: white\"></i>\r\n                  </span>\r\n                </button>\r\n              </td>\r\n          </tr>\r\n          <tr v-if=\"expandedIndex === index\">\r\n            <td colspan=\"6\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"declarantName\"><strong>Name</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"declarantName\" placeholder=\"Please Enter Declarant Name\" v-model=\"declarant.name\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"status\"><strong>Status</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"status\" placeholder=\"Please Enter Status\" v-model=\"declarant.status\" />\r\n                  </div>\r\n                </div> \r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"importer\"><strong>Importer</strong></label>\r\n                    <v-select\r\n                      v-model=\"declarant.importerCode\"\r\n                      :options=\"importers\"\r\n                      label=\"name\"\r\n                      placeholder=\"Select Importer\"\r\n                      :searchable=\"true\"\r\n                      :reduce=\"importer => importer.id\"\r\n                      :filterable=\"true\"\r\n                      ></v-select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"declarantAddressLine1\"><strong>Address Line 1</strong></label>\r\n                    <textarea type=\"text\" class=\"form-control\" id=\"declarantAddressLine1\" placeholder=\"Please Enter Address Line 1\" v-model=\"declarant.address\" rows=\"4\"></textarea>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"country\"><strong>Country</strong></label>\r\n                    <v-select\r\n                      v-model=\"declarant.country\"\r\n                      :options=\"countries\"\r\n                      label=\"name\"\r\n                      placeholder=\"Select Country\"\r\n                      :searchable=\"true\"\r\n                      :reduce=\"country => country.name\"\r\n                      :filterable=\"true\"\r\n                      ></v-select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary edit-form-button\" @click=\"updateDeclarant(declarant)\">Update Declarant</button>\r\n                    <button class=\"btn btn-danger edit-form-button\" @click=\"deleteDeclarant(declarant)\">Delete Buyer</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </template>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as DatabaseConnector from '@/composables/DatabaseConnector';\r\n  import * as SweetAlertConnector from '@/composables/SweetAlertConnector';\r\n\r\n  export default {\r\n    name: 'DeclarantsPage',\r\n    data() {\r\n      return {\r\n        declarants: [],\r\n        countries: [],\r\n        importers: [],\r\n        declarantName: '',\r\n        declarantAddressLine1: '',\r\n        declarantAddressLine2: '',\r\n        declarantCity: '',\r\n        declarantCountry: '',\r\n        declarantStatus: '',\r\n        declarantImporter: '',\r\n        expandedIndex: null,\r\n        \r\n      };\r\n    },\r\n    methods: {\r\n      toggleDetails(index) {\r\n        this.expandedIndex = this.expandedIndex === index ? null : index;\r\n      },\r\n      async getDeclarants() {\r\n        this.declarants = await DatabaseConnector.fetchDeclarants();\r\n      },\r\n      async getContries() {\r\n        this.countries = await DatabaseConnector.fetchCountries();\r\n      },\r\n      async fetchImporters(){\r\n        this.importers = await DatabaseConnector.fetchBuyers();\r\n      },\r\n\r\n      async addDeclarant() {\r\n        if (!this.declarantName || !this.declarantAddressLine1 || !this.declarantCity || !this.declarantCountry || !this.declarantStatus || !this.declarantImporter) {\r\n          SweetAlertConnector.showErrorAlert('All fields are required');\r\n          return;\r\n        }\r\n        const newDeclarant = {\r\n          name: this.declarantName,\r\n          address: `${this.declarantAddressLine1}\\n${this.declarantAddressLine2}`,\r\n          city: this.declarantCity,\r\n          country: this.declarantCountry,\r\n          status: this.declarantStatus,\r\n          importerId: this.declarantImporter,\r\n        };\r\n        SweetAlertConnector.showLoadingAlert('Adding Declarant...');\r\n        DatabaseConnector.addDeclarant(newDeclarant).then(() => {\r\n          this.declarantName = '';\r\n          this.declarantAddressLine1 = '';\r\n          this.declarantAddressLine2 = '';\r\n          this.declarantCity = '';\r\n          this.declarantCountry = '';\r\n          this.declarantStatus = '';\r\n          this.declarantImporter = '';\r\n          SweetAlertConnector.showSuccessAlert('Declarant Added Successfully');\r\n          this.getDeclarants();\r\n        }).catch((error) => {\r\n          SweetAlertConnector.showErrorAlert('Failed to Add Declarant', error);\r\n        });\r\n      },\r\n      updateDeclarant(declarant) {\r\n        SweetAlertConnector.showLoadingAlert('Updating Declarant...');\r\n        DatabaseConnector.updateDeclarant(declarant).then(() => {\r\n          SweetAlertConnector.showSuccessAlert('Declarant Updated Successfully');\r\n          this.getDeclarants();\r\n        }).catch((error) => {\r\n          SweetAlertConnector.showErrorAlert('Failed to Update Declarant', error);\r\n        });\r\n      },\r\n      deleteDeclarant(declarant) {\r\n        declarant.active = 0;\r\n        SweetAlertConnector.showLoadingAlert('Deleting Declarant...');\r\n        DatabaseConnector.updateDeclarant(declarant).then(() => {\r\n          SweetAlertConnector.showSuccessAlert('Declarant Deleted Successfully');\r\n          this.getDeclarants();\r\n        }).catch((error) => {\r\n          SweetAlertConnector.showErrorAlert('Failed to Delete Declarant', error);\r\n        });\r\n      },\r\n    },\r\n    mounted() {\r\n      this.getDeclarants();\r\n      this.getContries();\r\n      this.fetchImporters();\r\n    }\r\n  }\r\n  </script>\r\n\r\n  \r\n  \r\n  <style scoped>\r\n  .declarants-page {\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .customs-declaration-section-two {\r\n    /* Your styles here */\r\n  }\r\n  .form-group {\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check label {\r\n    margin-right: 1rem;\r\n  }\r\n  .my-form-container {\r\n    text-align: left;\r\n  }\r\n\r\n  table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 8px;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f8;\r\n  color: #333;\r\n}\r\n\r\nbutton {\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n.edit-form-button {\r\n    margin-right: 10px;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./DeclarantsPage.vue?vue&type=template&id=de0fbfb2&scoped=true\"\nimport script from \"./DeclarantsPage.vue?vue&type=script&lang=js\"\nexport * from \"./DeclarantsPage.vue?vue&type=script&lang=js\"\n\nimport \"./DeclarantsPage.vue?vue&type=style&index=0&id=de0fbfb2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-de0fbfb2\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"vessels-page\">\r\n    <h1>Vessels List</h1>\r\n    <form class=\"my-form-container\" @submit.prevent=\"addVessel\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n          <div class=\"form-group\">\r\n            <label for=\"vesselName\"><strong>Vessel Name</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"vesselName\" placeholder=\"Please Enter Vessel Name\" v-model=\"vesselName\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n          <div class=\"form-group\">\r\n            <label for=\"imoNumber\"><strong>IMO Number</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"imoNumber\" placeholder=\"Please Enter IMO Number\" v-model=\"imoNumber\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <p><strong></strong></p>\r\n            <button class=\"btn btn-primary\" type=\"submit\">Add Vessel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Vessel Name</th>\r\n          <th scope=\"col\">IMO Number </th>\r\n          <th scope=\"col\">Expand</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <template v-for=\"(vessel, index) in vessels\" :key=\"index\">\r\n          <tr >\r\n            <th scope=\"row\">{{ index + 1 }}</th>\r\n            <td>{{vessel.name}}</td>\r\n            <td>{{vessel.imoNumber}}</td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"toggleDetails(index)\">\r\n                  <span v-if=\"expandedIndex === index\">\r\n                      <i class=\"fas fa-chevron-up\" style=\"color: white\"></i>\r\n                  </span>\r\n                  <span v-else>\r\n                      <i class=\"fas fa-chevron-down\" style=\"color: white\"></i>\r\n                  </span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"expandedIndex === index\">\r\n            <td colspan=\"3\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"vesselName\"><strong>Vessel Name</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"vesselName\" placeholder=\"Please Enter Vessel Name\" v-model=\"vessel.name\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"imoNumber\"><strong>IMO Number</strong></label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"imoNumber\" placeholder=\"Please Enter IMO Number\" v-model=\"vessel.imoNumber\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary edit-form-button\" type=\"submit\" @click=\"updateVessel(vessel)\">Update Vessel</button>\r\n                    <button class=\"btn btn-danger edit-form-button\" type=\"submit\" @click=\"deleteVessel(vessel)\">Delete Vessel</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </template>\r\n      </tbody>\r\n    </table>    \r\n  </div> \r\n</template>\r\n  \r\n  <script>\r\n    import * as DatabaseConnector from '@/composables/DatabaseConnector';\r\n    import * as SweetAlertConnector from '@/composables/SweetAlertConnector';\r\n  export default {\r\n    name: 'VesselsPage',\r\n    data(){\r\n        return {\r\n          vessels: [],\r\n          expandedIndex: null,\r\n          vesselName: '',\r\n          imoNumber: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getVessels();\r\n    },\r\n    methods: {\r\n        toggleDetails(index) {\r\n          this.expandedIndex = this.expandedIndex === index ? null : index;\r\n        },\r\n        async updateVessel(vessel){\r\n          SweetAlertConnector.showLoadingAlert('Updating Vessel');\r\n          DatabaseConnector.updateVessel(vessel).then(() => {\r\n            SweetAlertConnector.showSuccessAlert('Vessel Updated Successfully');\r\n            this.getVessels();\r\n          }).catch((error) => {\r\n            SweetAlertConnector.showErrorAlert('Failed to Update Vessel', error);\r\n          });\r\n        },\r\n        async deleteVessel(vessel){\r\n          vessel.active = 0;\r\n          SweetAlertConnector.showLoadingAlert('Deleting Vessel');\r\n          DatabaseConnector.updateVessel(vessel).then(() => {\r\n            SweetAlertConnector.showSuccessAlert('Vessel Deleted Successfully');\r\n            this.getVessels();\r\n          }).catch((error) => {\r\n            SweetAlertConnector.showErrorAlert('Failed to Delete Vessel', error);\r\n          });\r\n        },\r\n        async getVessels() {\r\n            this.vessels = await DatabaseConnector.fetchVessels();\r\n        },\r\n        async addVessel(){\r\n          const newVessel = {\r\n            name: this.vesselName,\r\n            imoNumber: this.imoNumber\r\n          }\r\n          SweetAlertConnector.showLoadingAlert('Adding Vessel');\r\n          DatabaseConnector.insertVessel(newVessel).then(() => {\r\n            SweetAlertConnector.showSuccessAlert('Vessel Added Successfully');\r\n            this.vesselName = '';\r\n            this.imoNumber = '';\r\n            this.getVessels();\r\n          }).catch((error) => {\r\n            SweetAlertConnector.showErrorAlert('Failed to Add Vessel', error);\r\n          });\r\n        }\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n\r\n  .vessels-page {\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n .form-group {\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n  }\r\n  .form-check label {\r\n    margin-right: 1rem;\r\n  }\r\n  .my-form-container {\r\n    text-align: left;\r\n  }\r\n  .edit-form-button {\r\n    margin-right: 10px;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./VesselsPage.vue?vue&type=template&id=06b8fda6&scoped=true\"\nimport script from \"./VesselsPage.vue?vue&type=script&lang=js\"\nexport * from \"./VesselsPage.vue?vue&type=script&lang=js\"\n\nimport \"./VesselsPage.vue?vue&type=style&index=0&id=06b8fda6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-06b8fda6\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"exchange-rates-page\">\r\n    <h1>Exchange Rates</h1>\r\n    <form class=\"my-form-container\" @submit.prevent=\"addExchangeRate\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"baseCurrency\"><strong>Currency</strong></label>\r\n            <v-select :options=\"currencies\" v-model=\"baseCurrency\" label=\"name\" id=\"invoiceCurrency\" :searchable=\"true\" :filterable=\"true\" :reduce=\"currency => currency.code\"></v-select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"rate\"><strong>Exchange Rate</strong></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"rate\" placeholder=\"Please Enter Exchange Rate\" v-model=\"rate\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"effectiveDate\"><strong>Effective Date</strong></label>\r\n            <input type=\"date\" class=\"form-control\" id=\"effectiveDate\" placeholder=\"Please Enter Effective Date\" v-model=\"effectiveDate\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"form-group\">\r\n            <p><strong></strong></p>\r\n            <button class=\"btn btn-primary\" type=\"submit\">Add Rate</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div v-for=\"(rates, date) in groupedExchangeRates\" :key=\"date\" class=\"rate-group\">\r\n      <h3>{{ date }}</h3>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Currency Code</th>\r\n            <th scope=\"col\">Currency Name</th>\r\n            <th scope=\"col\">Exchange Rate</th>\r\n            <th scope=\"col\">Effective Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(rate, index) in rates\" :key=\"rate.id\">\r\n            <th scope=\"row\">{{ index + 1 }}</th>\r\n            <td>{{ rate.base_currency }}</td>\r\n            <td>{{ rate.base_currency_name }}</td>\r\n            <td>{{ rate.rate }}</td>\r\n            <td>{{ formatDate(rate.last_updated) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as DatabaseConnector from '@/composables/DatabaseConnector';\r\nimport * as Currency from '@/composables/Currency'\r\nimport * as SweetAlertConnector from '@/composables/SweetAlertConnector';\r\nimport * as Utilities from '@/composables/Utilities';\r\nexport default {\r\n  name: 'ExchangeRatesPage',\r\n  data() {\r\n    return {\r\n      exchangeRates: [],\r\n      currencies: [],\r\n      baseCurrency: '',\r\n      rate: '',\r\n      effectiveDate: this.getCurrentDate(),\r\n    };\r\n  },\r\n  computed: {\r\n    sortedExchangeRates() {\r\n      return [...this.exchangeRates].sort((a, b) => new Date(b.last_updated) - new Date(a.last_updated));\r\n    },\r\n    groupedExchangeRates() {\r\n      return this.sortedExchangeRates.reduce((groups, rate) => {\r\n        // const date = rate.last_updated.split('T')[0]; // Assuming last_updated is an ISO string\r\n        const date = this.formatDate(rate.last_updated);\r\n        if (!groups[date]) {\r\n          groups[date] = [];\r\n        }\r\n        groups[date].push(rate);\r\n        return groups;\r\n      }, {});\r\n    }\r\n  },\r\n  methods: {\r\n    getCurrentDate() {\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = (today.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-indexed, so add 1\r\n      const day = today.getDate().toString().padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    getCurrencyName(code) {\r\n      const currency = this.currencies.find(currency => currency.code === code);\r\n      return currency ? currency.name : '';\r\n    },\r\n    modifyExchangeRates() {\r\n      this.exchangeRates = this.exchangeRates.map(rate => {\r\n        return {\r\n          ...rate,\r\n          base_currency_name: this.getCurrencyName(rate.base_currency),\r\n        };\r\n      });\r\n    },\r\n    formatDate(dateString) {\r\n      return Utilities.formatDate(dateString);\r\n    },\r\n    async getExchangeRates() {\r\n      this.exchangeRates = await DatabaseConnector.fetchExchangeRates();\r\n      console.log(\"Exchange Rates\", this.exchangeRates);\r\n      this.modifyExchangeRates();\r\n    },\r\n    async addExchangeRate() {\r\n      const currentDate = new Date(this.effectiveDate).toISOString();\r\n      const rate = {\r\n        baseCurrency: this.baseCurrency,\r\n        targetCurrency: 'TTD',\r\n        rate: this.rate,\r\n        lastUpdated: currentDate,\r\n      };\r\n      console.log(\"Rate\", rate);\r\n      DatabaseConnector.addExchangeRate(rate).then(() => {\r\n        SweetAlertConnector.showSuccessAlert('Exchange Rate Added Successfully');\r\n        this.getExchangeRates();\r\n        this.baseCurrency = '';\r\n        this.rate = '';\r\n      }).catch(() => {\r\n        SweetAlertConnector.showErrorAlert('Failed to Add Exchange Rate');\r\n      });\r\n      this.getExchangeRates();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getExchangeRates();\r\n    console.log(\"Currencies\", Currency.getCurrencyList());\r\n    this.currencies = Currency.getCurrencyList();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.exchange-rates-page {\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n.form-group {\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 20px; /* Adds space below each form group */\r\n}\r\n.form-check label {\r\n    margin-right: 1rem;\r\n}\r\n.my-form-container {\r\n    text-align: left;\r\n}\r\n</style>\r\n","import { render } from \"./RateOfExchangePage.vue?vue&type=template&id=b84d4fca&scoped=true\"\nimport script from \"./RateOfExchangePage.vue?vue&type=script&lang=js\"\nexport * from \"./RateOfExchangePage.vue?vue&type=script&lang=js\"\n\nimport \"./RateOfExchangePage.vue?vue&type=style&index=0&id=b84d4fca&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b84d4fca\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <VehicleEntry @submit=\"handleCreate\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import VehicleEntry from './VehicleEntry.vue';\r\n  import * as DatabaseConnector from '@/composables/DatabaseConnector';\r\n  import * as SweetAlertConnector from '../composables/SweetAlertConnector';\r\n  \r\n  export default {\r\n    components: { VehicleEntry },\r\n    methods: {\r\n      async handleCreate(entryData) {\r\n       try {\r\n          SweetAlertConnector.showLoadingAlert('Saving your Entry...');\r\n          DatabaseConnector.createToyotaEntry(entryData).then((response) => {\r\n            console.log('Entry created successfully:', response);\r\n            const entryId = response.entryId;\r\n            SweetAlertConnector.closeCurrentAlert();\r\n            SweetAlertConnector.showSuccessAlert('Entry created successfully');\r\n            this.$router.push({ name: 'VehicleEntryEditPage', params: { entryId } });\r\n          }).catch((error) => {\r\n            console.error('Failed to create the Entry:', error);\r\n            SweetAlertConnector.showErrorAlert('Failed to create the Entry. Please try again.');\r\n          });\r\n          \r\n        } catch (error) {\r\n          console.error('Failed to create the invoice:', error);\r\n          SweetAlertConnector.showErrorAlert('Failed to create the Entry. Please try again.');\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  ","<template>\r\n    <h1>Entry Details</h1>\r\n    <h2 v-if=\"isEditMode == true\">Reference Number: {{ this.referenceNumber }}</h2>\r\n    <div class=\"vehicle-form\" v-if=\"isEditMode == false\">\r\n      <div class=\"row vehicleAttchments\" >\r\n        <div class=\"col-md-3\">\r\n          <label for=\"referenceNumber\"><strong>Reference Number</strong></label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"referenceNumber\" placeholder=\"Enter Reference Number\"/>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <label for=\"commercialInvoiceAttachment\"><strong>Commercial Invoice Attachment</strong></label>\r\n            <input type=\"file\" id=\"commercialInvoiceAttachment\" class=\"form-control\" @change=\"handleFileChange($event, 'commercialInvoice')\"/>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <label for=\"attachedSheet\"><strong>Attached Sheet</strong></label>\r\n            <input type=\"file\" id=\"attachedSheet\" class=\"form-control\" @change=\"handleFileChange($event, 'attachedSheet')\" />\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <label for=\"instructionSheet\"><strong>Instruction Sheet</strong></label>\r\n            <input type=\"file\" id=\"instructionSheet\" class=\"form-control\" @change=\"handleFileChange($event, 'instructionSheet')\"/>\r\n          </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\">\r\n            <label for=\"waybill\"><strong>Waybill</strong></label>\r\n            <input type=\"file\" class=\"form-control\"  @change=\"handleWaybillUpload\" placeholder=\"Enter Waybill Number\"/>\r\n          </div>\r\n            <div class=\"col-md-3\">\r\n              <div>-</div>\r\n              <button type=\"button\" class=\"btn btn-primary upload-button\" @click=\"readToyotaFiles\">Upload Files</button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n    <CustomsEntryForm ref=\"myCustomsForm\" :customsEntryForm = \"customsEntryForm\" @update-customs-entry-form=\"customsEntryForm = $event\"/>\r\n    \r\n    <div class=\"form-row\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n          <label for=\"InvoiceNumber\" class=\"form-label\"><strong>Invoice Number</strong></label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"invoiceNumber\" id=\"InvoiceNumber\" placeholder=\"Please Enter Invoice Number\" />\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <label for=\"supplierName\" class=\"form-label\"><strong>Supplier Name</strong></label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"supplierName\" id=\"supplierName\" placeholder=\"Please Enter Supplier Name\" />\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <label for=\"InvoiceDate\" class=\"form-label\"><strong>Invoice Date</strong></label>\r\n          <input type=\"date\" class=\"form-control\" v-model=\"invoiceDate\" id=\"InvoiceDate\" placeholder=\"Please Enter Invoice Date\" />\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <label for=\"invoiceCurrency\" class=\"form-label\"><strong>Invoice Currency</strong></label>\r\n          <v-select :options=\"currencies\" v-model=\"invoiceCurrency\" label=\"name\" id=\"invoiceCurrency\" :searchable=\"true\" :filterable=\"true\" :reduce=\"currency => currency.code\"></v-select>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <label for=\"rateOfExchange\" class=\"form-label\"><strong>Rate of Exchange</strong></label>\r\n          <input type=\"number\" class=\"form-control\" v-model=\"rateOfExchange\" id=\"rateOfExchange\" placeholder=\"Please Enter Rate of Exchange\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Line #</th>\r\n            <th>Product Code</th>\r\n            <th>Description</th>\r\n            <th>THN Number</th>\r\n            <th>Duty</th>\r\n            <th>VAT</th>\r\n            <th>MVT</th>\r\n            <th>Quantity</th>\r\n            <th>Unit Price</th>\r\n            <th>Total Cost</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <template v-for=\"(vehicle, index) in vehicles\" :key=\"index\">\r\n            <tr>\r\n                <td>{{ index + 1 }}</td>\r\n                <!-- <td> -->\r\n                    <!-- <input type=\"text\" v-model=\"vehicle.vehicleCode\" class=\"form-control\" placeholder=\"Please Enter Vehicle Code\" /> -->\r\n                <!-- </td> -->\r\n                 <td contenteditable=\"true\" @blur=\"updateVehicleData(vehicle, 'vehicleCode', $event.target.innerText)\">{{ vehicle.vehicleCode }}</td>\r\n                <!-- <td>\r\n                    <input type=\"text\" v-model=\"vehicle.description\" class=\"form-control\" placeholder=\"Please Enter Vehicle Model\" />\r\n                </td> -->\r\n                <td contenteditable=\"true\" @blur=\"updateVehicleData(vehicle, 'description', $event.target.innerText)\">{{ vehicle.description }}</td>\r\n                <!-- <td>\r\n                    <input type=\"text\" v-model=\"vehicle.thnNumber\" @blur=\"updateTariffCode(vehicle)\" @input=\"handleTariffInput(vehicle)\" class=\"form-control\" placeholder=\"Please Enter THN Number\" />\r\n                </td> -->\r\n                <td \r\n                :class=\"[\r\n                      vehicle.commodityCodeStatus === 'valid'\r\n                          ? 'valid-commodity-code'\r\n                          : 'invalid-commodity-code',\r\n                  ]\"\r\n                  contenteditable=\"true\" \r\n                  @blur=\"updateTariffCode(vehicle, $event.target.innerText)\">\r\n                  {{ vehicle.thnNumber }}\r\n                </td>\r\n                <td>\r\n                    {{ vehicle.icdCharge }}%\r\n                </td>\r\n                <td>\r\n                    {{ vehicle.vatCharge }}%\r\n                </td>\r\n                <td>\r\n                    ${{ vehicle.mvtCharge }} per CC\r\n                </td>\r\n                <!-- <td>\r\n                    <input type=\"number\" v-model=\"vehicle.quantity\" class=\"form-control\" placeholder=\"Please Enter Quantity\" />\r\n                </td> -->\r\n                <td contenteditable=\"true\" @blur=\"updateVehicleData(vehicle, 'quantity', $event.target.innerText)\">{{ vehicle.quantity }}</td>\r\n                <!-- <td>\r\n                    <input type=\"number\" v-model=\"vehicle.unitPrice\" class=\"form-control\" placeholder=\"Please Enter Unit Price\" />\r\n                </td> -->\r\n                <td contenteditable=\"true\" @blur=\"updateVehicleData(vehicle, 'unitPrice', $event.target.innerText)\">{{ vehicle.unitPrice }}</td>\r\n                <td>\r\n                  {{ caclulateVehicleTotalCost(vehicle) }}\r\n                </td>\r\n              <td>\r\n                <button @click=\"toggleDetails(index)\">\r\n                  <span v-if=\"expandedIndex === index\">\r\n                    <i class=\"fas fa-chevron-up\" style=\"color:gray;\"></i>\r\n                  </span>\r\n                  <span v-else>\r\n                    <i class=\"fas fa-chevron-down\" style=\"color:gray;\"></i>\r\n                  </span>\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button class=\"btn btn-danger\" @click=\"deleteVehicle(vehicles, index)\">\r\n                    <i class=\"fa fa-trash\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr v-if=\"expandedIndex === index\">\r\n              <td colspan=\"12\">\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <label for=\"\">Fuel Type</label>\r\n                        <select v-model=\"vehicle.fuelType\" class=\"form-control\">\r\n                          <option disabled value=\"\">Please select one</option>\r\n                          <option v-for=\"fuelType in fuelTypeOptions\" :key=\"fuelType.code\" :value=\"fuelType.code\">{{ fuelType.detail }}</option>\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <label for=\"\">Seat Position</label>\r\n                        <select v-model=\"vehicle.seatPosition\" class=\"form-control\">\r\n                          <option disabled value=\"\">Please select one</option>\r\n                          <option v-for=\"position in seatPositionOptions\" :key=\"position.code\" :value=\"position.code\">{{ position.detail }}</option>\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <label for=\"vehicleCode\">Model Code</label>\r\n                        <v-select :options=\"vehicleCodeOptions\" v-model=\"vehicle.modelCode\" :style=\"{ width: '300px' }\" label=\"description\" :searchable=\"true\" :filterable=\"true\" placeholder=\"Please select one\" :reduce=\"vehicle => vehicle.code\"></v-select>\r\n                      </td>\r\n                      <td>\r\n                        <label for=\"numberOfSeats\">Number of Seats</label>\r\n                        <input type=\"number\" v-model=\"vehicle.numberOfSeats\" class=\"form-control\" placeholder=\"Please Enter Number of Seats\" />\r\n                      </td>\r\n                      <td>\r\n                        <label for=\"numberOfDoors\">Number of Doors</label>\r\n                        <input type=\"number\" v-model=\"vehicle.numberOfDoors\" class=\"form-control\" placeholder=\"Please Enter Number of Doors\" />\r\n                      </td>\r\n                      <td>\r\n                        <label for=\"tyreSize\">Tyre Size</label>\r\n                        <input type=\"text\" v-model=\"vehicle.tyreSize\" class=\"form-control\" placeholder=\"Please Enter Tyre Size\" />\r\n                      </td>\r\n                      <td>\r\n                        <label for=\"engineDisplacement\">Engine Displacement</label>\r\n                        <input type=\"text\" v-model=\"vehicle.engineDisplacement\" class=\"form-control\" placeholder=\"Please Enter Engine Displacement\" />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n            <tr v-if=\"expandedIndex === index\">\r\n              <td colspan=\"12\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Chassis Number</th>\r\n                      <th>Engine Number</th>\r\n                      <th>Exterior Color</th>\r\n                      <th>Customer Name</th>\r\n                      <th>Customer TIN</th>\r\n                      <th>Broker Instructions</th>\r\n                      <th>CPC Code</th>\r\n                      <th>NPC Code</th>\r\n                      <th>ED Number</th>\r\n                      <th>Manufacture Year</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"detail in vehicle.details\" :key=\"detail.chassisNumber\">\r\n                        <!-- <td> -->\r\n                            <!-- <input type=\"text\" v-model=\"detail.chassisNumber\" class=\"form-control\" placeholder=\"Please Enter Chassis Number\" /> -->\r\n                            <td contenteditable=\"true\" @blur=\"updateVehicleDetialData(detail, 'chassisNumber', $event.target.innerText)\">{{ detail.chassisNumber}}</td>\r\n                        <!-- </td> -->\r\n                        <td>\r\n                            <input type=\"text\" v-model=\"detail.engineNumber\" class=\"form-control\" placeholder=\"Please Enter Engine Number\" />\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" v-model=\"detail.exteriorColor\" class=\"form-control\" placeholder=\"Please Enter Exterior Color\" />\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" v-model=\"detail.customerName\" class=\"form-control\" placeholder=\"Please Enter Customer Name\" />\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" v-model=\"detail.customerTIN\" class=\"form-control\" placeholder=\"Please Enter Customer TIN\" />\r\n                        </td>\r\n                        <td>\r\n                          <select v-model=\"detail.brokerInstructions\" class=\"form-control\">\r\n                              <option disabled value=\"\">Please select one</option>\r\n                              <option v-for=\"instruction in instructionList\" :key=\"instruction.code\" :value=\"instruction.code\">{{ instruction.code }}</option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                          <v-select :options=\"availableCPCCodes\" v-model=\"detail.cpcCode\" label=\"code\" id=\"cpcCode\" :searchable=\"true\" :filterable=\"true\" :reduce=\"cpc => cpc.cpcId\"></v-select>\r\n                        </td>\r\n                        <td>\r\n                          <v-select v-model=\"detail.npcCode\" :options=\"npcCodeOptions\" label=\"code\" id=\"npcCode\" :searchable=\"true\" :reduce=\"npc => npc.code\" :filterable=\"true\" placeholder=\"Select a NPC Code\"></v-select>\r\n                        </td>\r\n                        <td>\r\n                          <input type=\"text\" v-model=\"detail.edNumber\" class=\"form-control\" placeholder=\"Please Enter ED Number\" />\r\n                        </td>\r\n                        <td>\r\n                          <v-select :options=\"years\" v-model=\"detail.manufactureYear\" :searchable=\"true\" :filterable=\"true\" placeholder=\"Please select one\"></v-select>\r\n                        </td>\r\n                        <td>\r\n                          <button class=\"btn btn-danger\" @click=\"deleteRow(vehicle.details, index)\">\r\n                              <i class=\"fa fa-trash\"></i>\r\n                          </button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr v-if=\"expandedIndex === index\">\r\n                        <td colspan=\"12\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" @click=\"addChassis(vehicle)\">Add Chassis</button>\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </template>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"form-row\">\r\n            <div class=\"col-md-1\">\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"addVehicle()\">\r\n                    Add Vehicle\r\n                </button>\r\n            </div>\r\n        </div>\r\n      <h3>Footer Information</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Invoice Total</th>\r\n            <th>Inland</th>\r\n            <th>Insurance</th>\r\n            <th>Other Charges</th>\r\n            <th>Final Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td contenteditable=\"true\" @blur=\"updateInvoiceData('invoiceTotal', $event.target.innerText)\" :style=\"naStyle(invoiceTotal)\">{{ invoiceTotal || 0.00 }}</td>\r\n            <td contenteditable=\"true\" @blur=\"updateInvoiceData('inlandAmount', $event.target.innerText)\" :style=\"naStyle(inlandAmount)\">{{ inlandAmount || 0.00 }}</td>\r\n            <td contenteditable=\"true\" @blur=\"updateInvoiceData('insuranceAmount', $event.target.innerText)\" :style=\"naStyle(insuranceAmount)\">{{ insuranceAmount || 0.00 }}</td>\r\n            <td contenteditable=\"true\" @blur=\"updateInvoiceData('otherCharges', $event.target.innerText)\" :style=\"naStyle(otherCharges)\">{{ otherCharges || 0.00 }}</td>\r\n            <td >{{ finalTotal }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <h3>Calculated Check</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Total Extension Prices</th>\r\n            <th>Number of Line Items</th>\r\n            <th>Matches Invoice Total?</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr :style=\"compareInvoiceStyle()\">\r\n            <td>{{ calculatedTotal.toLocaleString('en-US', {minimumFractionDigits: 2}) }}</td>\r\n            <td>{{ vehicles.length }}</td>\r\n            <td>{{ compareInvoiceTotal() ? 'Yes': 'No' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n        \r\n      <!-- <div class=\"form-row\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\">\r\n            <label for=\"invoiceTotal\" class=\"form-label\"><strong>Invoice Total</strong></label>\r\n            <input type=\"number\" class=\"form-control\" v-model=\"invoiceTotal\" id=\"invoiceTotal\" placeholder=\"Please Enter Invoice Total\" />\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <label for=\"inlandAmount\" class=\"form-label\"><strong>Inland Amount</strong></label>\r\n            <input type=\"number\" class=\"form-control\" v-model=\"inlandAmount\" id=\"inlandAmount\" placeholder=\"Please Enter Inland Amount\" />\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <label for=\"insuranceAmount\" class=\"form-label\"><strong>Insurance Amount</strong></label>\r\n            <input type=\"number\" class=\"form-control\" v-model=\"insuranceAmount\" id=\"insuranceAmount\" placeholder=\"Please Enter Insurance Amount\" />\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <label for=\"otherCharges\" class=\"form-label\"><strong>Other Charges</strong></label>\r\n            <input type=\"number\" class=\"form-control\" v-model=\"otherCharges\" id=\"otherCharges\" placeholder=\"Please Enter Other Charges\" />\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n    <div >\r\n      <h3>Entry Summary</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Number of Lines Read</th>\r\n            <th>Total Number of Vehicles Read</th>\r\n            <th>Total Invoices Value</th>\r\n          </tr>\r\n        </thead>\r\n       <tbody>\r\n        <tr>\r\n          <td>{{ vehicles.length }}</td>\r\n          <td>{{ totalNumberOfVehicles }}</td>\r\n          <td>{{ calculatedTotal.toLocaleString('en-US', {minimumFractionDigits: 2}) }}</td>\r\n        </tr>\r\n        \r\n       </tbody>\r\n      </table>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n          <td><button type=\"button\" class=\"btn btn-primary\" @click=\"handleButtonClick()\">{{ isEditMode ? 'Save Entry' : 'Create Entry' }}</button></td>\r\n          <td><button type=\"button\" class=\"btn btn-primary\" @click=\"generateWorksheet()\">Generate WorkSheet</button></td>\r\n          <td><button type=\"button\" class=\"btn btn-primary\" @click=\"generateAsycudaXML()\">Generate Asycuda XML</button></td>\r\n          <td><button type=\"button\" class=\"btn btn-primary\" @click=\"goToValuationFormPage()\">Generate Valuation Form</button></td>\r\n          <td>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"generateTTC84\">\r\n                  Generate Special Exemption\r\n              </button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import CustomsEntryForm from './CustomsEntry/CustomsEntryForm.vue';\r\n  import * as DatabaseConnector from '@/composables/DatabaseConnector';\r\n  import * as SweetAlertConnector from '../composables/SweetAlertConnector';\r\n  import * as VehicleList from '../composables/VehicleList';\r\n  import * as Utilities from '@/composables/Utilities';\r\n  import * as Currency from '@/composables/Currency';\r\n  import * as Configuration from '@/composables/BrokerConfiguration';\r\n  import { ENTRY_TYPES, ENTRY_STATUS } from '../constants'\r\n  export default {\r\n    name: 'VehicleEntry',\r\n    components: {\r\n      CustomsEntryForm\r\n    },\r\n    props: {\r\n      record: {\r\n        type: Object,\r\n        default: () => (Utilities.initializeCustomsEntryForm()),\r\n      },\r\n      vehicleDetails: {\r\n        type: Array,\r\n        default: () => [],\r\n      },\r\n      isEditMode: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n      referenceNumberRecord: {\r\n        type: String,\r\n        default: '',\r\n      },\r\n      invoiceDetails: {\r\n        type: Object,\r\n        default: () => ({\r\n          invoice_id: '',\r\n          supplierName: '',\r\n          invoiceNumber: '',\r\n          invoiceDate: '',\r\n          invoiceCurrency: '',\r\n          rateOfExchange: 0.0,\r\n          invoiceTotal: 0.0,\r\n          inlandAmount: 0.0,\r\n          insuranceAmount: 0.0,\r\n          otherCharges: 0.0,\r\n        }),\r\n      },\r\n    },\r\n    watch: {\r\n      record: {\r\n        handler: function (newVal) {\r\n          this.customsEntryForm = newVal;\r\n        },\r\n        deep: true,\r\n      },\r\n      vehicleDetails: {\r\n        handler: function (newVal) {\r\n          this.vehicles = newVal;\r\n        },\r\n        deep: true,\r\n      },\r\n      referenceNumberRecord: {\r\n        handler: function (newVal) {\r\n          this.referenceNumber = newVal;\r\n        },\r\n      },\r\n      invoiceDetails: {\r\n        handler: function (newVal) {\r\n          this.supplierName = newVal.supplierName;\r\n          this.invoiceNumber = newVal.invoiceNumber;\r\n          this.invoiceDate = newVal.invoiceDate;\r\n          this.invoiceCurrency = newVal.invoiceCurrency;\r\n          this.rateOfExchange = newVal.rateOfExchange;\r\n          this.invoiceTotal = newVal.invoiceTotal;\r\n          this.inlandAmount = newVal.inlandAmount;\r\n          this.insuranceAmount = newVal.insuranceAmount;\r\n          this.otherCharges = newVal.otherCharges;\r\n        },\r\n        deep: true,\r\n      },\r\n      \"customsEntryForm.waybillDate\"(newDate) {\r\n            this.updateRates(newDate);\r\n      },\r\n    },\r\n    emits: ['submit'],\r\n    data() {\r\n      return {\r\n        files: {\r\n          commercialInvoice: null,\r\n          attachedSheet: null,\r\n          instructionSheet: null,\r\n        },\r\n        referenceNumber: '',\r\n        supplierName: '',\r\n        invoiceNumber: '',\r\n        invoiceDate: '',\r\n        invoiceCurrency: 'USD',\r\n        rateOfExchange: 0.0,\r\n        invoiceTotal: 0.0,\r\n        inlandAmount: 0.0,\r\n        insuranceAmount: 0.0,\r\n        otherCharges: 0.0,\r\n        vehicles: [],\r\n        waybillFiles: [],\r\n        seatPositionOptions : [\r\n          {detail: 'Left Hand Drive', code: 'LHD'},\r\n          {detail: 'Right Hand Drive', code: 'RHD'},\r\n\r\n        ],\r\n        instructionList: [\r\n          {detail: 'Exempted but Bond then Extract', code: 'EB'},\r\n          {detail: 'Exempted clear off the Port', code: 'EC'},\r\n          {detail: 'Exempted from all duties and taxes but processing like a duty paid', code: 'DP'},\r\n          {detail: 'Bond', code: 'B'},\r\n          {detail: 'Duty Paid', code: 'DP'},\r\n        ],\r\n        fuelTypeOptions: [\r\n          {detail: 'CNG', code: 'CNG'},\r\n          {detail: 'Diesel', code: 'DSL'},\r\n          {detail: 'Electric', code: 'ELC'},\r\n          {detail: 'Hybrid', code: 'HYB'},\r\n          {detail: 'Petrol', code: 'PET'},\r\n          {detail: 'Other', code: 'OTH'},\r\n          {detail: 'Liquified Petroleum Gas', code: 'LPG'},\r\n        ],\r\n        vehicleCodeOptions: [],\r\n        currencies: [],\r\n        years: [],\r\n        countries: [],\r\n        npcCodeOptions: ['000'],\r\n        expandedIndex: null,\r\n        customsEntryForm: {...this.record},\r\n      };\r\n    },\r\n    mounted() {\r\n      this.setYears();\r\n      this.vehicleCodeOptions = VehicleList.getVehiclesList();\r\n      this.currencies = Currency.getCurrencyList();\r\n      this.pageSetup();\r\n      this.fetchNpcCodes();\r\n      this.fetchCountries();\r\n    },\r\n    computed: {\r\n      totalNumberOfVehicles(){\r\n        return this.vehicles.reduce((total, vehicle) => {return total + vehicle.details.length;}, 0);\r\n      },\r\n      finalTotal(){\r\n        const invoiceTotal = parseFloat(this.invoiceTotal) || 0.00;\r\n        const inlandAmount = parseFloat(this.inlandAmount) || 0.00;\r\n        const insuranceAmount = parseFloat(this.insuranceAmount) || 0.00;\r\n        const otherCharges = parseFloat(this.otherCharges) || 0.00;\r\n\r\n        const total = invoiceTotal + inlandAmount + insuranceAmount + otherCharges;\r\n        return total.toLocaleString('en-US', {minimumFractionDigits: 2})\r\n\r\n      },\r\n      calculatedTotal(){\r\n        const total = this.vehicles.reduce((acc, vehicle) => {\r\n          const currentTotal = this.convertToFloat(vehicle.quantity) * this.convertToFloat(vehicle.unitPrice);\r\n          return acc + currentTotal\r\n        }, 0);\r\n        return total;\r\n      },\r\n      availableCPCCodes(){\r\n        return this.customsEntryForm.regimeTypeOptions.flatMap(regime => regime.cpcCodes)\r\n      }\r\n    },\r\n    methods: {\r\n      handleWaybillUpload(event) {\r\n        console.log(\"Handling Waybill Upload\")\r\n        this.waybillFiles = Array.from(event.target.files);\r\n        \r\n      },\r\n      updateVehicleDetialData(detail, field, value){\r\n        detail[field] = value;\r\n      },\r\n      updateVehicleData(vehicle, field, value){\r\n        vehicle[field] = value;\r\n      },\r\n      deleteRow(data, itemIndex){\r\n        data.splice(itemIndex, 1);\r\n      },\r\n      deleteVehicle(data, itemIndex){\r\n        data.splice(itemIndex, 1);\r\n      },\r\n      async generateTTC84(){\r\n        console.log(\"Generating TTC84\");\r\n          let c84Obj = {\r\n              declarationNumber: this.referenceNumber,\r\n              declarationDate: Utilities.getCurrentDateString(),\r\n              regimeCode: \"C4\",\r\n              declarantName: \"RAMNARINE RAMPERSAD\",\r\n              declarantNumber: \"BR0285\",\r\n              referenceNumber: this.referenceNumber,\r\n              importer: this.customsEntryForm.importerName,\r\n              importNumber: \"\",\r\n              declarationContent: \"\",\r\n              CPCCode: \"4000\",\r\n              extensionCode: \"\",\r\n              signatoryName: \"\",\r\n              signatoryStatus: \"\",\r\n              presigned: false,\r\n          };\r\n          const selectedImporter = this.customsEntryForm.importers.find(\r\n              (importer) => importer.id === this.customsEntryForm.importerId\r\n          );\r\n          const importerTaxIdentificationNumber = selectedImporter?.taxIdentificationNumber;\r\n          c84Obj.importNumber = importerTaxIdentificationNumber;\r\n          let signatories = await DatabaseConnector.fetchDeclarants();\r\n          console.log(\"Signatories: \", signatories);\r\n          signatories = signatories.filter(\r\n              (signatory) => signatory.importerCode === this.customsEntryForm.importerId\r\n          );\r\n          DatabaseConnector.getSpecialExemptionDeclarations(this.customsEntryForm.importerId)\r\n              .then((response) => {\r\n                  const declarationNumbers = response.map((declaration) => declaration.declaration_number);\r\n                  SweetAlertConnector.form(declarationNumbers, signatories).then((selection) => {\r\n                      c84Obj.presigned = selection.generatePreSigned;\r\n                      const selectedDeclearationIndex = parseInt(selection.select1);\r\n                      const selectedDelcaration = response[selectedDeclearationIndex];\r\n                      c84Obj.declarationContent = `${selectedDelcaration.content.replace(/\\\\n/g, \"\\n\")}`;\r\n                      c84Obj.extensionCode = selectedDelcaration.extensionCode;\r\n\r\n                      const selectedSignatory = signatories.find(\r\n                          (signatory) => signatory.id === parseInt(selection.select2)\r\n                      );\r\n                      c84Obj.signatoryName = selectedSignatory.name;\r\n                      c84Obj.signatoryStatus = selectedSignatory.status;\r\n                      DatabaseConnector.generateC84Form(c84Obj)\r\n                          .then((response) => {\r\n                              SweetAlertConnector.closeCurrentAlert();\r\n                              SweetAlertConnector.showSuccessAlert(\"C84 Form Generated Successfully!\");\r\n                              const fileURL = window.URL.createObjectURL(\r\n                                  new Blob([response], {\r\n                                      type: \"application/pdf\",\r\n                                  })\r\n                              );\r\n                              const fileLink = document.createElement(\"a\");\r\n                              const fileName = `C84 Form - ${this.entryDetails?.entry_number}.pdf`;\r\n                              fileLink.href = fileURL;\r\n                              fileLink.setAttribute(\"download\", fileName);\r\n                              document.body.appendChild(fileLink);\r\n                              fileLink.click();\r\n                              fileLink.remove();\r\n                          })\r\n                          .catch((error) => {\r\n                              console.error(\"Failed to generate C84 Form:\", error);\r\n                              SweetAlertConnector.showErrorAlert(\"Failed to generate C84 Form!\");\r\n                          });\r\n                  });\r\n                  // c84Obj.specialExemptionDeclarations = response\r\n              })\r\n              .catch((error) => {\r\n                  console.error(\"Failed to get special exemption declarations:\", error);\r\n              });\r\n          console.log(\"C84 Object: \", c84Obj);\r\n      },\r\n      goToValuationFormPage(){\r\n        const invoiceNumbers = this.invoiceNumber;\r\n        let netPrice = this.invoiceTotal;\r\n        if(this.customsEntryForm.incoTerms === 'CIF'){\r\n          netPrice = parseFloat(this.invoiceTotal) + parseFloat(this.customsEntryForm.freightAmount) + parseFloat(this.customsEntryForm.insuranceAmount) + parseFloat(this.customsEntryForm.otherCharges);\r\n        }\r\n        this.$router.push({\r\n          name: \"CustomsDeclarationForm\",\r\n          query: {\r\n            buyerId: this.customsEntryForm.importerId,\r\n            sellerId: this.customsEntryForm.exporterId,\r\n            invoiceNumber: invoiceNumbers,\r\n            invoiceTotal: netPrice,\r\n            currency: this.invoiceCurrency,\r\n            rateOfExchange: this.rateOfExchange,\r\n            freightAmount: this.customsEntryForm.freightAmount * this.customsEntryForm.freightRateOfExchange,\r\n            insurance: this.customsEntryForm.insuranceAmount * this.customsEntryForm.insuranceRateOfExchange,\r\n            incoTerms: this.customsEntryForm.incoTerms,\r\n            referenceNumber: this.referenceNumber,\r\n          }\r\n        })\r\n      },\r\n      handleTariffInput(vehicle){\r\n        console.log(\"Handling Tariff Input\")\r\n        const value = vehicle.thnNumber;\r\n        console.log(\"Value: \", value)\r\n        // Remove any existing dots and non-numeric characters\r\n        const sanitizedValue = value.replace(/[^0-9]/g, \"\");\r\n        console.log(\"Sanitized Value: \", sanitizedValue)\r\n        // Format the value as XXXX.XX.XX\r\n        const formattedValue = this.formatTariffCode(sanitizedValue);\r\n        console.log(\"Formatted Value: \", formattedValue)\r\n        // Update the text content of the cell\r\n        vehicle.thnNumber = formattedValue;\r\n        // this.moveCursorToEnd(event.target);\r\n        // Update the item data after handling the input\r\n      },\r\n      formatTariffCode(value){\r\n        let formattedValue = \"\";\r\n        // Insert dots after the first four characters and after the next two characters\r\n        for (let i = 0; i < value.length; i++) {\r\n            if (i === 4 || i === 6 || i === 8) {\r\n                formattedValue += \".\";\r\n            }\r\n            formattedValue += value[i];\r\n        }\r\n        return this.truncateString(formattedValue);\r\n      },\r\n      updateTariffCode(selectedVehicle, commodityCode){\r\n        const value = commodityCode;\r\n        this.updateVehicleData(selectedVehicle, 'thnNumber', value);\r\n        console.log(\"Updating Tariff Code\", value)\r\n        // const selectedVehicle = this.vehicles[vehicleIndex];\r\n        // console.log(\"Selected Vehicle: \", selectedVehicle)\r\n        if (value === undefined || value === null || value.trim().length === 0 || value === \"N/A\") {\r\n          selectedVehicle.icdCharge = 0;\r\n          selectedVehicle.vatCharge = 0;\r\n          selectedVehicle.mvtCharge = 0;\r\n          return;\r\n        }\r\n        DatabaseConnector.getCommodityCharges(value.replace(/\\./g, \"\")).then((chargesResponse) => {\r\n          // console.log(\"Charges Response: \", chargesResponse)\r\n          let icdObject = chargesResponse.charges[\"import custom duty\"];\r\n          const icdCharge = icdObject === undefined ? 0 : parseFloat(icdObject[0].charge_amount);\r\n          let vatObject = chargesResponse.charges[\"value added tax\"];\r\n          const vatCharge = vatObject === undefined ? 0 : parseFloat(vatObject[0].charge_amount);\r\n          let mvtObject = chargesResponse.charges[\"motor vehicle tax\"];\r\n          const mvtCharge = mvtObject === undefined ? 0 : parseFloat(mvtObject[0].charge_amount);\r\n          // console.log(\"ICD Charge: \", icdCharge);\r\n          // console.log(\"VAT Charge: \", vatCharge);\r\n          // console.log(\"MVT Charge: \", mvtCharge);\r\n\r\n          selectedVehicle.icdCharge = icdCharge;\r\n          selectedVehicle.vatCharge = vatCharge;\r\n          selectedVehicle.mvtCharge = mvtCharge;\r\n          selectedVehicle.commodityCodeStatus = 'valid';\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching charges: \", error);\r\n          selectedVehicle.icdCharge = 0;\r\n          selectedVehicle.vatCharge = 0;\r\n          selectedVehicle.mvtCharge = 0;\r\n          selectedVehicle.commodityCodeStatus = 'invalid';\r\n\r\n        });\r\n      },\r\n        createBlankChassis(){\r\n            const chassis = {\r\n                chassisNumber: \"\",\r\n                engineNumber: \"\",\r\n                exteriorColor: \"\",\r\n                interiorColor: \"\",\r\n                customerName: \"\",\r\n                customerTIN: \"\",\r\n                brokerInstructions: \"DP\",\r\n                cpcCode: Configuration.getConfigurations().defaultCPCCode,\r\n                npcCode: \"000\",\r\n                edNumber: \"\",\r\n                quantity: 1,\r\n                grossWeight: 0,\r\n                netWeight: 0,\r\n                engineDisplacement: \"\",\r\n                manufactureYear: \"2000\",\r\n            };\r\n            return chassis;\r\n        },\r\n        updateRates(shippedOnBoardDate){\r\n          console.log(\"Updating Rates\", shippedOnBoardDate)\r\n          DatabaseConnector.fetchRatesBasedOnShippedOnBoard(shippedOnBoardDate).then(rates => {\r\n            console.log(\"Rates:\", rates);\r\n            this.customsEntryForm.ratesOfExchange = rates;\r\n            if(this.invoiceCurrency != '' && rates.length > 0){\r\n              this.rateOfExchange = rates.find(rate => rate.base_currency === this.invoiceCurrency).rate;\r\n            }\r\n          });\r\n        },\r\n        createBlankVehicle(){\r\n            const vehicle = {\r\n                vehicleCode: \"\",\r\n                description: \"\",\r\n                thnNumber: \"\",\r\n                quantity: 1,\r\n                unitPrice: 0,\r\n                grossWeight: 0,\r\n                netWeight: 0,\r\n                curbWeight: 0,\r\n                engineDisplacement: \"\",\r\n                fuelType: \"PET\",\r\n                numberOfSeats: 5,\r\n                numberOfDoors: 4,\r\n                tyreSize: \"\",\r\n                details: [this.createBlankChassis()],\r\n            };\r\n            return vehicle;\r\n        },\r\n        addVehicle() {\r\n            this.vehicles.push(this.createBlankVehicle());\r\n        },\r\n        addChassis(vehicle) {\r\n            vehicle.details.push(this.createBlankChassis());\r\n        },\r\n      compareInvoiceStyle(){\r\n        return this.compareInvoiceTotal() ? { }: {backgroundColor: 'red', color: 'white' };\r\n      },\r\n      compareInvoiceTotal(){\r\n        const invoiceTotal = parseFloat(this.invoiceTotal) || 0.00;\r\n        const calculatedTotal = parseFloat(this.calculatedTotal) || 0.00;\r\n        // console.log(\"Invoice Total: \", invoiceTotal, \"Calculated Total: \", calculatedTotal)\r\n        // console.log(\"Comparison: \", invoiceTotal === calculatedTotal)\r\n        return invoiceTotal === calculatedTotal\r\n      },\r\n      updateInvoiceData(field, value){\r\n        this[field] = value;\r\n      },\r\n      naStyle(value) {\r\n        if ([null, undefined, '', false].includes(value)) {\r\n          return { backgroundColor: 'yellow', color: 'black' };\r\n        }\r\n        return {};\r\n      },\r\n      convertToFloat(value){\r\n        if(value === null || value === undefined || value === ''){\r\n          return 0.00;\r\n        }\r\n        if(!isNaN(value)){\r\n          return parseFloat(value);\r\n        }\r\n        let processedValue = value.replace(/[^0-9.]/g, '');\r\n        return parseFloat(processedValue);\r\n      },\r\n      caclulateVehicleTotalCost(vehicle){\r\n        // return parseFloat(vehicle.quantity) * parseFloat(vehicle.unitPrice);\r\n        console.log(\"Calculating Vehicle Total Cost\", vehicle.quantity, vehicle.unitPrice)\r\n        let totalCost = this.convertToFloat(vehicle.quantity) * this.convertToFloat(vehicle.unitPrice);\r\n        vehicle.extensionPrice = totalCost;\r\n        console.log(\"Total Cost: \", totalCost)\r\n        return parseFloat(totalCost).toLocaleString('en-US', {minimumFractionDigits: 2})\r\n      },\r\n      handleButtonClick(){\r\n        if (this.isEditMode) {\r\n          console.log(\"Updating Entry\")\r\n          this.updateEntry();\r\n        } else {\r\n          console.log(\"Saving Entry\")\r\n          this.saveEntry();\r\n        }\r\n      },\r\n      sanitizeVehicleData(){\r\n        console.log(\"Sanitizing Vehicle Data\")\r\n        console.log(\"Vehicles: \", this.vehicles)\r\n        return this.vehicles.flatMap(vehicle =>\r\n          vehicle.details.map(detail => ({\r\n            \r\n            description: vehicle.description,\r\n            quantity: detail.quantity,\r\n            unit_price: parseFloat(vehicle.unitPrice),\r\n            amount: parseFloat(detail.quantity) * parseFloat(vehicle.unitPrice),\r\n            thn_code: vehicle.thnNumber,\r\n            product_code: vehicle.vehicleCode,\r\n            country_of_origin: '',\r\n            cpcCode: detail.cpcCode,\r\n            npcCode: detail.npcCode,\r\n            vatApplicable: true,\r\n\r\n            grossWeight: vehicle.grossWeight,\r\n            netWeight: vehicle.netWeight,\r\n            curbWeight: vehicle.curbWeight,\r\n            fuelType: vehicle.fuelType,\r\n            seatPosition: vehicle.seatPosition,\r\n            modelCode: vehicle.modelCode,\r\n            numberOfSeats: vehicle.numberOfSeats,\r\n            numberOfDoors: vehicle.numberOfDoors,\r\n            tyreSize: vehicle.tyreSize,\r\n            engineDisplacement: vehicle.engineDisplacement,\r\n            chassisNumber: detail.chassisNumber,\r\n            engineNumber: detail.engineNumber,\r\n            exteriorColor: detail.exteriorColor,\r\n            customerName: detail.customerName,\r\n            tinNumber: detail.customerTIN,\r\n            brokerInstructions: detail.brokerInstructions,\r\n            edNumber: detail.edNumber,\r\n            manufactureYear: detail.manufactureYear,\r\n          }))\r\n        )\r\n      },\r\n      updateWaybill(){\r\n        return {\r\n          waybill_number: this.customsEntryForm.waybillNumber,\r\n          waybill_date: this.customsEntryForm.waybillDate,\r\n          mode_of_transport: this.customsEntryForm.modeOfTransport,\r\n          \r\n          freight_type: this.customsEntryForm.freightType,\r\n          marks_and_numbers: this.customsEntryForm.marksAndNumbers,\r\n          package_type: this.customsEntryForm.packageType,\r\n          package_quantity: this.customsEntryForm.numberOfPackages,\r\n          country_of_origin: this.customsEntryForm.country_of_origin,\r\n          country_of_final_destination: this.customsEntryForm.countryOfFinalDestination,\r\n          importer: this.customsEntryForm.importerId,\r\n          shipper: this.customsEntryForm.exporterId,\r\n          vessel: this.customsEntryForm.vesselId,\r\n          port_of_discharge: this.customsEntryForm.portOfDischargeId,\r\n          waybill_id: this.customsEntryForm.waybill_id\r\n        } \r\n      },\r\n      formatInvoiceData(){\r\n        return {\r\n          invoice_id: '',\r\n          invoice_number: this.invoiceNumber,\r\n          invoice_date: this.invoiceDate,\r\n          invoice_total: this.invoiceTotal,\r\n          sub_total: this.invoiceTotal,\r\n          supplier_name: this.supplierName,\r\n          taxed_amount: 0.00,\r\n          supplier_address: '',\r\n          purchase_order_number: '',\r\n          inland: this.inlandAmount === '' ? 0.00 : this.inlandAmount,\r\n          insurance: this.insuranceAmount === '' ? 0.00 : this.insuranceAmount,\r\n          other_charges: this.otherCharges === '' ? 0.00 : this.otherCharges,\r\n          entry_id: '',\r\n          currency: this.invoiceCurrency,\r\n          rate_of_exchange: this.rateOfExchange,\r\n        }\r\n      },\r\n      formatInvoiceLines(){\r\n        // return this.vehicles.map(vehicle => {\r\n        //   return {\r\n        //     invoice_line_id: vehicle.invoiceLineId,\r\n        //     description: vehicle.description,\r\n        //     quantity: vehicle.quantity,\r\n        //     unit_price: vehicle.unitPrice,\r\n        //     amount: parseFloat(vehicle.quantity) * parseFloat(vehicle.unitPrice),\r\n        //     tariff_code: vehicle.thnNumber,\r\n        //     product_code: vehicle.vehicleCode,\r\n        //     country_of_origin: 'US',\r\n        //     cpcCode: vehicle.details[0].cpcCode || Configuration.getConfigurations().defaultCPCCode,\r\n        //     npcCode: vehicle.details[0].npcCode || '000',\r\n        //     vatApplicable: true,\r\n        //   }\r\n        // });\r\n        return this.vehicles.flatMap(vehicle => {\r\n          return vehicle.details.map(detail => {\r\n            return {\r\n              description: vehicle.description,\r\n              quantity: 1,\r\n              unit_price: vehicle.unitPrice,\r\n              amount: parseFloat(vehicle.unitPrice),\r\n              tariff_code: vehicle.thnNumber,\r\n              product_code: vehicle.vehicleCode,\r\n              country_of_origin: '',\r\n              cpc_code: detail.cpcCode,\r\n              npc_code: detail.npcCode,\r\n              vatApplicable: true,\r\n              invoice_line_id: detail.invoiceLineId,\r\n              \r\n            }\r\n          })\r\n        });\r\n      },\r\n      formatVehicleLines(){\r\n        return this.vehicles.flatMap(vehicle => {\r\n          return vehicle.details.map(detail => {\r\n            return {\r\n              id: detail.id,\r\n              gross_weight: vehicle.grossWeight,\r\n              net_weight: vehicle.netWeight,\r\n              curb_weight: vehicle.curbWeight,\r\n              fuel_type: vehicle.fuelType,\r\n              seat_position: vehicle.seatPosition,\r\n              model_code: vehicle.modelCode,\r\n              number_of_seats: vehicle.numberOfSeats,\r\n              number_of_doors: vehicle.numberOfDoors,\r\n              tyre_size: vehicle.tyreSize,\r\n              engine_displacement: vehicle.engineDisplacement,\r\n              chassis_number: detail.chassisNumber,\r\n              engine_number: detail.engineNumber,\r\n              exterior_color: detail.exteriorColor,\r\n              customer_name: detail.customerName,\r\n              tin_number: detail.customerTIN,\r\n              broker_instructions: detail.brokerInstructions,\r\n              ed_number: detail.edNumber,\r\n              manufacture_year: detail.manufactureYear,\r\n            }\r\n          })\r\n        });\r\n      },\r\n      updateEntryData(){\r\n        return {\r\n          net_weight: this.customsEntryForm.netWeight,\r\n          gross_weight: this.customsEntryForm.grossWeight,\r\n          entry_number: this.referenceNumber,\r\n          freight_charge: this.customsEntryForm.freightAmount,\r\n          declarant: this.customsEntryForm.declarantId,\r\n          incoterms: this.customsEntryForm.incoTerms,\r\n          regime_type: this.customsEntryForm.regimeType,\r\n          deposit: this.customsEntryForm.depositAmount,\r\n          container_charges: this.customsEntryForm.containerCharges,\r\n          additional_charges: this.customsEntryForm.additionalCharges,\r\n          local_fee: this.customsEntryForm.localFee,\r\n          country_last_provenance: this.customsEntryForm.countryLastProvinance,\r\n          trading_country: this.customsEntryForm.tradingCountry,\r\n        }\r\n      },\r\n      updateEntry(){\r\n        const waybillData = this.updateWaybill();\r\n        const entryData = this.updateEntryData();\r\n        const invoiceData = this.formatInvoiceData();\r\n        const invoiceLines = this.formatInvoiceLines();\r\n        console.log(\"Invoice Lines: \", invoiceLines)\r\n        const vehicleLines = this.formatVehicleLines();\r\n\r\n        \r\n        const payload = {\r\n          waybill: waybillData,\r\n          entry: entryData,\r\n          invoice: invoiceData,\r\n          invoiceLines: invoiceLines,\r\n          vehicleLines: vehicleLines,\r\n        };\r\n        console.log(\"Generating Payload\", payload)\r\n        this.$emit('submit', payload);\r\n      },\r\n      saveEntry(){\r\n        const invoiceData = {\r\n          invoice_total: this.invoiceTotal,\r\n          invoice_id: this.invoiceNumber,\r\n          invoice_date: this.invoiceDate,\r\n          subtotal: this.invoiceTotal,\r\n          vendor_name: this.supplierName,\r\n          total_tax: 0.00,\r\n          vendor_address: '',\r\n          purchase_order: '',\r\n          inland: this.inlandAmount,\r\n          insurance: this.insuranceAmount,\r\n          otherCharges: this.otherCharges,\r\n          currency: this.invoiceCurrency,\r\n          rate_of_exchange: this.rateOfExchange,\r\n          invoice_items: this.sanitizeVehicleData(),\r\n        }\r\n        const entryData = {\r\n          referenceNumber: this.referenceNumber,\r\n          waybillNumber: this.customsEntryForm.waybillNumber,\r\n          waybillDate: this.customsEntryForm.waybillDate,\r\n          modeOfTransport: this.customsEntryForm.modeOfTransport,\r\n          freightType: this.customsEntryForm.freightType,\r\n          marksAndNumbers: this.customsEntryForm.marksAndNumbers,\r\n          countryOfOrigin: this.customsEntryForm.countryOfOrigin,\r\n          countryOfFinalDestination: this.customsEntryForm.countryOfFinalDestination,\r\n          countryLastProvenance: this.customsEntryForm.countryLastProvinance,\r\n          tradingCountry: this.customsEntryForm.tradingCountry,\r\n          kindOfPackage: this.customsEntryForm.packageType,\r\n          numberOfPackages: this.customsEntryForm.numberOfPackages,\r\n          totalCargoValue: this.customsEntryForm.totalCargoValue,\r\n          freightCharge: this.customsEntryForm.freightAmount,\r\n          insuranceAmount: this.customsEntryForm.insuranceAmount,\r\n          otherCharges: this.customsEntryForm.otherCharges,\r\n          rateOfExchange: this.customsEntryForm.rateOfExchange,\r\n          netWeight: this.customsEntryForm.netWeight,\r\n          grossWeight: this.customsEntryForm.grossWeight,\r\n          declarant: this.customsEntryForm.declarantId,\r\n          incoTerms: this.customsEntryForm.incoTerms,\r\n          importer: this.customsEntryForm.importerId,\r\n          shipper: this.customsEntryForm.exporterId,\r\n          vessel: this.customsEntryForm.vesselId,\r\n          portOfDischarge: this.customsEntryForm.portOfDischargeId,\r\n          regimeType: this.customsEntryForm.regimeType,\r\n          deposit: this.customsEntryForm.depositAmount,\r\n          containerCharges: this.customsEntryForm.containerCharges,\r\n          additionalCharges: this.customsEntryForm.additionalCharges,\r\n          localFee: this.customsEntryForm.localFee,\r\n          entryType: ENTRY_TYPES.VEHICLES,\r\n          entryStatus: ENTRY_STATUS.STORED_AND_NOT_CLASSIFIED,\r\n          invoiceList: [invoiceData]\r\n        }\r\n        console.log(\"Entry Data\", entryData)\r\n        this.$emit('submit', entryData);\r\n        \r\n      },\r\n      pageSetup(){\r\n        this.getRegimeTypes().then(() => {\r\n          this.setDefaults();\r\n        });\r\n      },\r\n      async fetchCountries() {\r\n        try {\r\n          const response = await fetch('https://restcountries.com/v3/all');\r\n          const data = await response.json();\r\n          this.countries = data.map(country => ({\r\n            name: country.name.common,\r\n            code: country.cca2\r\n          }));\r\n        } catch (error) {\r\n          console.error('Failed to fetch countries:', error);\r\n        }\r\n      },\r\n      setDefaults(){\r\n        const regimeData = this.customsEntryForm.regimeTypeOptions.find(regime => regime.regimeTypeCode  === Configuration.getConfigurations().defaultRegimeType);\r\n        this.customsEntryForm.regimeType = regimeData.regimeTypeId;\r\n      },\r\n      setYears() {\r\n        const currentYear = new Date().getFullYear();\r\n        const startYear = 1990;\r\n        for (let year = startYear; year <= currentYear; year++) {\r\n          this.years.push(year);\r\n        }\r\n      },\r\n      async fetchNpcCodes(){\r\n        DatabaseConnector.fetchNpcCodes().then(data => {\r\n          this.npcCodeOptions = data;\r\n          console.log(\"NPC Codes: \", data)\r\n        });\r\n      },\r\n      async getRegimeTypes(){\r\n        return DatabaseConnector.fetchCpcCodes('TT').then(data => {\r\n          this.customsEntryForm.regimeTypeOptions = data;\r\n        });\r\n      },\r\n      toggleDetails(index) {\r\n        this.expandedIndex = this.expandedIndex === index ? null : index;\r\n      },\r\n      handleFileChange(event, fileKey) {\r\n        this.files[fileKey] = event.target.files[0];\r\n      },\r\n      async readToyotaFiles() {\r\n        // if (!this.referenceNumber || !this.commercialInvoice || !this.attachedSheet || !this.instructionSheet) {\r\n        //   SweetAlertConnector.showErrorAlert('Please fill in all the required fields before submitting');\r\n        //   return;\r\n        // }\r\n        if(this.waybillFiles.length > 0){\r\n          this.readWaybillModel();\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('commercialInvoice', this.files.commercialInvoice);\r\n        formData.append('pdfAttachments', this.files.attachedSheet);\r\n        formData.append('toyotaInstructionExcel', this.files.instructionSheet);\r\n        formData.append('reference_number', 'RLL76568');\r\n\r\n        SweetAlertConnector.showLoadingAlert('Uploading Files');\r\n\r\n        DatabaseConnector.readVehicleFiles(formData)\r\n          .then((response) => {\r\n            SweetAlertConnector.showSuccessAlert('Files Uploaded Successfully');\r\n            console.log(response);\r\n            this.vehicles = this.convertVehicleData(response);\r\n            for (let i = 0; i < this.vehicles.length; i++) {\r\n              // this.vehicles[i].invoiceLineId = i + 1;\r\n              // for (let j = 0; j < this.vehicles[i].details.length; j++) {\r\n              //   this.vehicles[i].details[j].invoiceLineId = i + 1;\r\n              // }\r\n              console.log(\"Vehicle Total: \", this.caclulateVehicleTotalCost(this.vehicles[i]))\r\n            }\r\n\r\n            this.customsEntryForm.totalCargoValue = this.invoiceTotal;\r\n\r\n            console.log(this.compareInvoiceTotal());\r\n\r\n          })\r\n          .catch((error) => {\r\n            SweetAlertConnector.showErrorAlert('Error Uploading Files');\r\n            console.error('Error details:', error);\r\n            if (error.response) {\r\n              console.error('Error response data:', error.response.data);\r\n              console.error('Error response status:', error.response.status);\r\n              console.error('Error response headers:', error.response.headers);\r\n            }\r\n          });\r\n      },\r\n      convertVehicleData(jsonArray) {\r\n        const groupedByEDNumber = [];\r\n        const allcpcCodes = this.customsEntryForm.regimeTypeOptions.flatMap(regime => regime.cpcCodes)\r\n        const defaultCPCId = allcpcCodes.find(cpc => cpc.code === Configuration.getConfigurations().defaultCPCCode).cpcId;\r\n\r\n        // const boncedCPCCode = allcpcCodes.find(cpc => cpc.code === Configuration.getConfigurations().boncedCPCCode).cpcId;\r\n  \r\n        jsonArray.forEach(item => {\r\n          const edNumber = item['ED No'];\r\n          const details = {\r\n            chassisNumber: item[\"chassis number\"],\r\n            engineNumber: item[\"Engine No\"],\r\n            exteriorColor: item[\"Color Ext\"],\r\n            interiorColor: item[\"Color Int\"],\r\n            customerName: item[\"Customer Name\"],\r\n            customerTIN: item.customer_tin ?? \"\",\r\n            brokerInstructions:  this.instructionList.find((instruction) => instruction.detail === item[\"Broker Instruction\"])?.code || \"DP\",\r\n            cpcCode: defaultCPCId,\r\n            npcCode: \"000\",\r\n            edNumber: edNumber,\r\n            quantity: item[\"quantity\"],\r\n            grossWeight: item[\"gross_weight\"],\r\n            netWeight: item[\"net_weight\"],\r\n            engineDisplacement: item[\"engine_displacement\"],\r\n            manufactureYear: item.manufacture_year ?? \"2000\",\r\n          };\r\n\r\n          // const currentProductCode = item['model_code'];\r\n          const vehicle = groupedByEDNumber.find(vehicle => vehicle.edNumber === edNumber);\r\n          if (vehicle) {\r\n            vehicle.quantity += parseInt(item['quantity']);\r\n            vehicle.details.push(details);\r\n            return;\r\n          }\r\n          else {\r\n            groupedByEDNumber.push({\r\n                vehicleCode: item['model_code'],\r\n                description: item[\"description\"],\r\n                thnNumber: item[\"commodity_code\"] === null ? \"\" : item[\"commodity_code\"],\r\n                quantity: 1,\r\n                edNumber: item[\"ED No\"],\r\n                unitPrice: item[\"Unit Price\"],\r\n                grossWeight: item[\"gross_weight\"] === null ? 0 : item[\"gross_weight\"],\r\n                netWeight: item[\"net_weight\"] === null ? 0 : item[\"net_weight\"],\r\n                curbWeight: item[\"curb_weight\"] === null ? 0 : item[\"curb_weight\"],\r\n                engineDisplacement: item[\"engine_displacement\"],\r\n                // fuelType: this.fuelTypeOptions.find(fuelType => fuelType.detail.toLowerCase() === item[\"fuel_type\"].toLowerCase())?.code || \"PET\",\r\n                numberOfSeats: item[\"number_of_seats\"] === null ? 5 : item[\"number_of_seats\"],\r\n                numberOfDoors: item[\"number_of_doors\"] === null ? 4 : item[\"number_of_doors\"],\r\n                tyreSize: item[\"tyre_size\"] === null ? \"\" : item[\"tyre_size\"],\r\n                modelCode: item[\"model_code\"] === null ? \"\" : item[\"model_code\"],\r\n                seatPosition: item[\"seat_position\"] === null ? \"RHD\" : item[\"seat_position\"],\r\n                details: [details],\r\n            });\r\n          }\r\n        });\r\n        console.log(\"Vehicle Data Read\", groupedByEDNumber);\r\n        \r\n        return groupedByEDNumber\r\n      },\r\n      convertVehicleDataOld(jsonArray) {\r\n        const groupedByProductCode = [];\r\n        const allcpcCodes = this.customsEntryForm.regimeTypeOptions.flatMap(regime => regime.cpcCodes)\r\n        const defaultCPCId = allcpcCodes.find(cpc => cpc.code === Configuration.getConfigurations().defaultCPCCode).cpcId;\r\n\r\n        // const boncedCPCCode = allcpcCodes.find(cpc => cpc.code === Configuration.getConfigurations().boncedCPCCode).cpcId;\r\n  \r\n        jsonArray.forEach(item => {\r\n          const productCode = item['model_code'];\r\n          const details = {\r\n            chassisNumber: item[\"chassis number\"],\r\n            engineNumber: item[\"Engine No\"],\r\n            exteriorColor: item[\"Color Ext\"],\r\n            interiorColor: item[\"Color Int\"],\r\n            customerName: item[\"Customer Name\"],\r\n            customerTIN: item.customer_tin ?? \"\",\r\n            brokerInstructions:  this.instructionList.find((instruction) => instruction.detail === item[\"Broker Instruction\"])?.code || \"DP\",\r\n            cpcCode: defaultCPCId,\r\n            npcCode: \"000\",\r\n            edNumber: item[\"ED No\"],\r\n            quantity: item[\"quantity\"],\r\n            grossWeight: item[\"gross_weight\"],\r\n            netWeight: item[\"net_weight\"],\r\n            engineDisplacement: item[\"engine_displacement\"],\r\n            manufactureYear: item.manufacture_year ?? \"2000\",\r\n          };\r\n\r\n          const currentProductCode = item['model_code'];\r\n          const vehicle = groupedByProductCode.find(vehicle => vehicle.vehicleCode === currentProductCode);\r\n          if (vehicle) {\r\n            vehicle.quantity += parseInt(item['quantity']);\r\n            vehicle.details.push(details);\r\n            return;\r\n          }\r\n          else {\r\n            groupedByProductCode.push({\r\n                vehicleCode: productCode,\r\n                description: item[\"description\"],\r\n                thnNumber: item[\"commodity_code\"] === null ? \"\" : item[\"commodity_code\"],\r\n                quantity: 1,\r\n                unitPrice: item[\"Unit Price\"],\r\n                grossWeight: item[\"gross_weight\"] === null ? 0 : item[\"gross_weight\"],\r\n                netWeight: item[\"net_weight\"] === null ? 0 : item[\"net_weight\"],\r\n                curbWeight: item[\"curb_weight\"] === null ? 0 : item[\"curb_weight\"],\r\n                engineDisplacement: item[\"engine_displacement\"],\r\n                // fuelType: this.fuelTypeOptions.find(fuelType => fuelType.detail.toLowerCase() === item[\"fuel_type\"].toLowerCase())?.code || \"PET\",\r\n                numberOfSeats: item[\"number_of_seats\"] === null ? 5 : item[\"number_of_seats\"],\r\n                numberOfDoors: item[\"number_of_doors\"] === null ? 4 : item[\"number_of_doors\"],\r\n                tyreSize: item[\"tyre_size\"] === null ? \"\" : item[\"tyre_size\"],\r\n                modelCode: item[\"model_code\"] === null ? \"\" : item[\"model_code\"],\r\n                seatPosition: item[\"seat_position\"] === null ? \"RHD\" : item[\"seat_position\"],\r\n                details: [details],\r\n            });\r\n          }\r\n        });\r\n        console.log(\"Vehicle Data Read\", groupedByProductCode);\r\n        \r\n        return groupedByProductCode\r\n      },\r\n\r\n      readWaybillModel(){\r\n        console.log(\"Reading Waybill Model\")\r\n        const formData = new FormData();\r\n        this.waybillFiles.forEach((file) => {\r\n            formData.append(\"files\", file);\r\n        });\r\n        \r\n        DatabaseConnector.readWaybillModel(formData).then((response) => {\r\n            // this.waybillDataExtractionCompleted = true;\r\n            // this.dataExtractionLoadingMessage();\r\n            const waybillData = response[0]\r\n            console.log(\"Waybill Data\", waybillData)\r\n            this.customsEntryForm.waybillNumber = waybillData.waybill_number\r\n            this.customsEntryForm.numberOfPackages = Utilities.parseFloatFromString(waybillData.number_of_packages);\r\n            this.customsEntryForm.modeOfTransport = waybillData.mode_of_transport\r\n            const selectedImporter = Utilities.findClosestMatch(waybillData.consignee, this.customsEntryForm.importers)\r\n            console.log(\"Selected Importer\", selectedImporter)\r\n            this.customsEntryForm.importerId = selectedImporter.id\r\n\r\n            const selectedExporter = Utilities.findClosestMatch(waybillData.exporter, this.customsEntryForm.exporters)\r\n            console.log(\"Selected Exporter\", selectedExporter)\r\n            this.customsEntryForm.exporterId = selectedExporter.id\r\n\r\n            const selectedVessel = Utilities.findClosestMatch(waybillData.vessel, this.customsEntryForm.vessels)\r\n            console.log(\"Selected Vessel\", selectedVessel)\r\n            this.customsEntryForm.vesselId = selectedVessel.id\r\n\r\n            const selectedPort = Utilities.findClosestMatch(waybillData.port_of_discharge, this.customsEntryForm.ports)\r\n            console.log(\"Selected Port\", selectedPort)\r\n            this.customsEntryForm.portOfDischargeId = selectedPort.id\r\n\r\n            const shippedOnBoardString = waybillData.shipped_on_board_date;\r\n            try{\r\n                const parsedDate = Utilities.parseDate(shippedOnBoardString)\r\n                this.customsEntryForm.waybillDate = Utilities.formatDateString(parsedDate);\r\n            }\r\n            catch(error){\r\n                console.error(\"Failed to parse date\", error)\r\n            }\r\n\r\n            if(waybillData.freight_charges !== undefined && waybillData.freight_charges !== null && waybillData.freight_charges.trim().length > 0){\r\n                const freightCharge = Utilities.parseFreightCharges(waybillData.freight_charges);\r\n                this.customsEntryForm.freightAmount = freightCharge;\r\n            }\r\n\r\n            if(waybillData.gross_weight_in_kgs !== undefined && waybillData.gross_weight_in_kgs !== null){\r\n                this.customsEntryForm.grossWeight = Utilities.parseFloatFromString(waybillData.gross_weight_in_kgs)\r\n            }\r\n\r\n            if(waybillData.package_type !== undefined && waybillData.package_type !== null){\r\n                const selectedPackageType = Utilities.findClosestMatch(waybillData.package_type, this.customsEntryForm.packageTypes, 'text')\r\n                console.log(\"Selected Package Type\", selectedPackageType)\r\n                this.customsEntryForm.packageType = selectedPackageType.value\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to read waybill model\", error)\r\n            SweetAlertConnector.showErrorAlert(\"Failed to read waybill model. Please try again.\")\r\n        })\r\n      },\r\n\r\n      commodityCodeChange(event){\r\n        const value = event.target.innerText;\r\n        // Remove any existing dots and non-numeric characters\r\n        const sanitizedValue = value.replace(/[^0-9]/g, '');\r\n        // Format the value as XXXX.XX.XX\r\n        const formattedValue = this.includeFullStops(sanitizedValue);\r\n        // Update the text content of the cell\r\n        event.target.innerText = formattedValue;\r\n        this.moveCursorToEnd(event.target);\r\n        // Update the item data after handling the input\r\n      },\r\n\r\n      includeFullStops(value){\r\n        let formattedValue = '';\r\n        for (let i = 0; i < value.length; i++) {\r\n          if (i === 4 || i === 6 || i === 8) {\r\n            formattedValue += '.';\r\n          }\r\n          formattedValue += value[i];\r\n        }\r\n        return this.truncateString(formattedValue);\r\n      },\r\n\r\n      getChargeData(){\r\n        let promises = [];\r\n        this.vehicles.forEach(vehicle => {\r\n          const promise = DatabaseConnector.getCommodityCharges(vehicle.thnNumber.replace(/\\./g, '')).then(chargesResponse => {\r\n            console.log(chargesResponse);\r\n            let formattedCharge = Utilities.formatCharges(chargesResponse.charges, true);\r\n            vehicle.commodity = {\r\n              code: vehicle.thnNumber.replace(/\\./g, ''),\r\n              id: chargesResponse.id,\r\n              charges: formattedCharge\r\n            }\r\n            console.log(\"Vehicle Commodity\", vehicle.commodity);\r\n          }).catch(error => {\r\n            SweetAlertConnector.closeCurrentAlert();\r\n            SweetAlertConnector.showErrorAlert(`The following commodity code does not exist on Asycuda - ${vehicle.thnNumber}. Please update this and try again. `);\r\n            console.error('Error details:', error);\r\n            return Promise.reject(error);\r\n          });\r\n\r\n          promises.push(promise);\r\n        })\r\n\r\n        return Promise.all(promises);\r\n      },\r\n\r\n      generateAsycudaXML(){\r\n        console.log(\"Generating Asycuda XML\")\r\n        SweetAlertConnector.showLoadingAlert('Generating Asycuda XML');\r\n        const selectedPort = this.customsEntryForm.ports.find(port => port.id === this.customsEntryForm.portOfDischargeId);\r\n        console.log(\"Selected Port: \", selectedPort)\r\n        const selectedImporter = this.customsEntryForm.importers.find(importer => importer.id === this.customsEntryForm.importerId);\r\n        const selectedExporter = this.customsEntryForm.exporters.find(exporter => exporter.id === this.customsEntryForm.exporterId);\r\n        const selectedDeclarant = this.customsEntryForm.declarants.find(declarant => declarant.id === this.customsEntryForm.declarantId);\r\n        const selectedCountry = this.countries.find(country => country.code === this.customsEntryForm.countryOfOrigin);\r\n        const line_items = Utilities.formatVehicleDataXML(this.vehicles, this.availableCPCCodes, this.invoiceTotal, this.customsEntryForm.grossWeight, this.customsEntryForm.countryOfOrigin);\r\n        const typeOfDeclaration = this.customsEntryForm.regimeType == undefined? '':  this.customsEntryForm.regimeTypeCode?.slice(0, 2);\r\n        const general_procedural_code = this.customsEntryForm.regimeType == undefined? '':  this.customsEntryForm.regimeTypeCode?.slice(2);\r\n        const invoiceData = {\r\n          exworks: parseFloat(this.invoiceTotal),\r\n          rate_of_exchange: this.rateOfExchange,\r\n          invoice_currency: this.invoiceCurrency,\r\n          supplementary_charges_and_deductions: {\r\n            internal_freight: parseFloat(this.inlandAmount),\r\n            insurance: parseFloat(this.insuranceAmount),\r\n            other: parseFloat(this.otherCharges),\r\n            deductions: 0.00\r\n          },\r\n          line_items: line_items\r\n        };\r\n        const requestData = {\r\n          reference_number: this.referenceNumber,\r\n          group_items: true,\r\n          waybill: {\r\n            number: this.customsEntryForm.waybillNumber,\r\n            external_freight: this.customsEntryForm.freightAmount,\r\n            // insurance: this.customsEntryForm.insuranceAmount == undefined? 0.00 : this.customsEntryForm.insuranceAmount,\r\n            // other_charges: this.customsEntryForm.otherCharges == undefined? 0.00 : this.customsEntryForm.otherCharges,\r\n            importer: {\r\n              name: selectedImporter?.name,\r\n              tax_identification_number: selectedImporter.taxIdentificationNumber == undefined || null? '' : selectedImporter.taxIdentificationNumber\r\n            },\r\n            exporter: {\r\n              name: `${selectedExporter?.name}\\n${selectedExporter?.address}`,\r\n              tax_identification_number: selectedExporter.taxIdentificationNumber == undefined || null? '' : selectedExporter.taxIdentificationNumber\r\n            },\r\n            declarant: {\r\n              name: selectedDeclarant?.name,\r\n              tax_identification_number: selectedDeclarant.taxIdentificationNumber == undefined || null ? '' : selectedDeclarant.taxIdentificationNumber\r\n            },\r\n            charges: {\r\n                external_freight: {\r\n                    amount: this.customsEntryForm.freightAmount,\r\n                    currency: this.customsEntryForm.freightCurrency,\r\n                    rate_of_exchange: this.customsEntryForm.freightRateOfExchange,\r\n                },\r\n                insurance: {\r\n                    amount: this.customsEntryForm.insuranceAmount,\r\n                    currency: this.customsEntryForm.insuranceCurrency,\r\n                    rate_of_exchange: this.customsEntryForm.insuranceRateOfExchange,\r\n                },\r\n                other_charges: {\r\n                    amount: this.customsEntryForm.otherCharges,\r\n                    currency: this.customsEntryForm.otherChargesCurrency,\r\n                    rate_of_exchange: this.customsEntryForm.otherChargesRateOfExchange,\r\n                },\r\n            },\r\n            mode_of_transport: (this.customsEntryForm.modeOfTransport === \"Ocean\") ? \"1\" : (this.customsEntryForm.modeOfTransport === \"Air\") ? \"4\" : '',\r\n            container_flag : false,\r\n            vessel: this.customsEntryForm.vesselName,\r\n            country_of_origin: this.customsEntryForm.countryOfOrigin,\r\n            country_of_destination: this.customsEntryForm.countryOfFinalDestination == undefined? '' : this.customsEntryForm.countryOfFinalDestination,\r\n            number_of_packages: this.customsEntryForm.numberOfPackages + \"\",\r\n            type_of_declaration: typeOfDeclaration,\r\n            general_procedural_code: general_procedural_code,\r\n            office_of_destination: selectedPort.asycudaCode,\r\n            country_last_provinance: this.customsEntryForm.countryLastProvinance,\r\n            trading_country: this.customsEntryForm.tradingCountry,\r\n            country_export: this.customsEntryForm.countryOfOrigin,\r\n            delivery_terms: this.customsEntryForm.incoTerms,\r\n            delivery_terms_place: this.customsEntryForm.countryOfOrigin,\r\n            place_of_terms: selectedCountry?.name || 'US',\r\n            local_currency: 'TTD',\r\n            office_of_entry: selectedPort.asycudaCode,\r\n            location_of_goods: '', \r\n            \r\n          },\r\n          invoices: [invoiceData]\r\n        }\r\n        console.log(\"Request Data\", requestData);\r\n        DatabaseConnector.generateToyotaXML(requestData).then((xmlResponse) => {\r\n          SweetAlertConnector.closeCurrentAlert();\r\n          SweetAlertConnector.showSuccessAlert('Asycuda XML ZIP File Generated Successfully!');\r\n          const fileURL = window.URL.createObjectURL(new Blob([xmlResponse], { type: 'application/zip' }));\r\n            const fileLink = document.createElement('a');\r\n            const fileName = `Asycuda-XML.zip`;\r\n            fileLink.href = fileURL;\r\n            fileLink.setAttribute('download', fileName);\r\n            document.body.appendChild(fileLink);\r\n            fileLink.click();\r\n            fileLink.remove();\r\n        }).catch(() => {\r\n          SweetAlertConnector.showErrorAlert('Error Generating Asycuda XML');\r\n        });\r\n      },\r\n      generateWorksheet(){\r\n        console.log(\"Generating Worksheet\")\r\n        SweetAlertConnector.showLoadingAlert('Generating Worksheet');\r\n        this.getChargeData().then(() => {\r\n          const worksheetObject = Utilities.formatWorkSheetData(this.referenceNumber, 'TT', 'Ramnarine Rampersad', 'BR0285', this.customsEntryForm.regimeTypeCode, this.customsEntryForm.importerName, this.customsEntryForm.importerTaxIdentificationNumber, this.customsEntryForm.exporterName, this.customsEntryForm.exporterTaxIdentificationNumber, this.customsEntryForm.vesselName, this.customsEntryForm.portOfDischargeName, this.customsEntryForm.depositAmount, this.customsEntryForm.containerCharges, this.customsEntryForm.additionalCharges, this.customsEntryForm.localFee, this.customsEntryForm.freightAmount, this.customsEntryForm.insuranceAmount, this.customsEntryForm.otherCharges, this.customsEntryForm.freightCurrency, this.customsEntryForm.freightRateOfExchange, this.customsEntryForm.insuranceCurrency, this.customsEntryForm.insuranceRateOfExchange, this.customsEntryForm.otherChargesCurrency, this.customsEntryForm.otherChargesRateOfExchange);\r\n          const vehicleLines = Utilities.formatVehicleDataWorksheet(this.vehicles, this.availableCPCCodes, this.customsEntryForm.countryOfOrigin);\r\n          console.log(\"Vehicle Lines\", vehicleLines);\r\n          const invoiceData = {\r\n            name: this.invoiceNumber,\r\n            supplier: this.supplierName,\r\n            exworks: parseFloat(this.invoiceTotal),\r\n            invoice_currency: this.invoiceCurrency,\r\n            cif_foreign_currency: 0.00,\r\n            cif_local_currency: 0.00,\r\n            rate_of_exchange: this.rateOfExchange,\r\n            supplementary_charges_and_deductions: {\r\n              internal_freight: parseFloat(this.inlandAmount),\r\n              insurance: this.insuranceAmount,\r\n              other: this.otherCharges,\r\n              deductions: 0.00\r\n            },\r\n            line_items: vehicleLines\r\n          };\r\n          worksheetObject.invoices = [invoiceData];\r\n          console.log(\"Worksheet Object\", worksheetObject);\r\n          DatabaseConnector.generateToyotaWorksheet(worksheetObject).then((worksheetResponse) => {\r\n            SweetAlertConnector.closeCurrentAlert();\r\n            SweetAlertConnector.showSuccessAlert('Worksheet Generated Successfully!');\r\n            const fileURL = window.URL.createObjectURL(new Blob([worksheetResponse], { type: 'application/zip' }));\r\n            const fileLink = document.createElement('a');\r\n            const fileName = `Worksheet.zip`;\r\n            fileLink.href = fileURL;\r\n            fileLink.setAttribute('download', fileName);\r\n            document.body.appendChild(fileLink);\r\n            fileLink.click();\r\n            fileLink.remove();\r\n          }).catch(() => {\r\n            SweetAlertConnector.showErrorAlert('Error Generating Worksheet');\r\n          });\r\n        }).catch(() => {\r\n          SweetAlertConnector.showErrorAlert('Error Generating Worksheet');\r\n        });\r\n      },\r\n      truncateString(str) {\r\n        if (str.length > 14) {\r\n          return str.substring(0, 14);\r\n        }\r\n        return str;\r\n      },\r\n      moveCursorToEnd(element) {\r\n        const range = document.createRange();\r\n        const selection = window.getSelection();\r\n        range.selectNodeContents(element);\r\n        range.collapse(false); // Collapse range to end\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n      },\r\n    },\r\n   \r\n    \r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n.dropdown {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n}\r\n\r\n.dropdown ul {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.dropdown ul li {\r\n  padding: 8px 12px;\r\n  cursor: pointer;\r\n}\r\n\r\n.dropdown ul li:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n.vehicleAttchments {\r\n  margin-bottom: 20px;\r\n}\r\n.vehicle-form{\r\n  text-align: left;\r\n    padding: 20px;\r\n}\r\n.valid-commodity-code {\r\n    color: #09ba09;\r\n    font-weight: bold;\r\n}\r\n\r\n.invalid-commodity-code {\r\n    color: red;\r\n    font-weight: bold;\r\n}\r\n  </style>\r\n  ","import { ref } from 'vue'\r\n\r\nexport function getVehiclesList() {\r\n    const vehicleList = ref(\r\n        [\r\n            { code: \"328FG18\", description: \"FORKLIFT TRUCK\" },\r\n            { code: \"3BAAGH30W\", description: \"ALPHARD MINIVAN\" },\r\n            { code: \"4RUNNER\", description: \"4RUNNER\" },\r\n            { code: \"6FGL18\", description: \"FORKLIFT\" },\r\n            { code: \"7FBEHU18\", description: \"ELECTRIC FORKLIFT\" },\r\n            { code: \"7FDU70\", description: \"FORKLIFT\" },\r\n            { code: \"86\", description: \"TOYOTA 86\" },\r\n            { code: \"8FBE20U\", description: \"FORKLIFT\" },\r\n            { code: \"8FGC45U\", description: \"2014 LPG FORKLIFT\" },\r\n            { code: \"8FGCU 30\", description: \"TOYOTA FORKLIFT 8FGCU 30\" },\r\n            { code: \"8FGCU25\", description: \"TOYOTA FORLIFT\" },\r\n            { code: \"8FGU15\", description: \"TOYOTA FORKLIFT TRUCK\" },\r\n            { code: \"AGYA\", description: \"HATCHBACK\" },\r\n            { code: \"AQUA\", description: \"AQUA\" },\r\n            { code: \"AURIS\", description: \"TOYOTA AURIS MOTOR CAR\" },\r\n            { code: \"AVALON\", description: \"AVALON\" },\r\n            { code: \"AXIO\", description: \"TOYOTA AXIO\" },\r\n            { code: \"AXIO HYBRID\", description: \"TOYOTA AXIO GASOLINE ELECTRIC HYBRID\" },\r\n            { code: \"AGYO\", description: \"TOYOTA AYGO\" },\r\n            { code: \"B101RAGQSGJ\", description: \"5 DR RHD\" },\r\n            { code: \"B101RAGQSGT\", description: \"5DR GAS RHD\" },\r\n            { code: \"BB\", description: \"MINI MPV\" },\r\n            { code: \"BZ4X PURE\", description: \"ELECTRIC SUV\" },\r\n            { code: \"CALYA ASTRA\", description: \"SUV\" },\r\n            { code: \"CAMRY\", description: \"CAMRY\" },\r\n            { code: \"CAMRY HYBRID\", description: \"CAMRY HYBRID\" },\r\n            { code: \"CAMRY SOLARA\", description: \"CAMRY SOLARA\" },\r\n            { code: \"CELICA\", description: \"CELICA\" },\r\n            { code: \"CHR\", description: \"CROSSOVER SUV\" },\r\n            { code: \"CHR HYBRID\", description: \"C-HR HYBRID\" },\r\n            { code: \"COASTER\", description: \"COASTER\" },\r\n            { code: \"COMMUTER\", description: \"CUMMUTER PANEL VAN\" },\r\n            { code: \"COROLLA\", description: \"COROLLA\" },\r\n            { code: \"COROLLA CROSS\", description: \"COROLLA CROSS\" },\r\n            { code: \"CRESSIDA\", description: \"CRESSIDA\" },\r\n            { code: \"CROWN\", description: \"SEDAN\" },\r\n            { code: \"CROWN HYBRID\", description: \"TOYOTA CROWN HYBRID\" },\r\n            { code: \"DYNA\", description: \"DYNA TRUCK\" },\r\n            { code: \"ECHO\", description: \"ECHO\" },\r\n            { code: \"ESTIMA\", description: \"SEDAN\" },\r\n            { code: \"FIELDER\", description: \"FIELDER\" },\r\n            { code: \"FJ CRUISER\", description: \"FJ CRUISER\" },\r\n            { code: \"FORKLIFT\", description: \"TOYOTA FORKLIFT\" },\r\n            { code: \"FORTUNER\", description: \"FORTUNER\" },\r\n            { code: \"GRAND\", description: \"GRAND HIACE\" },\r\n            { code: \"GRANDE\", description: \"GRANDE ACE\" },\r\n            { code: \"HARRIER\", description: \"HARRIER SUV\" },\r\n            { code: \"HIACE\", description: \"HIACE\" },\r\n            { code: \"HIGHLANDER\", description: \"HIGHLANDER\" },\r\n            { code: \"HIGHLANDER HYBRID\", description: \"HIGHLANDER HYBRID\" },\r\n            { code: \"HILUX\", description: \"HILUX SINGLE CAB\" },\r\n            { code: \"HILUX DOUBLE\", description: \"HILUX DOUBLE CAB\" },\r\n            { code: \"HINO\", description: \"HINO TRUCK\" },\r\n            { code: \"IPSUM\", description: \"IPSUM\" },\r\n            { code: \"IST\", description: \"IST\" },\r\n            { code: \"LAND CRUISER\", description: \"LAND CRUISER\" },\r\n            { code: \"LC200\", description: \"LC200\" },\r\n            { code: \"LC70\", description: \"LC70\" },\r\n            { code: \"LEXUS\", description: \"LEXUS\" },\r\n            { code: \"LITEACE\", description: \"TOYOTA LITEACE\" },\r\n            { code: \"MARKX\", description: \"MARKX\" },\r\n            { code: \"MATRIX\", description: \"MATRIX\" },\r\n            { code: \"MR2\", description: \"MR2\" },\r\n            { code: \"NOAH\", description: \"NOAH MINIBUS\" },\r\n            { code: \"PASEO\", description: \"PASEO\" },\r\n            { code: \"PASSO\", description: \"TOYOTA PASSO\" },\r\n            { code: \"PIXIS EPOCH\", description: \"PIXIS EPOCH\" },\r\n            { code: \"PRADO\", description: \"PRADO\" },\r\n            { code: \"PREVIA\", description: \"PREVIA\"}\r\n        ]\r\n    )\r\n    return vehicleList\r\n}","import { render } from \"./VehicleEntry.vue?vue&type=template&id=e425ee10\"\nimport script from \"./VehicleEntry.vue?vue&type=script&lang=js\"\nexport * from \"./VehicleEntry.vue?vue&type=script&lang=js\"\n\nimport \"./VehicleEntry.vue?vue&type=style&index=0&id=e425ee10&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./VehicleEntryCreatePage.vue?vue&type=template&id=b486fc7e\"\nimport script from \"./VehicleEntryCreatePage.vue?vue&type=script&lang=js\"\nexport * from \"./VehicleEntryCreatePage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <VehicleEntry :record=\"record\" :vehicleDetails=\"vehicleDetails\" :invoiceDetails=\"invoiceDetails\" :referenceNumberRecord=\"referenceNumberRecord\" :isEditMode=\"true\" @submit=\"handleEdit\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  import VehicleEntry from './VehicleEntry.vue';\r\n  import * as DatabaseConnector from '@/composables/DatabaseConnector';\r\n  import * as SweetAlertConnector from '../composables/SweetAlertConnector';\r\n  import * as Utilities from '@/composables/Utilities';\r\n  import * as PackageTypes from '@/composables/PackageTypes';\r\n  import * as IncoTerms from '@/composables/IncoTerms';\r\n  import * as BrokerCongifurations from '@/composables/BrokerConfiguration';\r\n  \r\n  export default {\r\n    components: { VehicleEntry },\r\n    data() {\r\n      return {\r\n        entryId: '',\r\n        waybillId: '',\r\n        entryStatus: '',\r\n        record: Utilities.initializeCustomsEntryForm(), // Initialize record to null\r\n        vehicleDetails: [],\r\n        invoiceDetails: {\r\n          invoice_id: '',\r\n          supplierName: '',\r\n          invoiceNumber: '',\r\n          invoiceDate: '',\r\n          invoiceCurrency: '',\r\n          rateOfExchange: 0.0,\r\n          invoiceTotal: 0.0,\r\n          inlandAmount: 0.0,\r\n          insuranceAmount: 0.0,\r\n          otherCharges: 0.0,\r\n        },\r\n        referenceNumberRecord: '',\r\n      };\r\n    },\r\n    mounted() {\r\n        this.entryId = this.$route.params.entryId;\r\n        this.fetchEntryDetails();\r\n        this.getRegimeTypes();\r\n        this.fetchPorts();\r\n    },\r\n    methods: {\r\n        async fetchEntryDetails() {\r\n            console.log('Fetching details for entry ID:', this.entryId);\r\n            SweetAlertConnector.showLoadingAlert('Fetching Entry details...');\r\n            try{\r\n              const entryDetailsPromise = DatabaseConnector.getEntryDetails(this.entryId);\r\n              const commercialInvoicePromise = DatabaseConnector.getCommercialInvoiceDetailsWithVehicles(this.entryId);\r\n\r\n              const [entryDetailsResponse, commercialInvoiceResponse] = await Promise.all([entryDetailsPromise, commercialInvoicePromise]);\r\n              SweetAlertConnector.closeCurrentAlert();\r\n              SweetAlertConnector.showSuccessAlert('Entry details fetched successfully');\r\n              console.log('Entry details:', entryDetailsResponse);\r\n              // this.record = this.mapResponseToRecord(entryDetailsResponse);\r\n              let waybillDate = entryDetailsResponse.waybill_date;\r\n\r\n              let dateString;\r\n              if (waybillDate === \"0000-00-00\" || !waybillDate) {\r\n                  dateString = \"\";\r\n              } else {\r\n                  let dateObject = new Date(waybillDate);\r\n                  if (isNaN(dateObject)) {\r\n                      dateString = \"\";\r\n                  } else {\r\n                      dateString = dateObject.toISOString().split(\"T\")[0];\r\n                  }\r\n              }\r\n              this.record = Utilities.initializeCustomsEntryForm();\r\n              this.record.incotermsList = IncoTerms.getIncoTermsList();\r\n              this.record.modeOfTransportOOptions = BrokerCongifurations.getFreightTypes();\r\n              this.record.packageTypes = PackageTypes.usePackageTypes();\r\n              this.record.importerId = entryDetailsResponse.importer;\r\n              this.record.exporterId = entryDetailsResponse.shipper;\r\n              this.record.waybillNumber = entryDetailsResponse.waybill_number;\r\n              this.record.waybillDate = dateString;\r\n              this.record.modeOfTransport = entryDetailsResponse.mode_of_transport;\r\n              this.record.freightType = entryDetailsResponse.freight_type;\r\n              this.record.vesselId = entryDetailsResponse.vessel;\r\n              this.record.portOfDischargeId = entryDetailsResponse.port_of_discharge;\r\n              this.record.netWeight = entryDetailsResponse.net_weight;\r\n              this.record.grossWeight = entryDetailsResponse.gross_weight;\r\n              this.record.numberOfPackages = entryDetailsResponse.package_quantity;\r\n              this.record.packageType = entryDetailsResponse.package_type;\r\n              this.record.marksAndNumbers = entryDetailsResponse.marks_and_numbers;\r\n              this.record.totalCargoValue = entryDetailsResponse.invoice_total ?? 0;\r\n              this.record.freightAmount = entryDetailsResponse.freight_charge ?? 0;\r\n              this.record.insuranceAmount = entryDetailsResponse.insurance_amount ?? 0;\r\n              this.record.otherCharges = entryDetailsResponse.other_charges ?? 0;\r\n              this.record.rateOfExchange = entryDetailsResponse.rate_of_exchange;\r\n              this.record.countryOfOrigin = entryDetailsResponse.country_of_origin;\r\n              this.record.countryOfFinalDestination = entryDetailsResponse.country_of_final_destination;\r\n              this.record.regimeType = entryDetailsResponse.regimeType;\r\n              this.record.regimeTypeCode = entryDetailsResponse.regimeTypeCode;\r\n              this.record.depositAmount = entryDetailsResponse.deposit ?? 0;\r\n              this.record.containerCharges = entryDetailsResponse.container_charges ?? 0;\r\n              this.record.additionalCharges = entryDetailsResponse.additional_charges ?? 0;\r\n              this.record.localFee = entryDetailsResponse.local_fee ?? 0;\r\n              this.record.declarantId = entryDetailsResponse.declarant;\r\n              this.record.incoTerms = entryDetailsResponse.incoterms;\r\n              this.record.countryLastProvinance = entryDetailsResponse.country_last_provenance;\r\n              this.record.tradingCountry = entryDetailsResponse.trading_country;\r\n              this.entryStatus = entryDetailsResponse.entry_status;\r\n              this.fetchPorts();\r\n\r\n              console.log('Commercial Invoice details:', commercialInvoiceResponse);\r\n              this.vehicleDetails = this.processVehicleData(commercialInvoiceResponse[0].lines);\r\n              this.vehicleDetails.forEach(vehicle => {\r\n                this.updateCommodityCode(vehicle);\r\n              });\r\n              this.invoiceDetails = {\r\n                invoice_id: commercialInvoiceResponse[0].ci_invoice_id,\r\n                supplierName: commercialInvoiceResponse[0].supplier_name,\r\n                invoiceNumber: commercialInvoiceResponse[0].invoice_number,\r\n                invoiceDate: commercialInvoiceResponse[0].invoice_date,\r\n                invoiceCurrency: commercialInvoiceResponse[0].currency,\r\n                rateOfExchange: commercialInvoiceResponse[0].rate_of_exchange,\r\n                invoiceTotal: commercialInvoiceResponse[0].invoice_total,\r\n                inlandAmount: commercialInvoiceResponse[0].inland,\r\n                insuranceAmount: commercialInvoiceResponse[0].insurance,\r\n                otherCharges: commercialInvoiceResponse[0].other_charges,\r\n              };\r\n              this.referenceNumberRecord = entryDetailsResponse.entry_number;\r\n              this.waybillId = entryDetailsResponse.waybill_id;\r\n              console.log('Vehicle details:', this.vehicleDetails);\r\n            }\r\n            catch(error){\r\n              console.error('Failed to fetch the Entry details:', error);\r\n              SweetAlertConnector.showErrorAlert('Failed to fetch the Entry details. Please try again.');\r\n            }\r\n        },\r\n        updateCommodityCode(vehicle){\r\n          if(vehicle.thnNumber === undefined || vehicle.thnNumber === null || vehicle.thnNumber === '') {\r\n            vehicle.icdCharge = 0;\r\n            vehicle.vatCharge = 0;\r\n            vehicle.mvtCharge = 0;\r\n            return \r\n          }\r\n          DatabaseConnector.getCommodityCharges(vehicle.thnNumber.replace(/\\./g, \"\")).then(chargesResponse => {\r\n            let icdObject = chargesResponse.charges[\"import custom duty\"];\r\n            const icdCharge = icdObject === undefined ? 0 : parseFloat(icdObject[0].charge_amount);\r\n            let vatObject = chargesResponse.charges[\"value added tax\"];\r\n            const vatCharge = vatObject === undefined ? 0 : parseFloat(vatObject[0].charge_amount);\r\n            let mvtObject = chargesResponse.charges[\"motor vehicle tax\"];\r\n            const mvtCharge = mvtObject === undefined ? 0 : parseFloat(mvtObject[0].charge_amount);\r\n            vehicle.icdCharge = icdCharge;\r\n            vehicle.vatCharge = vatCharge;\r\n            vehicle.mvtCharge = mvtCharge;\r\n            vehicle.commodityCodeStatus = 'valid'\r\n          }).catch(error => {\r\n            console.error('Failed to fetch the commodity charges:', error);\r\n            vehicle.icdCharge = 0;\r\n            vehicle.vatCharge = 0;\r\n            vehicle.mvtCharge = 0;\r\n            vehicle.commodityCodeStatus = 'invalid'\r\n          });\r\n\r\n        },\r\n        async getRegimeTypes(){\r\n          return DatabaseConnector.fetchCpcCodes('TT').then(data => {\r\n            this.record.regimeTypeOptions = data;\r\n          });\r\n        },\r\n        async fetchPorts(){\r\n          return DatabaseConnector.fetchPorts().then(data => {\r\n            this.record.ports = data;\r\n          });\r\n        },\r\n        processVehicleDataOld(vehicleList){\r\n          const groupedByProductCode = [];\r\n\r\n          vehicleList.forEach(item => {\r\n            const productCode = item['product_code'];\r\n            const details = {\r\n              id: item.id,\r\n              chassisNumber: item.chassis_number,\r\n              engineNumber: item.engine_number,\r\n              exteriorColor: item.exterior_color,\r\n              customerName: item.customer_name ?? '',\r\n              customerTIN: item.customer_tin ?? '',\r\n              brokerInstructions: item.broker_instructions,\r\n              cpcCode: item.cpc_code, // TODO: Fetch CPC Code,\r\n              npcCode: item.npc_code, //TODO: Fetch NPC Code,\r\n              edNumber: item.ed_number,\r\n              quantity: item.quantity,\r\n              grossWeight: item.gross_weight ?? 0,\r\n              netWeight: item.net_weight ?? 0,\r\n              engineDisplacement: item.engine_displacement,\r\n              manufactureYear: item.manufacture_year ?? '2000',\r\n              engine_number: item.engine_number,\r\n              invoiceLineId: item.cil_invoice_line_id\r\n            };\r\n\r\n            const currentProductCode = item['product_code'];\r\n            const vehicle = groupedByProductCode.find(vehicle => vehicle.vehicleCode === currentProductCode);\r\n            if (vehicle) {\r\n              vehicle.quantity += parseInt(item['quantity']);\r\n              vehicle.details.push(details);\r\n              return;\r\n            }\r\n            else {\r\n              groupedByProductCode.push({\r\n                vehicleCode: productCode,\r\n                // invoiceLineId: item.cil_invoice_line_id,\r\n                description: item.description,\r\n                thnNumber: item['tariff_code'] === null ? '' : item['tariff_code'],\r\n                quantity: 1,\r\n                unitPrice: item.unit_price === null ? 0 : item.unit_price,\r\n                grossWeight: item['gross_weight'] === null ? 0 : item['gross_weight'],\r\n                netWeight: item['net_weight'] === null ? 0 : item['net_weight'],\r\n                curbWeight: item['curb_weight'] === null ? 0 : item['curb_weight'],\r\n                engineDisplacement: item['engine_displacement'],\r\n                fuelType: item['fuel_type'] === null ? '' : item['fuel_type'],\r\n                numberOfSeats: item['number_of_seats'] === null ? 5 : item['number_of_seats'],\r\n                numberOfDoors: item['number_of_doors'] === null ? 4 : item['number_of_doors'],\r\n                tyreSize: item['tyre_size'] === null ? '' : item['tyre_size'],\r\n                modelCode: item['model_code'] === null ? '' : item['model_code'],\r\n                seatPosition: item['seat_position'] === null ? 'RHD' : item['seat_position'],\r\n                details: [details]\r\n              });\r\n            }\r\n          });\r\n          return groupedByProductCode\r\n        },\r\n        processVehicleData(vehicleList){\r\n          const groupedByEDNumberCode = [];\r\n\r\n          vehicleList.forEach(item => {\r\n            const edNumber = item['ed_number'];\r\n            const details = {\r\n              id: item.id,\r\n              chassisNumber: item.chassis_number,\r\n              engineNumber: item.engine_number,\r\n              exteriorColor: item.exterior_color,\r\n              customerName: item.customer_name ?? '',\r\n              customerTIN: item.customer_tin ?? '',\r\n              brokerInstructions: item.broker_instructions,\r\n              cpcCode: item.cpc_code, // TODO: Fetch CPC Code,\r\n              npcCode: item.npc_code, //TODO: Fetch NPC Code,\r\n              edNumber: edNumber,\r\n              quantity: item.quantity,\r\n              grossWeight: item.gross_weight ?? 0,\r\n              netWeight: item.net_weight ?? 0,\r\n              engineDisplacement: item.engine_displacement,\r\n              manufactureYear: item.manufacture_year ?? '2000',\r\n              engine_number: item.engine_number,\r\n              invoiceLineId: item.cil_invoice_line_id\r\n            };\r\n\r\n            // const currentProductCode = item['product_code'];\r\n            const vehicle = groupedByEDNumberCode.find(vehicle => vehicle.edNumber === edNumber);\r\n            if (vehicle) {\r\n              vehicle.quantity += parseInt(item['quantity']);\r\n              vehicle.details.push(details);\r\n              return;\r\n            }\r\n            else {\r\n              groupedByEDNumberCode.push({\r\n                vehicleCode: item['product_code'],\r\n                // invoiceLineId: item.cil_invoice_line_id,\r\n                description: item.description,\r\n                thnNumber: item['tariff_code'] === null ? '' : item['tariff_code'],\r\n                quantity: 1,\r\n                edNumber: edNumber,\r\n                unitPrice: item.unit_price === null ? 0 : item.unit_price,\r\n                grossWeight: item['gross_weight'] === null ? 0 : item['gross_weight'],\r\n                netWeight: item['net_weight'] === null ? 0 : item['net_weight'],\r\n                curbWeight: item['curb_weight'] === null ? 0 : item['curb_weight'],\r\n                engineDisplacement: item['engine_displacement'],\r\n                fuelType: item['fuel_type'] === null ? '' : item['fuel_type'],\r\n                numberOfSeats: item['number_of_seats'] === null ? 5 : item['number_of_seats'],\r\n                numberOfDoors: item['number_of_doors'] === null ? 4 : item['number_of_doors'],\r\n                tyreSize: item['tyre_size'] === null ? '' : item['tyre_size'],\r\n                modelCode: item['model_code'] === null ? '' : item['model_code'],\r\n                seatPosition: item['seat_position'] === null ? 'RHD' : item['seat_position'],\r\n                details: [details]\r\n              });\r\n            }\r\n          });\r\n          return groupedByEDNumberCode\r\n        },\r\n        mapResponseToRecord(response) {\r\n            return {\r\n              exporters: [],\r\n              importers: [],\r\n              vessels: [],\r\n              ports: [],\r\n              declarants: [],\r\n              incotermsList: IncoTerms.getIncoTermsList(),\r\n              modeOfTransportOOptions: BrokerCongifurations.getFreightTypes(),\r\n              importerId : response.importer,\r\n              exporterId : response.shipper,\r\n              importerName: '',\r\n              exporterName: '',\r\n              importerTaxIdentificationNumber: '',\r\n              exporterTaxIdentificationNumber: '',\r\n              exporterCountry: '',\r\n              declarantTaxIdentificationNumber: '',\r\n              waybillNumber : response.waybill_number,\r\n              waybillDate : '',\r\n              modeOfTransport : response.mode_of_transport,\r\n              freightType : response.freight_type,\r\n              vesselId : response.vessel,\r\n              vesselName: '',\r\n              packageTypes: PackageTypes.usePackageTypes(),\r\n              portOfDischargeId : response.port_of_discharge,\r\n              portOfDischargeName: '',\r\n              netWeight : response.net_weight,\r\n              grossWeight : response.gross_weight,\r\n              numberOfPackages : response.package_quantity,\r\n              packageType : response.package_type,\r\n              marksAndNumbers : response.marks_and_numbers,\r\n              totalCargoValue : response.invoice_total,\r\n              freightAmount : response.freight_charge,\r\n              insuranceAmount : response.insurance_amount,\r\n              otherCharges : response.other_charges,\r\n              rateOfExchange : response.rate_of_exchange,\r\n              countryOfOrigin : response.country_of_origin,\r\n              countryOfFinalDestination : response.country_of_final_destination,\r\n              regimeType : response.regimeType,\r\n\r\n              regimeTypeCode : response.regimeTypeCode,\r\n              regimeTypeOptions: [],\r\n              depositAmount : response.deposit,\r\n              containerCharges : response.container_charges,\r\n              additionalCharges : response.additional_charges,\r\n              localFee : response.local_fee,\r\n              declarantId : response.declarant,\r\n              incoTerms : response.incoterms,\r\n              countryLastProvinance : response.country_last_provenance,\r\n              tradingCountry : response.trading_country,\r\n            };\r\n        },\r\n        async handleEdit(payload) {\r\n          console.log('Edit payload:', payload);\r\n          const waybillData = payload.waybill\r\n          console.log('Waybill data:', waybillData);\r\n          let entryData = payload.entry;\r\n          entryData.entry_status = this.entryStatus;\r\n          console.log('Entry data:', entryData);\r\n          let invoiceData = payload.invoice;\r\n          invoiceData.invoice_id = this.invoiceDetails.invoice_id;\r\n          console.log('Invoice data:', invoiceData);\r\n\r\n          let invoiceLineData = payload.invoiceLines;\r\n          console.log('Invoice line data:', invoiceLineData);\r\n\r\n          const vehicleData = payload.vehicleLines;\r\n          console.log('Vehicle data:', vehicleData);\r\n\r\n          const invoicesRequestData = { invoices: [invoiceData] };\r\n          const invoiceLinesRequestData = { invoiceLines: invoiceLineData };\r\n          const vehicleRequestData = { vehicles: vehicleData };\r\n\r\n          \r\n\r\n          SweetAlertConnector.showLoadingAlert('Updating Entry details...');\r\n          Promise.all([\r\n            DatabaseConnector.updateEntryData(this.entryId, entryData),\r\n            DatabaseConnector.updateWaybillData(this.waybillId, waybillData),\r\n            axios.put(`${process.env.VUE_APP_API_BASE_URL}update-multiple-invoices`, invoicesRequestData),\r\n            axios.put(`${process.env.VUE_APP_API_BASE_URL}update-multiple-invoice-lines`, invoiceLinesRequestData),\r\n            axios.put(`${process.env.VUE_APP_API_BASE_URL}update-vehicle-details`, vehicleRequestData)\r\n            // DatabaseConnector.updateInvoiceDataOptimized(invoiceData),\r\n            // DatabaseConnector.updateInvoiceLineDataOptimized(invoiceLineData),\r\n          ]).then(() => {\r\n            SweetAlertConnector.closeCurrentAlert();\r\n            SweetAlertConnector.showSuccessAlert('Entry details updated successfully');\r\n\r\n          }).catch(error => {\r\n            console.error('Failed to update the Entry details:', error);\r\n            SweetAlertConnector.showErrorAlert('Failed to update the Entry details. Please try again.');\r\n          });\r\n\r\n\r\n            \r\n        },\r\n    },\r\n  };\r\n  </script>\r\n  ","import { render } from \"./VehicleEntryEditPage.vue?vue&type=template&id=543f7371\"\nimport script from \"./VehicleEntryEditPage.vue?vue&type=script&lang=js\"\nexport * from \"./VehicleEntryEditPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <h1>Classified Entries</h1>\r\n      <!-- Search field -->\r\n      <input type=\"text\" v-model=\"searchTerm\" placeholder=\"Search entries\" />\r\n  \r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Entry #</th>\r\n            <th>Consignee</th>\r\n            <th>Invoice Number</th>\r\n            <th>Waybill Number</th>\r\n            <th>Classififcation Status</th>\r\n            <th>Classified By</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"entry in filteredEntries\" :key=\"entry.entry_id\">\r\n            <td>{{ entry.entry_number }}</td>\r\n            <td>{{ entry.importerName }}</td>\r\n            <td>{{ entry.invoice_number ? entry.invoice_number.split('; ')[0] : '' }}</td>\r\n            <td>{{ entry.waybill_number }}</td>\r\n            <!-- <td><span class=\"badge bg-warning text-dark\">Warning</span></td> -->\r\n            <td><h5><span :class=\"{'badge bg-success': getStatusText(entry.classification_approved) === 'Classififcation Approved', 'badge bg-warning text-dark': getStatusText(entry.classification_approved) === 'Not Classified'}\">{{getStatusText(entry.classification_approved)}}</span></h5></td>\r\n            <td>\r\n                {{ entry.classification_approved_by }}\r\n            </td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-success\" @click=\"openEntry(entry.entry_id, entry.entry_type)\">Edit</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ENTRY_TYPES } from '../constants'\r\nimport { CLASSIFICATION_STATUS } from '../constants'\r\n\r\nexport default {\r\n    data() {\r\n      return {\r\n        entries: [],\r\n        error: null,\r\n        searchTerm: '', // To hold the search term\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchEntries();\r\n    },\r\n    methods: {\r\n        getStatusText(isApproved){\r\n          return isApproved ? CLASSIFICATION_STATUS.APPROVED : CLASSIFICATION_STATUS.NOT_CLASSIFIED;\r\n        },\r\n        openEntry(entryId, entryType) {\r\n            if(entryType && entryType === ENTRY_TYPES.VEHICLES){\r\n                this.$router.push({ name: 'VehicleEntryEditPage', params: { entryId } });\r\n                return;\r\n            }\r\n            this.$router.push({ name: 'EntryDetails', params: { entryId } });\r\n        },\r\n        async fetchEntries() {\r\n            try {\r\n                const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}entries/CLASSIFICATION_OKAY`);\r\n                this.entries = response.data;\r\n            } catch (error) {\r\n                this.error = error.message;\r\n                console.error('There was an error!', error);\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n      filteredEntries() {\r\n        if (!this.searchTerm) {\r\n          return this.entries.filter(entry => entry.classification_approved === 1);\r\n        }\r\n        const term = this.searchTerm.toLowerCase();\r\n        return this.entries.filter(entry => {\r\n          // Convert the properties to strings and lowercase for case-insensitive comparison\r\n          return entry.classification_approved === 1 &&  (\r\n            ((entry.entry_number && entry.entry_number.toString().toLowerCase().includes(term)) ||\r\n            (entry.waybill_number && entry.waybill_number.toString().toLowerCase().includes(term)) ||\r\n            // Assuming entry.invoiceNumbers is an array or a string that needs splitting. Check if it is not null or undefined before using it.\r\n            (entry.invoice_number && entry.invoice_number.split('; ').some(invoice_number => invoice_number.toLowerCase().includes(term))) ||\r\n            (entry.consignee && entry.consignee.toString().toLowerCase().includes(term)))\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  table, th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  \r\n  tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n  }\r\n  </style>","import { render } from \"./ApprovedClassificationEntries.vue?vue&type=template&id=0e6c0430\"\nimport script from \"./ApprovedClassificationEntries.vue?vue&type=script&lang=js\"\nexport * from \"./ApprovedClassificationEntries.vue?vue&type=script&lang=js\"\n\nimport \"./ApprovedClassificationEntries.vue?vue&type=style&index=0&id=0e6c0430&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <h1>Partially Stored Entries</h1>\r\n      <!-- Search field -->\r\n      <input type=\"text\" v-model=\"searchTerm\" placeholder=\"Search entries\" />\r\n  \r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Entry #</th>\r\n            <th>Consignee</th>\r\n            <th>Invoice Number</th>\r\n            <th>Waybill Number</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"entry in filteredEntries\" :key=\"entry.entry_id\">\r\n            <td>{{ entry.entry_number }}</td>\r\n            <td>{{ entry.importerName }}</td>\r\n            <td>{{ entry.invoice_number ? entry.invoice_number.split('; ')[0] : '' }}</td>\r\n            <td>{{ entry.waybill_number }}</td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-success\" @click=\"openEntry(entry.entry_id, entry.entry_type)\">Edit</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ENTRY_TYPES } from '../constants'\r\nexport default {\r\n  data() {\r\n    return {\r\n      entries: [],\r\n      error: null,\r\n      searchTerm: '', // To hold the search term\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchEntries();\r\n  },\r\n  methods: {\r\n      openEntry(entryId, entryType) {\r\n          if(entryType && entryType === ENTRY_TYPES.VEHICLES){\r\n              this.$router.push({ name: 'VehicleEntryEditPage', params: { entryId } });\r\n              return;\r\n          }\r\n          this.$router.push({ name: 'EntryDetails', params: { entryId } });\r\n      },\r\n      async fetchEntries() {\r\n          try {\r\n              const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}entries/PARTIAL_STORAGE`);\r\n              this.entries = response.data;\r\n          } catch (error) {\r\n              this.error = error.message;\r\n              console.error('There was an error!', error);\r\n          }\r\n      },\r\n  },\r\n  computed: {\r\n    filteredEntries() {\r\n      if (!this.searchTerm) {\r\n        return this.entries;\r\n      }\r\n      const term = this.searchTerm.toLowerCase();\r\n      return this.entries.filter(entry => {\r\n        // Convert the properties to strings and lowercase for case-insensitive comparison\r\n        return (\r\n          (entry.entry_number && entry.entry_number.toString().toLowerCase().includes(term)) ||\r\n          (entry.waybill_number && entry.waybill_number.toString().toLowerCase().includes(term)) ||\r\n          // Assuming entry.invoiceNumbers is an array or a string that needs splitting. Check if it is not null or undefined before using it.\r\n          (entry.invoice_number && entry.invoice_number.split('; ').some(invoice_number => invoice_number.toLowerCase().includes(term))) ||\r\n          (entry.consignee && entry.consignee.toString().toLowerCase().includes(term))\r\n        );\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\ntable, th, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n</style>","import { render } from \"./PartialStorageEntries.vue?vue&type=template&id=520e8ad4\"\nimport script from \"./PartialStorageEntries.vue?vue&type=script&lang=js\"\nexport * from \"./PartialStorageEntries.vue?vue&type=script&lang=js\"\n\nimport \"./PartialStorageEntries.vue?vue&type=style&index=0&id=520e8ad4&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <h1>Fully Stored Entries</h1>\r\n      <!-- Search field -->\r\n      <input type=\"text\" v-model=\"searchTerm\" placeholder=\"Search entries\" />\r\n  \r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Entry #</th>\r\n            <th>Consignee</th>\r\n            <th>Invoice Number</th>\r\n            <th>Waybill Number</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"entry in filteredEntries\" :key=\"entry.entry_id\">\r\n            <td>{{ entry.entry_number }}</td>\r\n            <td>{{ entry.importerName }}</td>\r\n            <td>{{ entry.invoice_number ? entry.invoice_number.split('; ')[0] : '' }}</td>\r\n            <td>{{ entry.waybill_number }}</td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-success\" @click=\"openEntry(entry.entry_id, entry.entry_type)\">Edit</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ENTRY_TYPES } from '../constants'\r\nexport default {\r\n  data() {\r\n    return {\r\n      entries: [],\r\n      error: null,\r\n      searchTerm: '', // To hold the search term\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchEntries();\r\n  },\r\n  methods: {\r\n      openEntry(entryId, entryType) {\r\n          if(entryType && entryType === ENTRY_TYPES.VEHICLES){\r\n              this.$router.push({ name: 'VehicleEntryEditPage', params: { entryId } });\r\n              return;\r\n          }\r\n          this.$router.push({ name: 'EntryDetails', params: { entryId } });\r\n      },\r\n      async fetchEntries() {\r\n          try {\r\n              const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}entries/FULL_STORAGE`);\r\n              this.entries = response.data;\r\n          } catch (error) {\r\n              this.error = error.message;\r\n              console.error('There was an error!', error);\r\n          }\r\n      },\r\n  },\r\n  computed: {\r\n    filteredEntries() {\r\n      if (!this.searchTerm) {\r\n        return this.entries;\r\n      }\r\n      const term = this.searchTerm.toLowerCase();\r\n      return this.entries.filter(entry => {\r\n        // Convert the properties to strings and lowercase for case-insensitive comparison\r\n        return (\r\n          (entry.entry_number && entry.entry_number.toString().toLowerCase().includes(term)) ||\r\n          (entry.waybill_number && entry.waybill_number.toString().toLowerCase().includes(term)) ||\r\n          // Assuming entry.invoiceNumbers is an array or a string that needs splitting. Check if it is not null or undefined before using it.\r\n          (entry.invoice_number && entry.invoice_number.split('; ').some(invoice_number => invoice_number.toLowerCase().includes(term))) ||\r\n          (entry.consignee && entry.consignee.toString().toLowerCase().includes(term))\r\n        );\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\ntable, th, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n</style>","import { render } from \"./FullStorageEntries.vue?vue&type=template&id=f9916948\"\nimport script from \"./FullStorageEntries.vue?vue&type=script&lang=js\"\nexport * from \"./FullStorageEntries.vue?vue&type=script&lang=js\"\n\nimport \"./FullStorageEntries.vue?vue&type=style&index=0&id=f9916948&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"date-picker-container\">\r\n      <div class=\"col-md-4\"></div>\r\n      <div class=\"col-md-4 form-group\">\r\n        <label for=\"report-date\">Select Report Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"report-date\"\r\n          v-model=\"selectedDate\"\r\n          @change=\"reloadCharts\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n      <div class=\"col-md-4\"></div>\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <InvoiceBucketsPerformance :reportDate=\"selectedDate\" />\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <ClassificationDailyPerformance :reportDate=\"selectedDate\" />\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <ClassificationCodeMatchChart :reportDate=\"selectedDate\" />\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <InvoiceLineBucketsPerformance :reportDate=\"selectedDate\" />\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <InvoiceAIPerformance :reportDate=\"selectedDate\" />\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <ClassificationScoreChart :reportDate=\"selectedDate\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport InvoiceAIPerformance from '@/components/PerformanceAnalysis/InvoiceAIPerformance.vue';\r\nimport ClassificationScoreChart from '@/components/PerformanceAnalysis/ClassificationScoreChart.vue';\r\nimport ClassificationCodeMatchChart from '@/components/PerformanceAnalysis/ClassificationCodeMatchChart.vue';\r\nimport InvoiceBucketsPerformance from '@/components/PerformanceAnalysis/InvoiceBucketsPerformance.vue';\r\nimport ClassificationDailyPerformance from '@/components/PerformanceAnalysis/ClassificationDailyPerformance.vue';\r\nimport InvoiceLineBucketsPerformance from '@/components/PerformanceAnalysis/InvoiceLineBucketsPerformance.vue';\r\n\r\nexport default {\r\n  name: 'PerformanceDashboard',\r\n  components: {\r\n    InvoiceAIPerformance,\r\n    ClassificationScoreChart,\r\n    ClassificationCodeMatchChart,\r\n    InvoiceLineBucketsPerformance,\r\n    InvoiceBucketsPerformance,\r\n    ClassificationDailyPerformance,\r\n  },\r\n  data() {\r\n    return {\r\n      selectedDate: new Date().toISOString().substr(0, 10), // Default to today's date\r\n    };\r\n  },\r\n  methods: {\r\n    reloadCharts() {\r\n      // This method will be triggered when the date changes.\r\n      // It can be used to trigger any additional logic if needed.\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr; /* Two equal-width columns */\r\n  grid-template-rows: auto 1fr 1fr; /* Adjusted for the date picker */\r\n  gap: 20px; /* Space between the grid items */\r\n  padding: 20px;\r\n}\r\n\r\n.date-picker-container {\r\n  grid-column: span 2; /* Make the date picker span across both columns */\r\n  text-align: left;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.grid-item {\r\n  background-color: #f8f9fa; /* Light gray background for the grid items */\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow for the grid items */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n</style>\r\n","<template>\r\n  <Bar\r\n        v-if=\"chartDataReady\"\r\n        id=\"my-chart-id\"\r\n        :options=\"chartOptions\"\r\n        :data=\"chartData\"\r\n        ref=\"myChart\"\r\n      />\r\n  </template>\r\n  \r\n  <script>\r\n  import { Bar } from 'vue-chartjs'\r\n  import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, LineElement, PointElement } from 'chart.js'\r\n  \r\n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, LineElement, PointElement)\r\n  \r\n  export default {\r\n    name: 'InvoiceAIPerformance',\r\n    components: { Bar },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: [], // Initialize as an empty array\r\n          datasets: [\r\n            {\r\n              label: 'Average File Size',\r\n              backgroundColor: 'rgba(135, 206, 235, 0.5)', // Skyblue color with 50% opacity\r\n              data: [], // Initialize as an empty array\r\n              yAxisID: 'y', // Bind this dataset to the first y-axis\r\n              order: 1 // Draw the bar chart first\r\n            },\r\n            {\r\n              label: 'Average Processing Time',\r\n              backgroundColor: 'orange',\r\n              data: [], // Initialize as an empty array\r\n              type: 'line',\r\n              borderColor: 'orange',\r\n              fill: false,\r\n              yAxisID: 'y1', // Bind this dataset to the second y-axis\r\n              order: 2 // Draw the line chart after the bar chart\r\n            }\r\n          ]\r\n        },\r\n        chartOptions: {\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Date',\r\n              },\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'File Size',\r\n              },\r\n              beginAtZero: true,\r\n            },\r\n            y1: { // Define a second y-axis\r\n              position: 'right', // Position this axis on the right\r\n              grid: {\r\n                drawOnChartArea: false, // Optional: If you don't want grid lines on this axis\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: 'Processing Time',\r\n              },\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: 'Invoice AI Performance - Past 5 days',\r\n              font: {\r\n                size: 18, // Title font size\r\n              },\r\n              padding: {\r\n                top: 10,\r\n                bottom: 20,\r\n              }\r\n            },\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n          },\r\n        },\r\n        chartDataReady: false // Add a flag to control the rendering\r\n      }\r\n    },\r\n    async mounted() {\r\n      await this.fetchData(); // Fetch data when component mounts\r\n    },\r\n    methods: {\r\n      async fetchData() {\r\n        try {\r\n          const response = await fetch(`${process.env.VUE_APP_API_BASE_URL}invoice-ai-performance-metrics`);\r\n          const data = await response.json();\r\n          console.log('Performance metrics:', data);\r\n  \r\n          if (data && data.length > 0) {\r\n            // Format dates to a more readable format\r\n            this.chartData.labels = data.map((entry) => new Date(entry.processing_date).toLocaleDateString('en-US'));\r\n            this.chartData.datasets[0].data = data.map((entry) => entry.average_file_size);\r\n            this.chartData.datasets[1].data = data.map((entry) => entry.average_processing_time);\r\n  \r\n            // Set the flag to true to trigger the chart rendering\r\n            this.chartDataReady = false;\r\n            this.$nextTick(() => {\r\n              this.chartDataReady = true;\r\n            });\r\n          }\r\n          console.log('Updated chart data:', this.chartData);\r\n        } catch (error) {\r\n          console.error('Error fetching performance metrics:', error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  ","import { render } from \"./InvoiceAIPerformance.vue?vue&type=template&id=7d52d7f6\"\nimport script from \"./InvoiceAIPerformance.vue?vue&type=script&lang=js\"\nexport * from \"./InvoiceAIPerformance.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <Bar\r\n      v-if=\"chartDataReady\"\r\n      id=\"classification-score-chart\"\r\n      :options=\"chartOptions\"\r\n      :data=\"chartData\"\r\n      ref=\"myChart\"\r\n    />\r\n  </template>\r\n  \r\n  <script>\r\n  import { Bar } from 'vue-chartjs'\r\n  import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\r\n  \r\n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\r\n  \r\n  export default {\r\n    name: 'ClassificationScoreChart',\r\n    components: { Bar },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: [], // Initialize as an empty array\r\n          datasets: [\r\n            {\r\n              label: 'Total Score',\r\n              backgroundColor: 'rgba(54, 162, 235, 0.7)', // Blue color with some opacity\r\n              data: [] // Initialize as an empty array\r\n            }\r\n          ]\r\n        },\r\n        chartOptions: {\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Date',\r\n              },\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'Total Score',\r\n              },\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: 'Classification Accuracy Score - Past 5 days',\r\n              font: {\r\n                size: 18, // Title font size\r\n              },\r\n              padding: {\r\n                top: 10,\r\n                bottom: 20,\r\n              }\r\n            },\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n          },\r\n        },\r\n        chartDataReady: false // Control when to render the chart\r\n      }\r\n    },\r\n    async mounted() {\r\n      await this.fetchData(); // Fetch data when the component mounts\r\n    },\r\n    methods: {\r\n      async fetchData() {\r\n        try {\r\n          const response = await fetch(`${process.env.VUE_APP_API_BASE_URL}classification-scores`);\r\n          const data = await response.json();\r\n          console.log('Classification scores:', data);\r\n  \r\n          if (data && data.length > 0) {\r\n            // Format dates and populate the chart data\r\n            this.chartData.labels = data.map((entry) => new Date(entry.entry_date).toLocaleDateString('en-US'));\r\n            this.chartData.datasets[0].data = data.map((entry) => entry.total_score);\r\n  \r\n            // Trigger the chart rendering\r\n            this.chartDataReady = false;\r\n            this.$nextTick(() => {\r\n              this.chartDataReady = true;\r\n            });\r\n          }\r\n          console.log('Updated chart data:', this.chartData);\r\n        } catch (error) {\r\n          console.error('Error fetching classification scores:', error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any necessary styling here */\r\n  </style>\r\n  ","import { render } from \"./ClassificationScoreChart.vue?vue&type=template&id=29557c4d&scoped=true\"\nimport script from \"./ClassificationScoreChart.vue?vue&type=script&lang=js\"\nexport * from \"./ClassificationScoreChart.vue?vue&type=script&lang=js\"\n\nimport \"./ClassificationScoreChart.vue?vue&type=style&index=0&id=29557c4d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-29557c4d\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"chart-container\">\r\n    <Doughnut\r\n      v-if=\"chartDataReady\"\r\n      id=\"classification-code-match-chart\"\r\n      :options=\"chartOptions\"\r\n      :data=\"chartData\"\r\n      ref=\"myChart\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Doughnut } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement, CategoryScale } from 'chart.js';\r\n\r\nChartJS.register(Title, Tooltip, Legend, ArcElement, CategoryScale);\r\n\r\nexport default {\r\n  name: 'ClassificationCodeMatchChart',\r\n  components: { Doughnut },\r\n  props: {\r\n    reportDate: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chartData: {\r\n        labels: ['Match', 'Non-Match'], // Labels for the doughnut chart\r\n        datasets: [\r\n          {\r\n            backgroundColor: ['#36A2EB', '#FF6384'], // Colors for the match and non-match sections\r\n            data: [], // Initialize as an empty array\r\n          }\r\n        ]\r\n      },\r\n      chartOptions: {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Classification Code Match vs Non-Match',\r\n            font: {\r\n              size: 18, // Title font size\r\n            },\r\n            padding: {\r\n              top: 10,\r\n              bottom: 20,\r\n            }\r\n          }\r\n        }\r\n      },\r\n      chartDataReady: false, // Control when to render the chart\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchData(this.reportDate); // Fetch data when the component mounts\r\n  },\r\n  watch: {\r\n    reportDate(newDate) {\r\n      this.fetchData(newDate); // Re-fetch data when the date prop changes\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchData(date) {\r\n      try {\r\n        const response = await fetch(`${process.env.VUE_APP_API_BASE_URL}classification-code-match?date=${date}`);\r\n        const data = await response.json();\r\n        console.log('Classification code match percentages:', data);\r\n\r\n        if (data) {\r\n          // Populate the chart data with the percentages\r\n          this.chartData.datasets[0].data = [data.match_percentage, data.non_match_percentage];\r\n\r\n          // Trigger the chart rendering\r\n          this.chartDataReady = false;\r\n          this.$nextTick(() => {\r\n            this.chartDataReady = true;\r\n          });\r\n        } else {\r\n          // Reset the chart if no data is returned\r\n          this.chartData.datasets[0].data = [];\r\n          this.chartDataReady = true;\r\n        }\r\n        console.log('Updated chart data:', this.chartData);\r\n      } catch (error) {\r\n        console.error('Error fetching classification code match percentages:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  max-width: 400px;\r\n  margin: auto;\r\n}\r\n</style>\r\n","import { render } from \"./ClassificationCodeMatchChart.vue?vue&type=template&id=5cbc0924&scoped=true\"\nimport script from \"./ClassificationCodeMatchChart.vue?vue&type=script&lang=js\"\nexport * from \"./ClassificationCodeMatchChart.vue?vue&type=script&lang=js\"\n\nimport \"./ClassificationCodeMatchChart.vue?vue&type=style&index=0&id=5cbc0924&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5cbc0924\"]])\n\nexport default __exports__","<template>\r\n  <Bar\r\n    v-if=\"chartDataReady\"\r\n    id=\"invoice-processing-time-chart\"\r\n    :options=\"chartOptions\"\r\n    :data=\"chartData\"\r\n    ref=\"myChart\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport { Bar } from 'vue-chartjs';\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LineElement,\r\n  LineController,\r\n  PointElement\r\n} from 'chart.js';\r\n\r\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, LineElement, LineController, PointElement);\r\n\r\nexport default {\r\n  name: 'InvoiceBucketsPerformance',\r\n  components: { Bar },\r\n  props: {\r\n    reportDate: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      fetchedData: [],\r\n      chartData: {\r\n        labels: [], // Labels for the buckets\r\n        datasets: [\r\n          {\r\n            label: 'Number of Records',\r\n            backgroundColor: 'rgba(75, 192, 192, 0.7)', // Bar color\r\n            data: [], // Data for the number of records\r\n            yAxisID: 'y', // Link to the primary y-axis\r\n          },\r\n          {\r\n            label: 'Average File Size (KB)',\r\n            type: 'line',\r\n            borderColor: 'rgba(255, 99, 132, 0.7)', // Line color\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            data: [], // Data for the average file size\r\n            yAxisID: 'y1', // Link to the secondary y-axis\r\n            fill: false,\r\n          }\r\n        ]\r\n      },\r\n      chartOptions: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Processing Time Buckets',\r\n            },\r\n          },\r\n          y: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            title: {\r\n              display: true,\r\n              text: 'Number of Entries',\r\n            },\r\n          },\r\n          y1: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'right',\r\n            grid: {\r\n              drawOnChartArea: false, // Only draw grid lines for the primary y-axis\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Average File Size (KB)',\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: \"Invoice AI Time Bucket Performance\",\r\n            font: {\r\n              size: 18, // Title font size\r\n            },\r\n            padding: {\r\n              top: 10,\r\n              bottom: 20,\r\n            }\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n        },\r\n        onClick: (event, elements) => {\r\n          if (elements.length > 0) {\r\n            const elementIndex = elements[0].index;\r\n            // const label = this.chartData.labels[elementIndex];\r\n            const data = this.chartData.datasets[0].data[elementIndex];\r\n            \r\n            // Trigger your custom event or action here\r\n            this.handleBarClick(elementIndex, data);\r\n          }\r\n        },\r\n      },\r\n      chartDataReady: false, // Control when to render the chart\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchData(this.reportDate); // Fetch data when the component mounts\r\n  },\r\n  watch: {\r\n    reportDate(newDate) {\r\n      this.fetchData(newDate); // Re-fetch data when the date prop changes\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchData(date) {\r\n      try {\r\n        const response = await fetch(`${process.env.VUE_APP_API_BASE_URL}invoice-processing-time-buckets?date=${date}`);\r\n        const data = await response.json();\r\n        console.log('Invoice processing time buckets:', data);\r\n\r\n        if (data && data.length > 0) {\r\n          this.fetchedData = data;\r\n          // Populate the chart data\r\n          this.chartData.labels = data.map((entry) => entry.time_bucket);\r\n          this.chartData.datasets[0].data = data.map((entry) => entry.record_count);\r\n          this.chartData.datasets[1].data = data.map((entry) => entry.average_file_size);\r\n\r\n          // Trigger the chart rendering\r\n          this.chartDataReady = false;\r\n          this.$nextTick(() => {\r\n            this.chartDataReady = true;\r\n          });\r\n        }\r\n        console.log('Updated chart data:', this.chartData);\r\n      } catch (error) {\r\n        console.error('Error fetching invoice processing time buckets:', error);\r\n      }\r\n    },\r\n    handleBarClick(index, data) {\r\n      console.log(this.fetchedData);\r\n      console.log(`Index: ${index}`);\r\n      console.log(`Data: ${data}`);\r\n      const selectedBucket = this.fetchedData[index];\r\n      console.log('Selected bucket:', selectedBucket);\r\n      const entryIdsArray = selectedBucket.entry_ids.split(',').map(id => id.trim());\r\n      console.log('Entry IDs:', entryIdsArray);\r\n      this.$router.push({ name: 'AllEntries', params: { entryIds: entryIdsArray.join(',') } });\r\n      // Perform additional actions here (e.g., routing, showing details, etc.)\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  max-width: 800px; /* Restrict the maximum width */\r\n  width: 100%; /* Allow the container to use up to 100% of its parent's width */\r\n  height: 100%; /* Ensure the container takes up full height */\r\n  display: flex; /* Flexbox for alignment */\r\n  align-items: stretch; /* Stretch to fill the available height */\r\n  justify-content: center; /* Center the chart horizontally */\r\n}\r\n\r\n#invoice-processing-time-chart {\r\n  flex: 0 1 auto; /* Prevent the chart from growing beyond its content width */\r\n  width: 100%; /* Ensure the chart uses the full available width within its container */\r\n  height: 100%; /* Ensure the chart uses full height */\r\n}\r\n</style>\r\n","import { render } from \"./InvoiceBucketsPerformance.vue?vue&type=template&id=463516b0&scoped=true\"\nimport script from \"./InvoiceBucketsPerformance.vue?vue&type=script&lang=js\"\nexport * from \"./InvoiceBucketsPerformance.vue?vue&type=script&lang=js\"\n\nimport \"./InvoiceBucketsPerformance.vue?vue&type=style&index=0&id=463516b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-463516b0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"chart-container\">\r\n    <Bar\r\n      v-if=\"chartDataReady\"\r\n      id=\"classification-accuracy-chart\"\r\n      :options=\"chartOptions\"\r\n      :data=\"chartData\"\r\n      ref=\"myChart\"\r\n    />\r\n    <div class=\"chart-details\">\r\n      <h3>Explanation of the Classification Accuracy Buckets:</h3>\r\n      <ul>\r\n        <li><strong>1 - 6 numbers match incorrectly:</strong> 5 points</li>\r\n        <li><strong>7 - 8 numbers match incorrectly:</strong> 3 points</li>\r\n        <li><strong>9 – 11 match incorrectly: </strong> 1 point</li>\r\n        <li><strong>Exact Match:</strong> 0 points</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Bar } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\r\n\r\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n\r\nexport default {\r\n  name: 'ClassificationDailyPerformance',\r\n  components: { Bar },\r\n  props: {\r\n    reportDate: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      fetchedData: [], // To hold the fetched classification accuracy buckets\r\n      chartData: {\r\n        labels: [], // Labels for the score buckets\r\n        datasets: [\r\n          {\r\n            label: 'Number of Lines Classified',\r\n            backgroundColor: 'rgba(153, 102, 255, 0.7)', // Bar color\r\n            data: [], // Data for the number of records\r\n          }\r\n        ]\r\n      },\r\n      chartOptions: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Score Buckets',\r\n            },\r\n          },\r\n          y: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            title: {\r\n              display: true,\r\n              text: 'Number of Lines',\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: \"Classification Accuracy Buckets\",\r\n            font: {\r\n              size: 18, // Title font size\r\n            },\r\n            padding: {\r\n              top: 10,\r\n              bottom: 20,\r\n            }\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n        },\r\n        onClick: (event, elements) => {\r\n          if (elements.length > 0) {\r\n            const elementIndex = elements[0].index;\r\n            // const label = this.chartData.labels[elementIndex];\r\n            const data = this.chartData.datasets[0].data[elementIndex];\r\n            \r\n            // Trigger your custom event or action here\r\n            this.handleBarClick(elementIndex, data);\r\n          }\r\n        },\r\n      },\r\n      chartDataReady: false, // Control when to render the chart\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchData(this.reportDate); // Fetch data when the component mounts\r\n  },\r\n  watch: {\r\n    reportDate(newDate) {\r\n      this.fetchData(newDate); // Re-fetch data when the date prop changes\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchData(date) {\r\n      try {\r\n        const response = await fetch(`${process.env.VUE_APP_API_BASE_URL}classification-accuracy-buckets?date=${date}`);\r\n        const data = await response.json();\r\n        console.log('Classification accuracy buckets:', data);\r\n\r\n        if (data && data.length > 0) {\r\n          this.fetchedData = data;\r\n          // Populate the chart data\r\n          this.chartData.labels = data.map((entry) => entry.score_bucket);\r\n          this.chartData.datasets[0].data = data.map((entry) => entry.number_of_lines);\r\n\r\n          // Trigger the chart rendering\r\n          this.chartDataReady = false;\r\n          this.$nextTick(() => {\r\n            this.chartDataReady = true;\r\n          });\r\n        } else {\r\n          // Reset the chart if no data is returned\r\n          this.chartData.labels = [];\r\n          this.chartData.datasets[0].data = [];\r\n          this.chartDataReady = true;\r\n        }\r\n        console.log('Updated chart data:', this.chartData);\r\n      } catch (error) {\r\n        console.error('Error fetching classification accuracy buckets:', error);\r\n      }\r\n    },\r\n    handleBarClick(index, data) {\r\n      console.log(this.fetchedData);\r\n      console.log(`Index: ${index}`);\r\n      console.log(`Data: ${data}`);\r\n      const selectedBucket = this.fetchedData[index];\r\n      console.log('Selected bucket:', selectedBucket);\r\n      const invoiceLineIds = selectedBucket.invoice_line_ids.split(',').map(id => id.trim());\r\n      console.log('Invoice Line IDs:', invoiceLineIds);\r\n  \r\n      this.$router.push({\r\n        name: 'ClassificationAccuracyReport',\r\n        query: {\r\n          invoiceLineIds: invoiceLineIds.join(',')\r\n        }\r\n      });\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  width: 100%; /* Ensure the chart takes up the full width of the parent */\r\n  max-width: 800px; /* Optional: limit the maximum width */\r\n  margin: auto;\r\n}\r\n\r\n.chart-container > canvas {\r\n  width: 100% !important; /* Force the canvas (chart) to take up the full width */\r\n}\r\n\r\n.chart-details {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  text-align: left; /* Override parent centering */\r\n}\r\n\r\n.chart-details h3 {\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.chart-details ul {\r\n  padding-left: 20px;\r\n}\r\n\r\n.chart-details li {\r\n  margin-bottom: 5px;\r\n}\r\n</style>\r\n","import { render } from \"./ClassificationDailyPerformance.vue?vue&type=template&id=475911dc&scoped=true\"\nimport script from \"./ClassificationDailyPerformance.vue?vue&type=script&lang=js\"\nexport * from \"./ClassificationDailyPerformance.vue?vue&type=script&lang=js\"\n\nimport \"./ClassificationDailyPerformance.vue?vue&type=style&index=0&id=475911dc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-475911dc\"]])\n\nexport default __exports__","<template>\r\n    <Bar\r\n      v-if=\"chartDataReady\"\r\n      id=\"invoice-processing-time-chart\"\r\n      :options=\"chartOptions\"\r\n      :data=\"chartData\"\r\n      ref=\"myChart\"\r\n    />\r\n  </template>\r\n  \r\n  <script>\r\n  import { Bar } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n  } from 'chart.js';\r\n  \r\n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n  \r\n  export default {\r\n    name: 'InvoiceLineBucketsPerformance',\r\n    components: { Bar },\r\n    props: {\r\n      reportDate: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        fetchedData: [],\r\n        chartData: {\r\n          labels: [], // Labels for the time buckets (based on line count ranges)\r\n          datasets: [\r\n            {\r\n              label: 'Average Processing Time (minutes)',\r\n              backgroundColor: 'rgba(75, 192, 192, 0.7)', // Bar color\r\n              data: [], // Data for average processing time\r\n            }\r\n          ]\r\n        },\r\n        chartOptions: {\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Number of Lines',\r\n              },\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'Average Processing Time (minutes)',\r\n              },\r\n            },\r\n          },\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: \"Invoice Processing Time by Number of Lines\",\r\n              font: {\r\n                size: 18, // Title font size\r\n              },\r\n              padding: {\r\n                top: 10,\r\n                bottom: 20,\r\n              }\r\n            },\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n          },\r\n        },\r\n        chartDataReady: false, // Control when to render the chart\r\n      };\r\n    },\r\n    async mounted() {\r\n      await this.fetchData(this.reportDate); // Fetch data when the component mounts\r\n    },\r\n    watch: {\r\n      reportDate(newDate) {\r\n        this.fetchData(newDate); // Re-fetch data when the date prop changes\r\n      }\r\n    },\r\n    methods: {\r\n      async fetchData(date) {\r\n        try {\r\n          const response = await fetch(`${process.env.VUE_APP_API_BASE_URL}invoice-line-buckets?date=${date}`);\r\n          const data = await response.json();\r\n          console.log('Invoice processing Line buckets:', data);\r\n  \r\n          if (data && data.length > 0) {\r\n            this.fetchedData = data;\r\n            // Populate the chart data\r\n            this.chartData.labels = data.map((entry) => entry.line_bucket);\r\n            this.chartData.datasets[0].data = data.map((entry) => entry.average_processing_time); // Update to use average_processing_time\r\n  \r\n            // Trigger the chart rendering\r\n            this.chartDataReady = false;\r\n            this.$nextTick(() => {\r\n              this.chartDataReady = true;\r\n            });\r\n          }\r\n          console.log('Updated chart data:', this.chartData);\r\n        } catch (error) {\r\n          console.error('Error fetching invoice processing time buckets:', error);\r\n        }\r\n      },\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .chart-container {\r\n    max-width: 800px; /* Restrict the maximum width */\r\n    width: 100%; /* Allow the container to use up to 100% of its parent's width */\r\n    height: 100%; /* Ensure the container takes up full height */\r\n    display: flex; /* Flexbox for alignment */\r\n    align-items: stretch; /* Stretch to fill the available height */\r\n    justify-content: center; /* Center the chart horizontally */\r\n  }\r\n  \r\n  #invoice-processing-time-chart {\r\n    flex: 0 1 auto; /* Prevent the chart from growing beyond its content width */\r\n    width: 100%; /* Ensure the chart uses the full available width within its container */\r\n    height: 100%; /* Ensure the chart uses full height */\r\n  }\r\n  </style>\r\n  ","import { render } from \"./InvoiceLineBucketsPerformance.vue?vue&type=template&id=6df9e846&scoped=true\"\nimport script from \"./InvoiceLineBucketsPerformance.vue?vue&type=script&lang=js\"\nexport * from \"./InvoiceLineBucketsPerformance.vue?vue&type=script&lang=js\"\n\nimport \"./InvoiceLineBucketsPerformance.vue?vue&type=style&index=0&id=6df9e846&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6df9e846\"]])\n\nexport default __exports__","import { render } from \"./PerformanceDashboard.vue?vue&type=template&id=168e24ed\"\nimport script from \"./PerformanceDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./PerformanceDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./PerformanceDashboard.vue?vue&type=style&index=0&id=168e24ed&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <h1>Entry Details</h1>\r\n      <!-- Search field -->\r\n      <input type=\"text\" v-model=\"searchTerm\" placeholder=\"Search entries\" />\r\n  \r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Entry #</th>\r\n            <th>Consignee</th>\r\n            <th>Invoice Number</th>\r\n            <th>Waybill Number</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"entry in filteredEntries\" :key=\"entry.entry_id\">\r\n            <td>{{ entry.entry_number }}</td>\r\n            <td>{{ entry.importerName }}</td>\r\n            <td>{{ entry.invoice_number ? entry.invoice_number.split('; ')[0] : '' }}</td>\r\n            <td>{{ entry.waybill_number }}</td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-success\" @click=\"openEntry(entry.entry_id, entry.entry_type)\">Edit</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ENTRY_TYPES } from '../constants';\r\n\r\nexport default {\r\n  name: \"AllEntries\",\r\n  props: {\r\n    entryIds: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      entries: [], // To hold the fetched entries\r\n      error: null, // To handle errors\r\n      searchTerm: '', // To hold the search term\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchEntries(); // Fetch entries when the page is created\r\n  },\r\n  methods: {\r\n    async fetchEntries() {\r\n        try {\r\n            console.log('Fetching entries with IDs:', this.entryIds);\r\n\r\n            // Ensure entryIds is an array\r\n            const entryIdsArray = Array.isArray(this.entryIds) ? this.entryIds : this.entryIds.split(',').map(id => id.trim());\r\n\r\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/entries-by-ids`, {\r\n            params: { entry_ids: entryIdsArray }\r\n            });\r\n\r\n            this.entries = response.data;\r\n        } catch (error) {\r\n            this.error = error.message;\r\n            console.error('There was an error fetching entries!', error);\r\n        }\r\n    },\r\n    openEntry(entryId, entryType) {\r\n      if (entryType === ENTRY_TYPES.VEHICLES) {\r\n        this.$router.push({ name: 'VehicleEntryEditPage', params: { entryId } });\r\n      } else {\r\n        this.$router.push({ name: 'EntryDetails', params: { entryId } });\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    filteredEntries() {\r\n      if (!this.searchTerm) return this.entries;\r\n\r\n      const term = this.searchTerm.toLowerCase();\r\n      return this.entries.filter(entry => {\r\n        return (\r\n          (entry.entry_number && entry.entry_number.toLowerCase().includes(term)) ||\r\n          (entry.waybill_number && entry.waybill_number.toLowerCase().includes(term)) ||\r\n          (entry.invoice_number && entry.invoice_number.split('; ').some(invoice_number => invoice_number.toLowerCase().includes(term))) ||\r\n          (entry.importerName && entry.importerName.toLowerCase().includes(term))\r\n        );\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\ntable, th, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n</style>\r\n  ","import { render } from \"./AllEntries.vue?vue&type=template&id=7b9a75de&scoped=true\"\nimport script from \"./AllEntries.vue?vue&type=script&lang=js\"\nexport * from \"./AllEntries.vue?vue&type=script&lang=js\"\n\nimport \"./AllEntries.vue?vue&type=style&index=0&id=7b9a75de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7b9a75de\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"classification-report-page\">\r\n      <h1>Classification Accuracy Details</h1>\r\n      <!-- Search field -->\r\n      <input type=\"text\" v-model=\"searchTerm\" placeholder=\"Search classification details\" />\r\n  \r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>LLM Code</th>\r\n            <th>Approved Code</th>\r\n            <th>Description</th>\r\n            <th>Supplier Name</th>\r\n            <th>Reference #</th>\r\n            <th>Open Entry</th>\r\n            <th>View Invoice</th>\r\n            <th>Expand</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <template v-for=\"(entry, index) in classificationData\" :key=\"index\">\r\n            <tr>\r\n            <td>{{ index + 1 }}</td>\r\n            <td>{{ entry.llm_recommended_classification_code }}</td>\r\n            <td>{{ entry.approved_classification_code }}</td>\r\n            <td>{{ entry.description }}</td>\r\n            <td>{{ entry.supplier_name }}</td>\r\n            <td>{{ entry.entry_number }}</td>\r\n            <td>\r\n                <button class=\"btn btn-success\" @click=\"openEntry(entry.entry_id)\">\r\n                    <i class=\"fa fa-folder-open\"></i>\r\n                </button>\r\n            </td>\r\n            <td>\r\n              <button type=\"button\" class=\"btn btn-success\" @click=\"openInvoice(entry.file_url)\">\r\n                <i class=\"fa fa-file-invoice\"></i>\r\n              </button>\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"toggleDetails(index)\">\r\n                    <span v-if=\"expandedIndex === index\">\r\n                        <i class=\"fas fa-chevron-up\" style=\"color: white\"></i>\r\n                    </span>\r\n                    <span v-else>\r\n                        <i class=\"fas fa-chevron-down\" style=\"color: white\"></i>\r\n                    </span>\r\n                </button>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"expandedIndex === index\">\r\n            <td colspan=\"9\">\r\n              <table>\r\n                <thead>\r\n                  <th></th>\r\n                  <th>Commodity Code</th>\r\n                  <th> Commodity Code Description</th>\r\n                  <th>VAT</th>\r\n                  <th>DUTY</th>\r\n                </thead>\r\n                <tr>\r\n                  <td>LLM Code</td>\r\n                  <td> {{ entry.llm_recommended_classification_code }}</td>\r\n                  <td> {{ entry.llm_recommended_classification_description }}</td>\r\n                  <td> {{ entry.llm_recommended_classification_code_vat }}%</td>\r\n                  <td> {{ entry.llm_recommended_classification_code_duty }}%</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Approved Code</td>\r\n                  <td> {{ entry.approved_classification_code }}</td>\r\n                  <td> {{ entry.approved_classification_description }}</td>\r\n                  <td> {{ entry.approved_classification_code_vat }}%</td>\r\n                  <td> {{ entry.approved_classification_code_duty }}%</td>\r\n                </tr>\r\n              </table>\r\n            </td>\r\n          </tr>\r\n          </template>\r\n          \r\n        </tbody>\r\n      </table>\r\n      <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import * as DatabaseConnector from \"@/composables/DatabaseConnector\";\r\n  \r\n  export default {\r\n    name: \"ClassificationAccuracyReport\",\r\n    data() {\r\n      return {\r\n        classificationData: [], // To hold the fetched entries\r\n        error: null, // To handle errors\r\n        searchTerm: '', // To hold the search term\r\n        expandedIndex: null,\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchClassificationDetails(); // Fetch classification details when the page is created\r\n    },\r\n    methods: {\r\n        toggleDetails(index) {\r\n          this.expandedIndex = this.expandedIndex === index ? null : index;\r\n        },\r\n        openInvoice(url){\r\n            const newWindow = window.open('', '_blank', 'width=800,height=600');\r\n            if (newWindow) {\r\n                newWindow.document.write(\r\n                `<iframe src=\"${url}\" style=\"width:100%; height:100%;\" frameborder=\"0\"></iframe>`\r\n                );\r\n                newWindow.document.title = 'Document View';\r\n            } else {\r\n                console.error('Failed to open new window.');\r\n            }\r\n        },\r\n      async fetchClassificationDetails() {\r\n        try {\r\n            const invoiceLineIds = this.$route.query.invoiceLineIds;\r\n            console.log('Invoice Line IDs:', invoiceLineIds);\r\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}classification-data`, {\r\n            params: {\r\n                invoiceLineIds: this.$route.query.invoiceLineIds\r\n            }\r\n            });\r\n            console.log('Classification data:', response.data);\r\n            this.classificationData = response.data;\r\n            let promises = [];\r\n            for (let entry of this.classificationData) {\r\n                promises.push(DatabaseConnector.getCommodityCharges(entry.approved_classification_code.replace(/\\./g, \"\")).then((chargesResponse) => {\r\n                  let icdObject = chargesResponse.charges[\"import custom duty\"];\r\n                  const icdCharge = icdObject === undefined ? 0 : parseFloat(icdObject[0].charge_amount);\r\n                  let vatObject = chargesResponse.charges[\"value added tax\"];\r\n                  const vatCharge = vatObject === undefined ? 0 : parseFloat(vatObject[0].charge_amount);\r\n                  entry['approved_classification_code_vat'] = vatCharge;\r\n                  entry['approved_classification_code_duty'] = icdCharge;\r\n                  entry['approved_classification_description'] = chargesResponse.description;\r\n                  console.log('Charges:', chargesResponse);\r\n                }).catch((error) => {\r\n                  console.error('Error fetching commodity charges:', error);\r\n                }));\r\n\r\n                promises.push(DatabaseConnector.getCommodityCharges(entry.llm_recommended_classification_code.replace(/\\./g, \"\")).then((chargesResponse) => {\r\n                  let icdObject = chargesResponse.charges[\"import custom duty\"];\r\n                  const icdCharge = icdObject === undefined ? 0 : parseFloat(icdObject[0].charge_amount);\r\n                  let vatObject = chargesResponse.charges[\"value added tax\"];\r\n                  const vatCharge = vatObject === undefined ? 0 : parseFloat(vatObject[0].charge_amount);\r\n                  entry['llm_recommended_classification_code_vat'] = vatCharge;\r\n                  entry['llm_recommended_classification_code_duty'] = icdCharge;\r\n                  entry['llm_recommended_classification_description'] = chargesResponse.description;\r\n                }).catch((error) => {\r\n                  console.error('Error fetching commodity charges:', error);\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            this.error = error.message;\r\n            console.error('Error fetching classification data:', error);\r\n        }\r\n      },\r\n      openEntry(entryId){\r\n        this.$router.push({ name: 'EntryDetails', params: { entryId } });\r\n      },\r\n    },\r\n    computed: {\r\n      filteredEntries() {\r\n        if (!this.searchTerm) return this.entries;\r\n  \r\n        const term = this.searchTerm.toLowerCase();\r\n        return this.entries.filter(entry => {\r\n          return (\r\n            (entry.llm_recommended_classification_code && entry.llm_recommended_classification_code.toLowerCase().includes(term)) ||\r\n            (entry.approved_classification_code && entry.approved_classification_code.toLowerCase().includes(term)) ||\r\n            (entry.description && entry.description.toLowerCase().includes(term)) ||\r\n            (entry.supplier_name && entry.supplier_name.toLowerCase().includes(term)) ||\r\n            (entry.entry_id && entry.entry_id.toString().toLowerCase().includes(term))\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .classification-report-page {\r\n    padding: 20px;\r\n  }\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  table, th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  \r\n  tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n  }\r\n  </style>\r\n  ","import { render } from \"./ClassificationAccuracyReport.vue?vue&type=template&id=76c39d09&scoped=true\"\nimport script from \"./ClassificationAccuracyReport.vue?vue&type=script&lang=js\"\nexport * from \"./ClassificationAccuracyReport.vue?vue&type=script&lang=js\"\n\nimport \"./ClassificationAccuracyReport.vue?vue&type=style&index=0&id=76c39d09&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-76c39d09\"]])\n\nexport default __exports__","// router/index.js\r\nimport { createRouter, createWebHistory } from 'vue-router';\r\nimport HelloWorld from '../components/HelloWorld.vue'\r\nimport ViewEntries from '../components/viewEntries.vue';\r\nimport EntryDetails from '@/components/EntryDetails.vue';\r\nimport CustomsDeclarationForm from '@/components/CustomsDeclarationForm.vue';\r\nimport BuyersPage from '@/components/ConfigurationPages/BuyersPage.vue';\r\nimport SellersPage from '@/components/ConfigurationPages/SellersPage.vue';\r\nimport DeclarantsPage from '@/components/ConfigurationPages/DeclarantsPage.vue';\r\nimport VesselsPage from '@/components/ConfigurationPages/VesselsPage.vue';\r\nimport ExchangeRatesPage from '@/components/ConfigurationPages/RateOfExchangePage.vue';\r\nimport VehicleEntryCreatePage from '@/components/VehicleEntryCreatePage.vue';\r\nimport VehicleEntryEditPage from '@/components/VehicleEntryEditPage.vue';\r\n\r\nimport ApprovedClassificationEntries from '@/components/ApprovedClassificationEntries.vue';\r\nimport PartialStorageEntries from '@/components/PartialStorageEntries.vue';\r\nimport FullStorageEntries from '@/components/FullStorageEntries.vue';\r\nimport PerformanceDashboard from '@/components/PerformanceAnalysis/PerformanceDashboard.vue';\r\nimport AllEntries from '@/components/AllEntries.vue';\r\nimport ClassificationAccuracyReport from '@/components/PerformanceAnalysis/ClassificationAccuracyReport.vue';\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'NewEntry',\r\n    component: HelloWorld // Your existing 'New Entry' page\r\n  },\r\n  {\r\n    path: '/view-entries',\r\n    name: 'ViewEntries',\r\n    component: ViewEntries // The 'View Entries' page you want to create\r\n  },\r\n  {\r\n    path: '/entries/:entryId', // :entryId is a dynamic segment\r\n    name: 'EntryDetails',\r\n    component: EntryDetails,\r\n    props: true // Pass route.params to the component as props\r\n  },\r\n  {\r\n    path: '/customs-declaration/:entryId', // :entryId is a dynamic segment\r\n    name: 'CustomsDeclarationForm',\r\n    component: CustomsDeclarationForm,\r\n    props: true // Pass route.params to the component as props\r\n  },\r\n  {\r\n    path: '/buyers',\r\n    name: 'BuyersPage',\r\n    component: BuyersPage\r\n  },\r\n  {\r\n    path: '/sellers',\r\n    name: 'SellersPage',\r\n    component: SellersPage\r\n  },\r\n  {\r\n    path: '/declarants',\r\n    name: 'DeclarantsPage',\r\n    component: DeclarantsPage\r\n  },\r\n  {\r\n    path: '/vessels',\r\n    name: 'VesselsPage',\r\n    component: VesselsPage\r\n  },\r\n  {\r\n    path: '/rate-of-exchange',\r\n    name: 'RateOfExchnagePage',\r\n    component: ExchangeRatesPage\r\n  },\r\n  {\r\n    path: '/create-vehicle-entry',\r\n    name: 'VehicleEntry',\r\n    component: VehicleEntryCreatePage\r\n  },\r\n  {\r\n    path: '/edit-vehicle-entry/:entryId',\r\n    name: 'VehicleEntryEditPage',\r\n    component: VehicleEntryEditPage,\r\n  },\r\n  {\r\n    path: '/approved-classification-entries',\r\n    name: 'ApprovedClassificationEntries',\r\n    component: ApprovedClassificationEntries\r\n  },\r\n  {\r\n    path: '/partial-storage-entries',\r\n    name: 'PartialStorageEntries',\r\n    component: PartialStorageEntries\r\n  },\r\n  {\r\n    path: '/full-storage-entries',\r\n    name: 'FullStorageEntries',\r\n    component: FullStorageEntries\r\n  },\r\n  {\r\n    path: '/performance-dashboard',\r\n    name: 'PerformanceDashboard',\r\n    component: PerformanceDashboard\r\n  },\r\n  {\r\n    path: '/all-entries/:entryIds',\r\n    name: 'AllEntries',\r\n    component: AllEntries,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/classification-accuracy-report',\r\n    name: 'ClassificationAccuracyReport',\r\n    component: ClassificationAccuracyReport,\r\n    props: true\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(), // Use history mode to avoid hashes in URLs\r\n  routes // short for `routes: routes`\r\n});\r\n\r\nexport default router;\r\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router/index'; // Corrected import path\nimport Vue3Select from 'vue3-select';\n\n// createApp(App).use(router).mount('#app');\nconst app = createApp(App);\napp.use(router);\napp.component('v-select', Vue3Select);\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkasycuda_xml_automation\"] = self[\"webpackChunkasycuda_xml_automation\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(7538); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","class","_createElementVNode","href","type","role","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_router_view","name","components","__exports__","render","key","onClick","_cache","args","$options","verifyInvoiceData","mergeAndOpenPDFs","openWaybill","_normalizeClass","classificationStatus","$data","displayDocumentVerificationView","_createBlock","_component_VerifyDocumentData","invoices","invoiceDataArray","customsEntryForm","pdfFiles","_createCommentVNode","$event","referenceNumber","placeholder","onInput","validateInput","onDragover","_withModifiers","dragOver","onDragenter","dragEnter","onDragleave","dragLeave","onDrop","_ctx","handleDrop","multiple","onChange","handleFileUpload","style","accept","ref","triggerFileInput","handleWaybillUpload","uploadInvoicesAndWaybills","_Fragment","_renderList","selectedFiles","file","index","_toDisplayString","waybillFiles","_component_CustomsEntryForm","onUpdateCustomsEntryForm","_component_DocumentTableView","documentVerificationFormat","linesToBeDeleted","length","totalNumberOfLines","totalFOBValue","disabled","entryButtonDisabled","createInvoices","apiUrl","process","mawiApiUrl","sendRequest","async","method","url","data","response","axios","error","console","createCommercialInvoice","invoice","createToyotaEntry","entry","getEntryDetails","entryId","getCommercialInvoiceDetailsWithVehicles","generateCustomsDeclaration","responseType","requestData","generateBlankValuationForm","generatePreSignedValuationForm","generatePreSignedValuationFormVersion2","saveCustomsDeclaration","fetchCustomsDeclarations","log","fetchBuyers","fetchDeclarants","fetchCustomsEntryDeclarants","fetchShippers","updateCustomsDeclaration","declaration","fetchCountries","fetch","json","country","common","cca2","addBuyer","buyer","updateBuyer","updateShipper","shipper","updateDeclarant","declarant","addShipper","addDeclarant","fetchCpcCodes","fetchNpcCodes","fetchNPCWithCPC","fetchPorts","fetchExchangeRates","fetchRatesBasedOnShippedOnBoard","shippedOnBoardDate","addExchangeRate","exchangeRate","fetchVessels","insertVessel","vessel","updateVessel","generateWorkSheet","format","generateToyotaXML","generateToyotaWorksheet","generateAsycudaXML","getCommodityCharges","commodity","generateDepositForm","generateScoonerBL","generateC84Form","generateOvertimeForm","getSpecialExemptionDeclarations","importerTin","readVehicleFiles","getCommodityCode","itemDescriptions","status","generateCaricomInvoice","updateEntryData","entryData","updateWaybillData","waybillId","waybillData","uploadFiles","post","files","headers","deleteInvoiceLines","InvoiceIDList","verifyReferenceNumber","fetchTradeAgreements","sendInvoiceAIPerformanceMetrics","sendClassificationPerformanceMetrics","insertInvoiceLines","invoiceLines","readWaybillModel","readWaybillClaude","updateClassificationAccuracyPerformanceMetrics","classifyItemsHistory","insertNewInvoice","generateBreakdownSheet","formatWorkSheetData","declarantName","declarantTIN","regimeType","importerName","importerTIN","exporterName","exporterTIN","vesselName","portOfDischarger","deposit","containerCharges","additionalCharges","localFee","freightAmount","insurance","otherCharges","freightCurrency","freightRateOfExchange","insuranceCurrency","insuranceRateOfExchange","otherChargesCurrency","otherChargesRateOfExchange","manualExemptionApplied","arrival_date","workSheetObject","relieved","reference_number","tin","regime","waybill","importer","exporter","port_of_discharge","charges","international_freight","amount","parseFloat","verifyNumbers","currency","rate_of_exchange","other_charges","additional_local_charges","container_charges","additional_charges","local_fee","undefined","isNaN","parseFloatFromString","inputString","numericString","replace","floatValue","cacluateCIF","invoiceTotal","totalFOB","freight","inland","freightSplit","formatCharges","chargeData","vatApplicable","chargeDetails","entries","chargeObj","value","operand_field","subjected_to_vat","forEach","detail","charge_amount","tariff_charge_id","push","generateXMLData","waybillNumber","grossWeight","netWeight","packageQuantity","packageType","marksAndNumbers","availableCPCCodes","tradeAgreementOptions","cumulativeWeight","sum","invoiceIndex","invoiceArray","exworks","invoice_total","invoice_currency","supplementary_charges_and_deductions","internal_freight","other","deductions","line_items","lines","item","itemIndex","array","gross_weight","extension_price","Number","toFixed","Math","floor","net_weight","description","quantity","unit_cost","unit_price","cpc_code","parseInt","find","cpc","cpcId","cpcCode","country_origin_code","country_of_origin","anc_code","npc_code","trade_agreement","agreement","tradeAgreement","tariff_code","package_quantity","kind_of_package","marks_and_numbers","trimStringToLimit","limit","substring","formatVehicleDataXML","vehicles","totalGrossWeight","countryOfOrigin","flatMap","vehicle","vehicleIndex","vehicleArray","details","detailIndex","detailArray","unitPrice","npcCode","thnNumber","chassisNumber","chassis_number","curb_weight","curbWeight","engine_number","engineNumber","exterior_color","exteriorColor","customer","customerName","customer_tin","customerTIN","instruction_code","brokerInstructions","engine_displacement","engineDisplacement","manufacture_year","manufactureYear","number_of_seats","numberOfSeats","number_of_doors","numberOfDoors","tyre_size","tyreSize","model_code","modelCode","fuel_type","fuelType","seat_position","seatPosition","used_flag","model_name","discountCheck","Array","isArray","invoice_items","discountedPrice","discounted_unit_price","formatVehicleDataWorksheet","formatCommercialData","invoice_number","supplier","supplier_name","cif_foreign_currency","cif_local_currency","manualExemption","cpcCodeName","tradeAgreementCode","formatInvoiceData","invoice_id","vendor_name","getCurrentDateString","today","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","dateString","getDateStringInputField","date","formatDepositData","waybillDate","incoTerms","importNumber","declarantNumber","countryOfOriginCode","meansOfTransport","modeOTransportCode","portCode","depositAmount","reason","termsOfPayment","imorterNo","declarantNo","reference","consignor","countryOfConsignment","countryOfConsignmentCode","meansOfTransportation","rotation","mode","portOfImportation","dateOfImportation","formatCaricomData","importerNameAddress","exporterNameAddress","portOfLoading","countryOfDestination","modeOfTransport","descriptionOfGoods","totalCargoValue","packageList","line","lineGrossWeight","lineNetWeight","toLocaleString","minimumFractionDigits","totalValue","numberAndKindOfPackages","initializeCustomsEntryForm","exporters","importers","vessels","ports","declarants","incotermsList","ratesOfExchange","importerId","exporterId","importerTaxIdentificationNumber","exporterTaxIdentificationNumber","exporterCountry","declarantId","declarantTaxIdentificationNumber","freightType","vesselId","portOfDischargeId","portOfDischargeName","numberOfPackages","packageTypes","insuranceAmount","rateOfExchange","regimeTypeCode","regimeTypeOptions","countryOfFinalDestination","countryLastProvinance","tradingCountry","getClassificationStatus","invoiceList","some","trim","formatDate","options","toLocaleDateString","normalizeString","str","toLowerCase","findClosestMatch","searchString","searchArray","searchField","normalizedSearchString","names","bestMatch","stringSimilarity","target","parseDate","cleanDateString","possibleFormats","formatString","parsedDate","parse","locale","enUS","formatDateString","parseFreightCharges","freightString","cleanedString","parsedValue","formatScoonerBLDetails","freightPayableAt","portOfDischarge","renameObjectKeys","i","rest","readFilesLLM","formData","FormData","append","invoiceProcessingStart","body","then","invoiceProcessingEnd","invoice_exworks_amount","invoice_internal_freight_amount","invoice_insurance_amount","invoice_other_charges_amount","final_total","total_tax","subtotal","invoice_date","llmResponse","invoiceData","invoiceProcessingTime","formatDateReadFromDB","databaseDate","dateObject","toISOString","split","showSuccessAlert","title","Swal","position","toast","icon","showConfirmButton","timer","timerProgressBar","asyncLoadingAlert","text","html","allowOutsideClick","backdrop","width","didOpen","customClass","container","closeCurrentAlert","showErrorAlert","showLoadingAlert","willOpen","displayConfirmationDialog","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","form","declarationList","signatories","options1","join","options2","signatory","focusConfirm","preConfirm","select1","querySelector","select2","generatePreSigned","isConfirmed","overtimeAlert","cargoDetails","startTime","hours","minutes","hour","period","adjustedHour","formattedTime","caricomAlert","input","inputLabel","inputPlaceholder","inputValidator","enterYourName","discountAlert","cancelButtonText","worksheetFormatAlert","dismiss","cancel","depositReasonAlert","inputOptions","displayRateOfExchangeTable","exchangeRates","tableHtml","rate","base_currency","Utilities","last_updated","showCloseButton","displayEditableTaxTable","taxData","extensionPrice","taxName","taxArray","taxDetails","chargeAmount","document","querySelectorAll","addEventListener","this","dataset","percentage","amountPayable","getElementById","taxes","innerHTML","scoonerBLAlert","usePackageTypes","packageTypesList","getConfigurations","configuration","defaultCPCCode","boncedCPCCode","defaultRegimeType","defaultNPCCode","getFreightTypes","freightTypes","$props","src","height","for","_hoisted_42","_hoisted_46","_hoisted_49","colspan","_hoisted_72","dataIndex","_component_v_select","modelValue","currencies","label","searchable","reduce","filterable","_hoisted_18","_hoisted_19","discount_applied","handleInvoiceDiscountApplication","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","contenteditable","onBlur","updateItem","innerText","product_code","_hoisted_33","_hoisted_34","commodityCodeStatus","handleInput","updateTariffCode","commodity_description","_hoisted_35","_hoisted_36","icdCharge","_hoisted_37","vatCharge","_normalizeStyle","naStyle","_hoisted_38","_hoisted_39","extensionStyle","_hoisted_40","verifyExtensionPrice","fixExtensionPrice","_hoisted_43","_hoisted_41","toggleDetails","expandedIndex","_hoisted_45","_hoisted_47","_hoisted_48","_hoisted_50","_hoisted_44","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","countries","_hoisted_56","_hoisted_57","onCPCCodeChange","_hoisted_58","_hoisted_59","availableNPCCodes","npc","_hoisted_60","_hoisted_61","tradeAgreements","_hoisted_62","_hoisted_63","displayManualExemptionAlert","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","handleLineDiscountApplication","_hoisted_68","_hoisted_69","_hoisted_70","deleteRow","_hoisted_73","_hoisted_71","_hoisted_74","addNewLine","_hoisted_75","_hoisted_76","_hoisted_77","updateData","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","calculateInvoiceTotal","_hoisted_82","_hoisted_83","_hoisted_84","checkInvoiceTotal","calculateTotalExtensionPrice","newInvoices","_hoisted_85","uploadFilesLLM","getCurrencyList","currencyList","props","cpcCodeOptions","npcCodeOptions","applicableTaxes","methods","formatValue","truncateString","moveCursorToEnd","addNewInvoice","classifyInvoiceItems","processCommodityCodes","initTooltips","tooltipTriggerList","tooltipTriggerEl","window","bootstrap","Tooltip","mounted","Currency","computed","SweetAlertConnector","invoicesToBeAdded","catch","descriptions","filter","classification_description","commodity_code","product_number","commodityCodes","DatabaseConnector","commodityCode","classification_model_suggested_code","insertFullStops","toString","itemPerformanceMetric","llm_recommended_classification_code","approved_classification_code","performanceMetric","items","acc","refName","$refs","click","event","from","newInvoice","expected","actual","v","includes","totalExtensions","backgroundColor","color","total","newItem","linesToBeAdded","field","invoice_line_id","splice","chargesResponse","icdObject","vatObject","regimeData","cpcCodes","filteredList","uniqueNPCCodes","self","findIndex","t","sanitizedValue","formattedValue","numberString","slice","element","range","createRange","selection","getSelection","selectNodeContents","collapse","removeAllRanges","addRange","taxResults","Exemptions","DocumentTableView","onDragLeave","isDragging","selectFiles","onFileSelect","images","image","fileInput","handleFiles","reader","FileReader","onload","Image","readAsDataURL","preventDefault","dataTransfer","dropEffect","localData","option","tooltipContent","modeOfTransportOOptions","availableFreightTypes","required","port","readonly","clearable","regimeTypeId","incoterm","countryList","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","_hoisted_103","_hoisted_104","_hoisted_105","_hoisted_106","_hoisted_107","_hoisted_108","_hoisted_109","estimatedArrivalDate","getIncoTermsList","incoTermsList","PackageTypes","IncoTerms","BrokerCongifurations","freightTypeOptions","results","updated","setModeOfTransport","$nextTick","modeOfTransportSelect","dispatchEvent","Event","updateModeOfTransport","updateField","$emit","Promise","all","address","watch","deep","handler","newVal","taxIdentificationNumber","ENTRY_TYPES","STANDARD","VEHICLES","CLASSIFICATION_STATUS","NOT_CLASSIFIED","NOT_STARTED","IN_PROGRESS","COMPLETED","APPROVED","ENTRY_STATUS","STORED_AND_NOT_CLASSIFIED","CLASSIFICATION_OKAY","PARTIAL_STORAGE","FULL_STORAGE","INVOICE_AI_MODELS","MICROSOFT_FORM_RECOGNIZER","CLAUDE_LLM","CustomsEntryForm","VerifyDocumentData","FileDragAndDrop","isDragOver","isValidReference","invoicesDataExtractionCompleted","waybillDataExtractionCompleted","classificationCompleted","substr","kindOfPackage","consignee","freightCharge","editableContent","packageTypeOptions","showModeofTransportDropdown","invoicingProcessingStart","invoicingProcessingEnd","invoiceModelUtilized","classificationProcessingStart","classificationProcessingEnd","newCountry","oldCountry","newRegime","newDate","updateRates","$watch","newCurrency","immediate","setup","updateEntryFields","getTotalNumberOfLines","getRegimeTypes","thnCodesCompleted","hasInvoiceNumber","dataExtractionLoadingMessage","rates","setDefaults","Configuration","setInvoiceLineWorksheetData","promises","promise","formattedCharges","worksheetObject","invoiceSummary","worksheetResponse","fileURL","URL","createObjectURL","Blob","fileLink","createElement","fileName","entryDetails","entry_number","setAttribute","appendChild","remove","convertAWSData","summary","summary_fields","tempItem","field_type","cell_data","tempitem","VENDOR_NAME","SUBTOTAL","TOTAL","customer_name","RECEIVER_NAME","INVOICE_RECEIPT_DATE","INVOICE_RECEIPT_ID","flat","allcpcCodes","defaultCPCId","renameInvoiceObjectKeys","calculateTotalCargoValue","validateIntegerInput","newText","test","fieldName","selectOption","editableDiv","verifyData","validateData","saveFiles","waybillFormData","invoiceResponse","waybillResponse","fileResposnse","invoiceFiles","fileUrl","countryLastProvenance","entryType","classificationApproved","classificationApprovedBy","entryStatus","filesResponse","totalFileSize","size","saveInvoicePerformanceMetric","saveClassificationPerformanceMetric","redirectToEntryDetails","$router","params","createFileUrl","alert","arrayBuffer","blob","newWindow","open","write","pdfDocs","PDFDocument","load","mergedPdf","create","pdfDoc","copiedPages","copyPages","getPageIndices","page","addPage","mergedPdfBytes","save","processingStart","processingEnd","numberOfInvoices","numberOfLines","processingTime","metrics","entry_id","processing_start","processing_end","processing_time","number_of_invoices","number_of_lines","fileSize","error_message","model_utlized","readWaybillModelClaude","waybill_number","number_of_packages","mode_of_transport","selectedImporter","consignee_name","selectedExporter","shipper_name","selectedVessel","vessel_name","selectedPort","shippedOnBoardString","shipment_date","total_amount","package_type","selectedPackageType","freight_type","allFreightTypes","transport","selectedFreightType","shipped_on_board_date","freight_charges","gross_weight_in_kgs","modelUtilized","uploadFilesMicrosoft","transformArray","compressFile","reject","fileAsArray","Uint8Array","compressedFileArray","pako","deflate","compressedFile","buffer","dataToUpload","fileToUpload","percentageDecrease","downloadLink","download","removeChild","onerror","readAsArrayBuffer","discountResult","classifyItemsWithHistory","removeUnsafeCharacters","safeChars","char","formattedItems","chunkSize","chunks","chunk","beforeUnmount","pdf","revokeObjectURL","searchTerm","filteredEntries","getStatusText","classification_approved","openEntry","entry_type","created","fetchEntries","isApproved","get","message","term","dataRetrieved","commercialInvoices","invoiceDocumentSourceURLs","isGenerateCsvDisabled","saveData","goToCustomsDeclarationPage","generateCARICOM","approveClassification","partialStorage","fullStorage","generateTTC84","typeOfDeclaration","typeCode","toalInsuranceValue","totalInlandValue","totalOtherChargesValue","netInvoicePrice","formattedDate","waybill_date","set","newValue","classificationResult","waybillSourceURL","loading","dateClassified","fetchAllDetails","baseAmount","invoiceNumber","inlandFreight","saveCommodityCodeAccuracyPerformanceMetrics","countryFinalDestinationName","grossWeightString","sconnerBLDetails","toUpperCase","checkMandatoryData","checkAllCPCCodes","checkAllNPCCodes","allCodesExist","setToPartialStorage","setToFullStorage","displayRatesTable","ratesToDisplay","verifyClassificationCodes","hasInvalidCode","currentDate","inializeTaxes","updateInvoiceData","charge","relieved_rate","selectedIncoTerms","incoTerm","selectedCurrency","importerAddress","importerCountryName","importNameAddress","exporterAddress","exporterCountryName","caricomObject","buildWorksheetObject","arrivalDateString","formatResponse","getPackageTypes","getInvoiceNumbers","overtimeObject","request","c84Obj","declarationNumber","declarationDate","regimeCode","declarationContent","CPCCode","extensionCode","signatoryName","signatoryStatus","presigned","importerCode","declarationNumbers","declaration_number","selectedDeclearationIndex","selectedDelcaration","invoiceNumbers","newSegment","trimEnd","formattedInvoiceNumbers","segment","lastIndexOf","selectedSignatory","content","portObject","selectedModeOfTransport","freightTypeCode","reasonResponse","deposityData","netPrice","query","buyerId","sellerId","updateWaybillDate","countryChange","sub_total","taxed_amount","supplier_address","purchase_order_number","formatInvoiceLinesData","vat_applicable","addInvoiceLines","addInvoices","invoicesRequest","saveInvoiceDataOptimized","time","entryResponse","timeEnd","finally","toggleOptions","convertTinyIntoBoolean","tiny","api_url","entryDetailsPromise","commercialInvoicesPromise","entryDetailsResponse","commercialInvoicesResponse","estimated_arrival_date","estimateArrivalDateString","file_url","freight_charge","insurance_amount","freight_currency","insurance_currency","other_charges_currency","country_of_final_destination","incoterms","country_last_provenance","trading_country","classification_approved_by","entry_status","retrieveInvoiceDocumentSourceURL","parseInvoiceData","myDate","formatDateForInput","moment","tz","waybill_id","put","mawi_invoice","entry_date","regime_type","classification_status","date_classified","saveInvoiceData","updatePromises","formattedInvoiceData","formattedInvoiceLinesData","formattedInvoices","formattedInvoiceLines","invoicesRequestData","invoiceLinesRequestData","invoicesResponse","invoiceLinesResponse","checkTHNCodes","sendRPARequest","flowUrl","payload","JSON","stringify","ok","statusText","general_procedural_code","selectedDeclarant","selectedCountry","xmlData","group_items","number","external_freight","tax_identification_number","container_flag","country_of_destination","type_of_declaration","office_of_destination","asycudaCode","country_last_provinance","country_export","delivery_terms","delivery_terms_place","place_of_terms","local_currency","office_of_entry","location_of_goods","waybillURL","pdfs","pdfUrls","onSubmit","generateC75Declaration","_component_CustomsDeclarationSectionOne","buyerIdProp","$route","customsDeclarationSectionOne","onUpdateSectionOne","_component_CustomsDeclarationSectionTwo","customsDeclarationSectionTwo","onUpdateSectionTwo","_component_CustomsDeclarationSectionThree","customsDeclarationSectionThree","onUpdateSectionThree","_component_CustomsDeclarationSectionFour","customsDeclarationSectionFour","onUpdateSectionFour","save75Declaration","generatePreSignedValuationVersionTwo","generateBlanlValuationForPreSigning","sellers","seller","rows","selectedSeller","buyers","selectedBuyer","termsOfDelivery","contractNumber","myBuyerId","sellerNameAddress","declarantStatus","relatedParties","updateSection","relatedDetails","influencePrice","influencePriceDetails","transactionValueApproximate","transactionValueDetails","restrictions","restrictionsDetails","conditions","conditionsDetails","royalties","royaltiesDetails","resale_disposal_boolean","resaleDetails","signatory_name","date_signed","status_of_signatory","signatory_phone_number","phoneContact","invoiceCurrency","indirectPayments","totalNationalCurrency","commissions","brokerage","containersPacking","materials","tools","materialsConsumed","engineering","proceedsResale","transportIncluded","handleTransportCheckboxChange","loadingHandling","insuranceIncluded","handleInsuranceCheckboxChange","totalB","checked","totalA","costAfterArrival","chargesAfterImportation","customsDutiesTaxes","totalC","valueDeclared","foreignCurrency","totalValueDeclared","CustomsDeclarationSectionOne","CustomsDeclarationSectionTwo","CustomsDeclarationSectionThree","CustomsDeclarationSectionFour","syncData","getCountries","newC75","entryNumber","buyerNameAddress","declarantNameAddress","getCurrentDate","create75Declaration","updateC75Declaration","declarantPhone","phone","declarationData","indirectPayment","prepareDeclarationObject","sellerCountry","buyerCountry","currencyFullName","transportConverted","generatePreSignedValuation","updateFields","convertTinyIntoString","responseData","seller_name_and_address","buyer_name_address","declarant_name_address","terms_of_delivery","name_date_contract","number_date_invoice","seller_id","buyer_id","declarant_id","related_parties_boolean","influence_price_boolean","transaction_value_approximate_boolean","restrictions_disposal_boolean","sale_price_condition_boolean","royalties_boolean","indirect_payment","costs_commissions","costs_brokerage","costs_containers_packing","goods_free_of_charge_materials","goods_free_of_charge_tools","goods_free_of_charge_materials_consumed","goods_engineering_development","royalties_license_fee","procees_resale_disposal","cost_delivery_transport","cost_delivery_loading","cost_delivery_insurance","cost_transport_after_arrival","charges_construction","customs_duties_taxes","scope","buyerName","buyerAddressLine1","buyerAddressLine2","buyerCity","tinNumber","deleteBuyer","getBuyers","active","newBuyer","contries","addSeller","sellerName","sellerAddressLine1","sellerAddressLine2","sellerCity","deleteShipper","getSellers","getContries","newSeller","emailContact","declarantAddressLine1","declarantAddressLine2","declarantCity","declarantCountry","declarantImporter","deleteDeclarant","getDeclarants","fetchImporters","newDeclarant","city","addVessel","imoNumber","deleteVessel","getVessels","newVessel","baseCurrency","effectiveDate","groupedExchangeRates","base_currency_name","sortedExchangeRates","sort","a","b","groups","getCurrencyName","modifyExchangeRates","getExchangeRates","targetCurrency","lastUpdated","_component_VehicleEntry","handleCreate","isEditMode","handleFileChange","readToyotaFiles","supplierName","invoiceDate","updateVehicleData","vehicleCode","mvtCharge","caclulateVehicleTotalCost","deleteVehicle","fuelTypeOptions","seatPositionOptions","vehicleCodeOptions","updateVehicleDetialData","instructionList","instruction","edNumber","years","addChassis","addVehicle","inlandAmount","finalTotal","compareInvoiceStyle","calculatedTotal","compareInvoiceTotal","totalNumberOfVehicles","handleButtonClick","generateWorksheet","goToValuationFormPage","getVehiclesList","vehicleList","record","vehicleDetails","Boolean","referenceNumberRecord","invoiceDetails","emits","commercialInvoice","attachedSheet","instructionSheet","setYears","VehicleList","pageSetup","currentTotal","convertToFloat","handleTariffInput","formatTariffCode","selectedVehicle","mvtObject","createBlankChassis","chassis","interiorColor","createBlankVehicle","processedValue","totalCost","updateEntry","saveEntry","sanitizeVehicleData","thn_code","updateWaybill","formatInvoiceLines","invoiceLineId","formatVehicleLines","tin_number","broker_instructions","ed_number","vehicleLines","vendor_address","purchase_order","currentYear","startYear","fileKey","convertVehicleData","jsonArray","groupedByEDNumber","convertVehicleDataOld","groupedByProductCode","productCode","currentProductCode","commodityCodeChange","includeFullStops","getChargeData","formattedCharge","xmlResponse","VehicleEntry","handleEdit","fetchEntryDetails","commercialInvoicePromise","commercialInvoiceResponse","processVehicleData","updateCommodityCode","ci_invoice_id","processVehicleDataOld","cil_invoice_line_id","groupedByEDNumberCode","mapResponseToRecord","invoiceLineData","vehicleData","vehicleRequestData","selectedDate","reloadCharts","_component_InvoiceBucketsPerformance","reportDate","_component_ClassificationDailyPerformance","_component_ClassificationCodeMatchChart","_component_InvoiceLineBucketsPerformance","_component_InvoiceAIPerformance","_component_ClassificationScoreChart","chartDataReady","_component_Bar","chartOptions","chartData","ChartJS","register","Title","Legend","BarElement","CategoryScale","LinearScale","LineElement","PointElement","Bar","labels","datasets","yAxisID","order","borderColor","fill","responsive","scales","x","display","y","beginAtZero","y1","grid","drawOnChartArea","plugins","font","padding","top","bottom","legend","fetchData","processing_date","average_file_size","average_processing_time","total_score","_component_Doughnut","ArcElement","Doughnut","match_percentage","non_match_percentage","LineController","fetchedData","elements","elementIndex","handleBarClick","time_bucket","record_count","selectedBucket","entryIdsArray","entry_ids","entryIds","_createStaticVNode","score_bucket","invoiceLineIds","invoice_line_ids","line_bucket","InvoiceAIPerformance","ClassificationScoreChart","ClassificationCodeMatchChart","InvoiceLineBucketsPerformance","InvoiceBucketsPerformance","ClassificationDailyPerformance","classificationData","openInvoice","llm_recommended_classification_description","llm_recommended_classification_code_vat","llm_recommended_classification_code_duty","approved_classification_description","approved_classification_code_vat","approved_classification_code_duty","fetchClassificationDetails","routes","path","component","HelloWorld","ViewEntries","EntryDetails","CustomsDeclarationForm","BuyersPage","SellersPage","DeclarantsPage","VesselsPage","ExchangeRatesPage","VehicleEntryCreatePage","VehicleEntryEditPage","ApprovedClassificationEntries","PartialStorageEntries","FullStorageEntries","PerformanceDashboard","AllEntries","ClassificationAccuracyReport","router","createRouter","history","createWebHistory","app","createApp","App","use","Vue3Select","mount","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}